import { EventEmitter, VNode } from "../../stencil-public-runtime";
import { LoadableComponent } from "../../utils/loadable";
import { T9nComponent } from "../../utils/t9n";
import { HandleMessages } from "./assets/handle/t9n";
import { HandleChange, HandleNudge } from "./interfaces";
export declare class Handle implements LoadableComponent, T9nComponent {
  /**
   * @internal
   */
  activated: boolean;
  handleAriaTextChange(): void;
  /**
   * Value for the button title attribute
   */
  dragHandle: string;
  /**
   * Made into a prop for testing purposes only
   *
   * @internal
   */
  messages: HandleMessages;
  /**
   *
   *
   * @internal
   */
  setPosition: number;
  /**
   *
   *
   * @internal
   */
  setSize: number;
  /**
   *
   *
   * @internal
   */
  label: string;
  /**
   * Use this property to override individual strings used by the component.
   */
  messageOverrides: Partial<HandleMessages>;
  onMessagesChange(): void;
  connectedCallback(): void;
  componentWillLoad(): Promise<void>;
  componentDidLoad(): void;
  disconnectedCallback(): void;
  el: HTMLCalciteHandleElement;
  handleButton: HTMLElement;
  effectiveLocale: string;
  defaultMessages: HandleMessages;
  effectiveLocaleChange(): void;
  /**
   * Emitted when the handle is activated and the up or down arrow key is pressed.
   */
  calciteHandleNudge: EventEmitter<HandleNudge>;
  /**
   * Emitted when the handle is activated or deactivated.
   */
  calciteInternalHandleChange: EventEmitter<HandleChange>;
  /** Sets focus on the component. */
  setFocus(): Promise<void>;
  getAriaText(type: "label" | "live"): string;
  handleKeyDown: (event: KeyboardEvent) => void;
  handleBlur: () => void;
  render(): VNode;
}
