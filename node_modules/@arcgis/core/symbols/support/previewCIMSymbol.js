/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{px2pt as e,pt2px as t}from"../../core/screenUtils.js";import{OverrideHelper as i,CIMSymbolHelper as l}from"../cim/CIMSymbolHelper.js";import{CIMSymbolRasterizer as n}from"../cim/CIMSymbolRasterizer.js";import{mapCIMSymbolToGeometryType as a}from"../cim/utils.js";import{SymbolSizeDefaults as r}from"./previewUtils.js";import{renderSymbol as o}from"./renderUtils.js";const s=new n(null,!0),c=e(r.size),m=e(r.maxSize),u=e(r.lineWidth),f=1;async function h(e,t,i){const l=t?.size;let n=null!=l&&"object"==typeof l&&"width"in l?l.width:l,a=null!=l&&"object"==typeof l&&"height"in l?l.height:l;if(null==n||null==a)if("esriGeometryPolygon"===i)n=c,a=c;else{const l=await y(e,t,i);l&&(n=l.width,a=l.height),"esriGeometryPolyline"===i&&(n=u),n=null!=n&&isFinite(n)?Math.min(n,m):c,a=null!=a&&isFinite(a)?Math.max(Math.min(a,m),f):c}return"legend"===t.style&&"esriGeometryPolyline"===i&&(n=u),{width:n,height:a}}async function y(e,t,n){const{feature:a,fieldMap:r,viewParams:o}=t.cimOptions||t,c=await i.resolveSymbolOverrides(e.data,a,null,r,n,null,o);if(!c)return null;(e=e.clone()).data={type:"CIMSymbolReference",symbol:c},e.data.primitiveOverrides=void 0;const m=[];return l.fetchResources(c,s.resourceManager,m),l.fetchFonts(c,s.resourceManager,m),m.length>0&&await Promise.all(m),l.getEnvelope(c,null,s.resourceManager)}async function p(e,i={}){const{node:l,opacity:n,symbolConfig:r}=i,c=null!=r&&"object"==typeof r&&"isSquareFill"in r&&r.isSquareFill,m=i.cimOptions||i,u=m.geometryType||a(e?.data?.symbol),f=await h(e,i,u),{feature:y,fieldMap:p}=m,d=c||"esriGeometryPolygon"!==u?"preview":"legend",g=await s.rasterizeCIMSymbolAsync(e,y,f,d,p,u,null,m.viewParams,m.allowScalingUp);if(!g)return null;const{width:w,height:b}=g,M=document.createElement("canvas");M.width=w,M.height=b;M.getContext("2d").putImageData(g,0,0);const v=t(f.width),j=t(f.height),S=new Image(v,j);S.src=M.toDataURL(),S.ariaLabel=i.ariaLabel??null,S.alt=i.ariaLabel??"",null!=n&&(S.style.opacity=`${n}`);let C=S;if(null!=i.effectView){const e={shape:{type:"image",x:0,y:0,width:v,height:j,src:S.src},fill:null,stroke:null,offset:[0,0]};C=o([[e]],[v,j],{effectView:i.effectView,ariaLabel:i.ariaLabel})}return l&&C&&l.appendChild(C),C}export{p as previewCIMSymbol};
