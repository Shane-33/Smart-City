/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{l as n,s as t}from"../chunks/vec3.js";import{s as r}from"../chunks/vec4.js";const u=new Float32Array(1);function e(n){--n;for(let t=1;t<32;t<<=1)n|=n>>t;return n+1}function i(n,t,r){return Math.min(Math.max(n,t),r)}function a(n,t){return 0===t?0:Math.round(n/t)*t}function o(n){return 0==(n&n-1)}function c(n){return n--,n|=n>>1,n|=n>>2,n|=n>>4,n|=n>>8,n|=n>>16,++n}function f(n){return 10**Math.ceil(Math.LOG10E*Math.log(n))}function s(n,t,r){return n+(t-n)*r}function h(n,t,r,u,e){return s(u,e,(n-t)/(r-t))}function M(n){return n*Math.PI/180}function m(n){return 180*n/Math.PI}function b(n,t=1e-6){return(n<0?-1:1)/Math.max(Math.abs(n),t)}function l(n){return Math.acos(i(n,-1,1))}function F(n){return Math.asin(i(n,-1,1))}function N(n,t,r=1e-6){if(n===t)return!0;if(!Number.isFinite(n)||!Number.isFinite(t))return!1;return(n>t?n-t:t-n)<=r}const g=new DataView(new ArrayBuffer(Float64Array.BYTES_PER_ELEMENT));function E(n){return g.setFloat64(0,n),g.getBigInt64(0)}function B(n){return g.setBigInt64(0,n),g.getFloat64(0)}const I=BigInt("1000000"),w=x(1);function x(n){const t=E(n=Math.abs(n)),r=B(t<=I?I:t-I);return Math.abs(n-r)}function p(n,t,r=w){if(n===t)return!0;if(!Number.isFinite(n)||!Number.isFinite(t))return!1;if(null!=r){if(x(Math.min(Math.abs(n),Math.abs(t)))<r)return Math.abs(n-t)<=r}const u=E(n),e=E(t);if(u<0!=e<0)return!1;return!((u<e?e-u:u-e)>I)}function y(n,t,r=1e-6){if(n===t)return!0;if(!Number.isFinite(n)||!Number.isFinite(t))return!1;const u=Math.abs(n-t),e=Math.abs(n),i=Math.abs(t);if(0===n||0===t||e<1e-12&&i<1e-12){if(u>.01*r)return!1}else if(u/(e+i)>r)return!1;return!0}function A(n){return P(Math.max(-D,Math.min(n,D)))}function P(n){return u[0]=n,u[0]}function j(n,t){return t<n?0:1}function k(n,t,r){const u=i((r-n)/(t-n),0,1);return u*u*(3-2*u)}function v(r,u){const e=n(r),i=F(r[2]/e),a=Math.atan2(r[1]/e,r[0]/e);return t(u,e,i,a),u}function L(n,r){const u=n[0],e=n[1],i=n[2],a=Math.cos(e);t(r,u*a*Math.cos(i),u*a*Math.sin(i),u*Math.sin(e))}function T(n,t,u){return r(n,t[0],t[1],t[2],t[3]*u)}function _(n){const t=n[0]*n[0]+n[1]*n[1]+n[2]*n[2],r=n[3]*n[3]+n[4]*n[4]+n[5]*n[5],u=n[6]*n[6]+n[7]*n[7]+n[8]*n[8];return!(N(t,1)&&N(r,1)&&N(u,1))}function d(n,t){return(n%t+t)%t}const D=P(34028234663852886e22);export{l as acosClamped,T as applyOpacity,F as asinClamped,v as cartesianToSpherical,i as clamp,A as clampFloat32,M as deg2rad,N as floatEqualAbsolute,y as floatEqualRelative,p as floatEqualUlp,_ as hasScaling,o as isPowerOfTwo,s as lerp,d as moduloPositive,f as nextHighestPowerOfTen,e as nextHighestPowerOfTwo,c as nextPowerOfTwo,D as numberMaxFloat32,m as rad2deg,b as reciprocalClamped,a as roundToNearest,h as scale,k as smoothstep,L as sphericalToCartesian,j as step};
