/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{nextTick as e}from"./nextTick.js";import t from"./PerformanceSampler.js";import r from"./PooledArray.js";import{createResolver as s,isAborted as n,createAbortError as o}from"./promiseUtils.js";import{Milliseconds as a}from"./time.js";class i{constructor(e){this.phases=e,this.paused=!1,this.ticks=-1,this.removed=!1}}class c{constructor(e){this.callback=e,this.isActive=!0}remove(){this.isActive=!1}}let m=0,l=0;const p={time:a(0),deltaTime:a(0),elapsedFrameTime:a(0),frameDuration:a(0)},u=["prepare","preRender","render","postRender","update","finish"],f=[],h=new r;class d{constructor(e){this._task=e}remove(){this._task.removed=!0}pause(){this._task.paused=!0}resume(){this._task.paused=!1}}const w={frameTasks:h,willDispatch:!1,clearFrameTasks:T,dispatch:_,executeFrameTasks:x};function k(t){const r=new c(t);return f.push(r),w.willDispatch||(w.willDispatch=!0,e(_)),r}function v(e){const t=new i(e);return h.push(t),null==A&&(m=performance.now(),A=requestAnimationFrame(j)),new d(t)}let A=null;function T(e=!1){h.forAll((e=>{e.removed=!0})),e&&g()}function F(e){l=Math.max(0,e)}function j(){const e=performance.now();A=null,A=h.length>0?requestAnimationFrame(j):null,w.executeFrameTasks(e)}function x(e){const t=a(e-m);m=e;const r=l>0?l:1e3/60,s=Math.max(0,t-r);p.time=e,p.frameDuration=a(r-s);for(let n=0;n<u.length;n++){const r=performance.now(),s=u[n];h.forAll((r=>{if(r.paused||r.removed)return;0===n&&r.ticks++;r.phases[s]&&(p.elapsedFrameTime=a(performance.now()-e),p.deltaTime=0===r.ticks?a(0):t,r.phases[s]?.call(r,p))})),b[n].record(performance.now()-r)}g(),q.record(performance.now()-e)}const D=new r;function g(){h.forAll((e=>{e.removed&&D.push(e)})),h.removeUnorderedMany(D.data,D.length),D.clear()}function _(){for(;f.length;){const e=f.shift();e.isActive&&e.callback()}w.willDispatch=!1}function M(t=1,r){const a=s(),i=()=>{n(r)?a.reject(o()):0===t?a():(--t,e((()=>i())))};return i(),a.promise}function R(){const e=s(),t=v({postRender:()=>{t.remove(),k(e)}});return e.promise}const b=u.map((e=>new t(e))),q=new t("total");export{d as FrameTaskHandle,v as addFrameTask,w as debug,b as performanceInfo,q as performanceTotal,k as schedule,F as setFrameDuration,R as waitAnimationFrame,M as waitTicks};
