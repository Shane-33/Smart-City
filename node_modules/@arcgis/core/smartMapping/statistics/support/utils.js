/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import"../../../geometry.js";import e from"../../../core/Error.js";import{pt2px as t}from"../../../core/screenUtils.js";import{millisecondsPerTimeUnit as n}from"../../../core/timeUtils.js";import r from"../../../geometry/SpatialReference.js";import{quantizePoint as o}from"../../../geometry/support/quantizationUtils.js";import{isWrappable as i,getInfo as s}from"../../../geometry/support/spatialReferenceUtils.js";import{isTimeOnlyField as l,isNumericField as u,numericTypes as a}from"../../../layers/support/fieldUtils.js";import{evaluateDensityKernel as f,createValueFunction as m}from"../../../renderers/support/heatmapUtils.js";import{isAnyDateField as c}from"../../support/utils.js";import{processNullValue as d,getNormalizedValue as p}from"../../../statistics/utils.js";import{loadArcade as h}from"../../../support/arcadeOnDemand.js";import y from"../../../geometry/Point.js";let $=null;const g=/^(?<hh>([0-1][0-9])|([2][0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?([.](?<ms>\d+))?$/;function I(e,t,n){return e.x<0?e.x+=t:e.x>n&&(e.x-=t),e}function j(e,t,n,r){const l=i(n)?s(n):null,u=l?Math.round((l.valid[1]-l.valid[0])/t.scale[0]):null;return e.map((e=>{const n=new y(e.geometry);return o(t,n,n,n.hasZ,n.hasM),e.geometry=l?I(n,u??0,r[0]):n,e}))}function x(e,n=18,r,o,i,s){const l=new Float64Array(i*s);n=Math.round(t(n));let u=Number.POSITIVE_INFINITY,a=Number.NEGATIVE_INFINITY,c=0,d=0,p=0,h=0;const y=m(o,r);for(const{geometry:t,attributes:m}of e){const{x:e,y:r}=t,o=Math.max(0,e-n),$=Math.max(0,r-n),g=Math.min(s,r+n),I=Math.min(i,e+n),j=+y(m);for(let t=$;t<g;t++)for(let s=o;s<I;s++){const o=t*i+s,m=f(s-e,t-r,n),y=l[o];c=l[o]+=m*j;const $=c-y;d+=$,p+=$*$,c<u&&(u=c),c>a&&(a=c),h++}}if(!h)return{mean:0,stddev:0,min:0,max:0,mid:0,count:0};const $=(a-u)/2;return{mean:d/h,stdDev:Math.sqrt((p-d*d/h)/h),min:u,max:a,mid:$,count:h}}function w(e){const t=g.exec(e);if(!t)return null;const{hh:r,mm:o,ss:i,ms:s}=t.groups;return Number(r)*n.hours+Number(o)*n.minutes+Number(i)*n.seconds+Number(s||0)}async function b(e,t,n=!0){if(!t)return[];const{field:o,field2:i,field3:s,fieldDelimiter:u,fieldInfos:a,timeZone:f}=e,m=o&&a?.find((e=>e.name.toLowerCase()===o.toLowerCase())),y=!!m&&l(m),g=!!m&&c(m),I=e.valueExpression,j=e.normalizationType,x=e.normalizationField,b=e.normalizationTotal,F=[],N=e.viewInfoParams;let v=null,E=null;if(I){if(!$){const{arcadeUtils:e}=await h();$=e}$.hasGeometryOperations(I)&&await $.enableGeometryOperations(),v=$.createFunction(I),E=N?$.getViewInfo({viewingMode:N.viewingMode,scale:N.scale,spatialReference:new r(N.spatialReference)}):null}const U=e.fieldInfos,M=!(t[0]&&"declaredClass"in t[0]&&"esri.Graphic"===t[0].declaredClass)&&U?{fields:U}:null;return t.forEach((e=>{const t=e.attributes;let r;if(I){const t=M?{...e,layer:M}:e,n=$.createExecContext(t,E,f);r=$.executeFunction(v,n)}else t&&(r=t[o],i?(r=`${d(r)}${u}${d(t[i])}`,s&&(r=`${r}${u}${d(t[s])}`)):"string"==typeof r&&n&&(g?r=r?new Date(r).getTime():null:y&&(r=r?w(r):null)));if(j&&"number"==typeof r&&isFinite(r)){const e=t&&parseFloat(t[x]);r=p(r,j,e,b)}F.push(r)})),F}function F(e){const t=e.field,n=e.normalizationType,r=e.normalizationField;let o;return"field"===n?o="(NOT "+r+" = 0)":"log"!==n&&"natural-log"!==n&&"square-root"!==n||(o=`(${t} > 0)`),o}function N(e,t,n){const r=null!=t?e+" >= "+t:"",o=null!=n?e+" <= "+n:"";let i="";return i=r&&o?U(r,o):r||o,i?"("+i+")":""}function v(t,n,r,o){let i;return n?n.name!==t.objectIdField&&o.includes(n.type)||(i=new e(r,"'field' should be one of these types: "+o.join(","))):i=new e(r,"'field' is not defined in the layer schema"),i}function E(t,n,r){let o;return n?n.name!==t.objectIdField&&u(n)||(o=new e(r,"'field' should be one of these numeric types: "+a.join(","))):o=new e(r,"'field' is not defined in the layer schema"),o}function U(e,t){let n=null!=e?e:"";return null!=t&&t&&(n=n?"("+n+") AND ("+t+")":t),n}function M(t,n){if(t&&"intersects"!==t.spatialRelationship)return new e(n,"Only 'intersects' spatialRelationship is supported for featureFilter")}function T(t,n,r){const o=z({layer:t,fields:n});if(o.length)return new e(r,"Unknown fields: "+o.join(", ")+". You can only use fields defined in the layer schema");const i=O({layer:t,fields:n});return i.length?new e(r,"Unsupported fields: "+i.join(", ")+". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true"):void 0}function z(e){const t=e.layer;return e.fields.filter((e=>!t.getField(e)))}function O(e){const t=e.layer;return e.fields.filter((e=>{const n=t.getFieldUsageInfo(e);return!n||!n.supportsStatistics}))}function R(e,t,n){const r=[],o=[],i=[],s=[],l=[];e.forEach(((e,t)=>{const u=e.field?"field":"expression",a=e.field||e.valueExpression;e.field?(l.push(a),o.push(`var ${u}${t} = Number($feature["${a}"]);`)):(r.push(`function getValueForExpr${t}() {\n  ${a} \n}`),o.push(`var ${u}${t} = Number(getValueForExpr${t}());`)),n||i.push(`${u}${t} = IIf(${u}${t} < 0, 0, ${u}${t});`),s.push(`${u}${t}`)}));let u="return sum;";const a=r.length?null:l.reduce(((e,t)=>`${e} + ${t}`));let f=null;t||n?t?n||(u="return IIf(sum >= 0, sum, null);",a&&(f=`(( ${a} ) >= 0)`)):(u="return IIf(sum != 0, sum, null);",a&&(f=`(( ${a} ) <> 0)`)):(u="return IIf(sum > 0, sum, null);",a&&(f=`(( ${a} ) > 0)`));return{valueExpression:[r.length?r.join("\n"):"",o.join("\n"),i.join("\n"),`var sum = ${s.join(" + ")};`,u].filter(Boolean).join("\n\n"),sqlExpression:a,sqlWhere:f}}export{x as calculateHeatmapStats,b as getDataValues,N as getRangeExpr,F as getSQLFilterForNormalization,R as getSumOfAttributesExpr,U as mergeWhereClauses,j as quantizeFeatures,w as timeOnlyToMilliseconds,T as verifyBasicFieldValidity,v as verifyFieldType,M as verifyFilterValidty,E as verifyNumericField};
