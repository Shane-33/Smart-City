/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{update as t}from"../../core/arrayUtils.js";import"../../core/has.js";import{webglValidateShadersEnabled as e}from"./checkWebGLError.js";import{ContextType as i}from"./contextUtils.js";import{ShaderType as o,ResourceType as n}from"./enums.js";import{transpileShader as r}from"./ShaderTranspiler.js";const s=4294967295;class m{constructor(t,m,h,f,c=new Map){this._context=t,this._locations=f,this._uniformBlockBindings=c,this._refCount=1,this._compiled=!1,this._linesOfCode=0,this._nameToUniformLocation=new Map,this._nameToUniform1=new Map,this._nameToUniform1v=new Map,this._nameToUniform2=new Map,this._nameToUniform3=new Map,this._nameToUniform4=new Map,this._nameToUniformMatrix3=new Map,this._nameToUniformMatrix4=new Map,t||console.error("RenderingContext isn't initialized!"),0===m.length&&console.error("Shaders source should not be empty!"),this._context.type===i.WEBGL2&&(m=r(m,o.VERTEX_SHADER),h=r(h,o.FRAGMENT_SHADER)),this._vShader=a(this._context,o.VERTEX_SHADER,m),this._fShader=a(this._context,o.FRAGMENT_SHADER,h),_.enabled&&(this._linesOfCode=m.match(/\n/g).length+h.match(/\n/g).length+2,this._context.instanceCounter.increment(n.LinesOfCode,this._vShader,this._linesOfCode)),this._vShader&&this._fShader||console.error("Error loading shaders!"),this._context.instanceCounter.increment(n.Shader,this),e()&&(this.vertexShader=m,this.fragmentShader=h);const l=this._context.gl,g=l.createProgram();if(l.attachShader(g,this._vShader),l.attachShader(g,this._fShader),this._locations.forEach(((t,e)=>l.bindAttribLocation(g,t,e))),l.linkProgram(g),e()&&!l.getProgramParameter(g,l.LINK_STATUS)&&console.error(`Could not link shader\nvalidated: ${l.getProgramParameter(g,l.VALIDATE_STATUS)}, gl error ${l.getError()}, vertex: ${l.getShaderParameter(this._vShader,l.COMPILE_STATUS)}, fragment: ${l.getShaderParameter(this._fShader,l.COMPILE_STATUS)}, info log: ${l.getProgramInfoLog(g)}, vertex source: ${this.vertexShader}, fragment source: ${this.fragmentShader}`),this._context.type===i.WEBGL2){const t=l;for(const[e,i]of this._uniformBlockBindings){const o=t.getUniformBlockIndex(g,e);o<s&&t.uniformBlockBinding(g,o,i)}}this._glName=g,this._context.instanceCounter.increment(n.Program,this)}get glName(){return this._glName}get hasGLName(){return null!=this._glName}get compiled(){if(this._compiled)return!0;const t=this._context.gl.getExtension("KHR_parallel_shader_compile");return null==t||null==this.glName?(this._compiled=!0,!0):(this._compiled=!!this._context.gl.getProgramParameter(this.glName,t.COMPLETION_STATUS_KHR),this._compiled)}dispose(){if(--this._refCount>0)return;const t=this._context.gl,e=this._context.instanceCounter;this._nameToUniformLocation.forEach((t=>t&&e.decrement(n.Uniform,t))),this._nameToUniformLocation.clear(),this._vShader&&(this._linesOfCode>0&&(e.decrement(n.LinesOfCode,this._vShader,this._linesOfCode),this._linesOfCode=0),t.deleteShader(this._vShader),this._vShader=null,e.decrement(n.Shader,this)),this._fShader&&(t.deleteShader(this._fShader),this._fShader=null),this._glName&&(t.deleteProgram(this._glName),this._glName=null,e.decrement(n.Program,this))}ref(){++this._refCount}_getUniformLocation(t){const e=this._nameToUniformLocation.get(t);if(void 0!==e)return e;if(this.glName){const e=this._context.gl.getUniformLocation(this.glName,t);return this._nameToUniformLocation.set(t,e),e&&this._context.instanceCounter.increment(n.Uniform,e),e}return null}hasUniform(t){return null!=this._getUniformLocation(t)}setUniform1i(t,e){const i=this._nameToUniform1.get(t);void 0!==i&&e===i||(this._context.gl.uniform1i(this._getUniformLocation(t),e),this._nameToUniform1.set(t,e))}setUniform1iv(t,e){c(this._nameToUniform1v,t,e)&&this._context.gl.uniform1iv(this._getUniformLocation(t),e)}setUniform2iv(t,e){c(this._nameToUniform2,t,e)&&this._context.gl.uniform2iv(this._getUniformLocation(t),e)}setUniform3iv(t,e){c(this._nameToUniform3,t,e)&&this._context.gl.uniform3iv(this._getUniformLocation(t),e)}setUniform4iv(t,e){c(this._nameToUniform4,t,e)&&this._context.gl.uniform4iv(this._getUniformLocation(t),e)}setUniform1f(t,e){const i=this._nameToUniform1.get(t);void 0!==i&&e===i||(this._context.gl.uniform1f(this._getUniformLocation(t),e),this._nameToUniform1.set(t,e))}setUniform1fv(t,e){c(this._nameToUniform1v,t,e)&&this._context.gl.uniform1fv(this._getUniformLocation(t),e)}setUniform2f(t,e,i){const o=this._nameToUniform2.get(t);void 0===o?(this._context.gl.uniform2f(this._getUniformLocation(t),e,i),this._nameToUniform2.set(t,[e,i])):e===o[0]&&i===o[1]||(this._context.gl.uniform2f(this._getUniformLocation(t),e,i),o[0]=e,o[1]=i)}setUniform2fv(t,e){c(this._nameToUniform2,t,e)&&this._context.gl.uniform2fv(this._getUniformLocation(t),e)}setUniform3f(t,e,i,o){const n=this._nameToUniform3.get(t);void 0===n?(this._context.gl.uniform3f(this._getUniformLocation(t),e,i,o),this._nameToUniform3.set(t,[e,i,o])):e===n[0]&&i===n[1]&&o===n[2]||(this._context.gl.uniform3f(this._getUniformLocation(t),e,i,o),n[0]=e,n[1]=i,n[2]=o)}setUniform3fv(t,e){c(this._nameToUniform3,t,e)&&this._context.gl.uniform3fv(this._getUniformLocation(t),e)}setUniform4f(t,e,i,o,n){const r=this._nameToUniform4.get(t);void 0===r?(this._context.gl.uniform4f(this._getUniformLocation(t),e,i,o,n),this._nameToUniform4.set(t,[e,i,o,n])):void 0!==r&&e===r[0]&&i===r[1]&&o===r[2]&&n===r[3]||(this._context.gl.uniform4f(this._getUniformLocation(t),e,i,o,n),r[0]=e,r[1]=i,r[2]=o,r[3]=n)}setUniform4fv(t,e){c(this._nameToUniform4,t,e)&&this._context.gl.uniform4fv(this._getUniformLocation(t),e)}setUniformMatrix3fv(t,e,i=!1){c(this._nameToUniformMatrix3,t,e)&&this._context.gl.uniformMatrix3fv(this._getUniformLocation(t),i,e)}setUniformMatrix4fv(t,e,i=!1){c(this._nameToUniformMatrix4,t,e)&&this._context.gl.uniformMatrix4fv(this._getUniformLocation(t),i,e)}stop(){}}function a(t,i,n){const r=t.gl,s=r.createShader(i);return r.shaderSource(s,n),r.compileShader(s),e()&&!r.getShaderParameter(s,r.COMPILE_STATUS)&&(console.error("Compile error in ".concat(i===o.VERTEX_SHADER?"vertex":"fragment"," shader")),console.error(r.getShaderInfoLog(s)),console.error(h(n))),s}function h(t){let e=2;return t.replaceAll("\n",(()=>"\n"+f(e++)+":"))}function f(t){return t>=1e3?t.toString():("  "+t).slice(-3)}function c(e,i,o){const n=e.get(i);return n?t(n,o):(e.set(i,Array.from(o)),!0)}const _={enabled:!1};export{m as Program,_ as test};
