/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import"../../core/has.js";import{BufferType as e,CompressedTextureFormat as r,SizedPixelFormat as t,RenderbufferFormat as s,PixelFormat as c}from"./enums.js";function a(e){const r=e.gl;switch(r.getError()){case r.NO_ERROR:return null;case r.INVALID_ENUM:return"An unacceptable value has been specified for an enumerated argument";case r.INVALID_VALUE:return"An unacceptable value has been specified for an argument";case r.INVALID_OPERATION:return"The specified command is not allowed for the current state";case r.INVALID_FRAMEBUFFER_OPERATION:return"The currently bound framebuffer is not framebuffer complete";case r.OUT_OF_MEMORY:return"Not enough memory is left to execute the command";case r.CONTEXT_LOST_WEBGL:return"WebGL context is lost"}return"Unknown error"}function n(e,r){return e.vertexBuffers[r].byteLength/R(e.layout[r])}function R(e){return e[0].stride}function i(e,r,t,s,c=0){const a=e.gl;e.bindBuffer(t);for(const n of s){const t=r.get(n.name);void 0===t&&console.error(`There is no location for vertex attribute '${n.name}' defined.`);const s=c*n.stride;if(n.count<=4)a.vertexAttribPointer(t,n.count,n.type,n.normalized,n.stride,n.offset+s),a.enableVertexAttribArray(t),n.divisor>0&&e.gl2?.vertexAttribDivisor(t,n.divisor);else if(9===n.count)for(let r=0;r<3;r++)a.vertexAttribPointer(t+r,3,n.type,n.normalized,n.stride,n.offset+12*r+s),a.enableVertexAttribArray(t+r),n.divisor>0&&e.gl2?.vertexAttribDivisor(t+r,n.divisor);else if(16===n.count)for(let r=0;r<4;r++)a.vertexAttribPointer(t+r,4,n.type,n.normalized,n.stride,n.offset+16*r+s),a.enableVertexAttribArray(t+r),n.divisor>0&&e.gl2?.vertexAttribDivisor(t+r,n.divisor);else console.error("Unsupported vertex attribute element count: "+n.count)}}function o(r,t,s,c){const a=r.gl;r.bindBuffer(s);for(const e of c){const s=t.get(e.name);if(e.count<=4)a.disableVertexAttribArray(s),e.divisor&&e.divisor>0&&r.gl2?.vertexAttribDivisor(s,0);else if(9===e.count)for(let t=0;t<3;t++)a.disableVertexAttribArray(s+t),e.divisor&&e.divisor>0&&r.gl2?.vertexAttribDivisor(s+t,0);else if(16===e.count)for(let t=0;t<4;t++)a.disableVertexAttribArray(s+t),e.divisor&&e.divisor>0&&r.gl2?.vertexAttribDivisor(s+t,0);else console.error("Unsupported vertex attribute element count: "+e.count)}r.unbindBuffer(e.ARRAY_BUFFER)}function E(e){switch(e){case c.ALPHA:case c.LUMINANCE:case c.RED:case c.RED_INTEGER:case t.R8:case t.R8I:case t.R8UI:case t.R8_SNORM:case s.STENCIL_INDEX8:return 1;case c.LUMINANCE_ALPHA:case c.RG:case c.RG_INTEGER:case t.RGBA4:case t.R16F:case t.R16I:case t.R16UI:case t.RG8:case t.RG8I:case t.RG8UI:case t.RG8_SNORM:case t.RGB565:case t.RGB5_A1:case s.DEPTH_COMPONENT16:return 2;case c.DEPTH_COMPONENT:case c.RGB:case c.RGB_INTEGER:case t.RGB8:case t.RGB8I:case t.RGB8UI:case t.RGB8_SNORM:case t.SRGB8:case s.DEPTH_COMPONENT24:return 3;case c.DEPTH_STENCIL:case c.DEPTH24_STENCIL8:case c.RGBA:case c.RGBA_INTEGER:case t.RGBA8:case t.R32F:case t.R11F_G11F_B10F:case t.RG16F:case t.R32I:case t.R32UI:case t.RG16I:case t.RG16UI:case t.RGBA8I:case t.RGBA8UI:case t.RGBA8_SNORM:case t.SRGB8_ALPHA8:case t.RGB9_E5:case t.RGB10_A2UI:case t.RGB10_A2:case s.DEPTH_STENCIL:case s.DEPTH_COMPONENT32F:case s.DEPTH24_STENCIL8:return 4;case s.DEPTH32F_STENCIL8:return 5;case t.RGB16F:case t.RGB16I:case t.RGB16UI:return 6;case t.RG32F:case t.RG32I:case t.RG32UI:case t.RGBA16F:case t.RGBA16I:case t.RGBA16UI:return 8;case t.RGB32F:case t.RGB32I:case t.RGB32UI:return 12;case t.RGBA32F:case t.RGBA32I:case t.RGBA32UI:return 16;case r.COMPRESSED_RGB_S3TC_DXT1_EXT:case r.COMPRESSED_RGBA_S3TC_DXT1_EXT:return.5;case r.COMPRESSED_RGBA_S3TC_DXT3_EXT:case r.COMPRESSED_RGBA_S3TC_DXT5_EXT:return 1;case r.COMPRESSED_R11_EAC:case r.COMPRESSED_SIGNED_R11_EAC:case r.COMPRESSED_RGB8_ETC2:case r.COMPRESSED_SRGB8_ETC2:case r.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:case r.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:return.5;case r.COMPRESSED_RG11_EAC:case r.COMPRESSED_SIGNED_RG11_EAC:case r.COMPRESSED_RGBA8_ETC2_EAC:case r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:return 1}return 0}export{i as bindVertexBufferLayout,E as getBytesPerElementFormat,a as getErrorString,R as getStride,o as unbindVertexBufferLayout,n as vertexCount};
