/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{createLength as n}from"../../core/quantityUtils.js";import{lengthUnitFromSpatialReference as t,verticalLengthUnitFromSpatialReference as r}from"../../core/unitUtils.js";import{o as e,s as i}from"../../chunks/vec3.js";import{c as l}from"../../chunks/vec3f64.js";import{projectVectorToVector as o}from"../../geometry/projection/projectVectorToVector.js";import{equals as c}from"../../geometry/support/spatialReferenceUtils.js";import{computeEuclideanMeasurementSR as u}from"./measurementUtils.js";var a;function s(n){return p(n,a.Direct)}function f(n){return p(n,a.Horizontal)}function p(r,e){const{hasZ:i,spatialReference:l}=r,o=u(l);let c=0;const s=t(o);if(null==s)return null;const f=e===a.Direct?x:Z;for(const n of r.paths){if(n.length<2)continue;const t=n.length-1;for(let r=0;r<t;++r){const t=n[r];D[0]=t[0],D[1]=t[1],D[2]=i?t[2]:0;const e=n[r+1];H[0]=e[0],H[1]=e[1],H[2]=i?e[2]:0;const o=f(D,H,l);if(null==o)return null;c+=o.value}}return n(c,s)}function h(n,t){const{spatialReference:r}=n;return c(r,t.spatialReference)?(D[0]=n.x,D[1]=n.y,D[2]=n.hasZ?n.z:0,H[0]=t.x,H[1]=t.y,H[2]=t.hasZ?t.z:0,v(D,H,r)):null}function z(n,t){const{spatialReference:r}=n;return c(r,t.spatialReference)?(D[0]=n.x,D[1]=n.y,D[2]=n.hasZ?n.z:0,H[0]=t.x,H[1]=t.y,H[2]=t.hasZ?t.z:0,x(D,H,r)):null}function m(n,t){const{spatialReference:r}=n;return c(r,t.spatialReference)?(D[0]=n.x,D[1]=n.y,D[2]=n.hasZ?n.z:0,H[0]=t.x,H[1]=t.y,H[2]=t.hasZ?t.z:0,Z(D,H,r)):null}function y(n,t){const{spatialReference:r}=n;return c(r,t.spatialReference)?(D[0]=n.x,D[1]=n.y,D[2]=n.hasZ?n.z:0,H[0]=t.x,H[1]=t.y,H[2]=t.hasZ?t.z:0,d(D,H,r)):null}function R(n){return D[0]=n.x,D[1]=n.y,D[2]=n.hasZ?n.z:0,g(D,n.spatialReference)}function v(t,r,e){const i=V(t,r,e);return null!=i?{direct:n(i.direct,i.unit),horizontal:n(i.horizontal,i.unit),vertical:n(i.vertical,i.unit)}:null}function x(t,r,e){const i=V(t,r,e,a.Direct);return null!=i?n(i.direct,i.unit):null}function Z(t,r,e){const i=V(t,r,e,a.Horizontal);return null!=i?n(i.horizontal,i.unit):null}function j(t,r,e){const i=V(t,r,e,a.Vertical);return null!=i?n(Math.abs(i.verticalSigned),i.unit):null}function d(t,r,e){const i=V(t,r,e,a.Vertical);return null!=i?n(i.verticalSigned,i.unit):null}function g(t,e){const i=r(e);return null!=i?n(t[2],i):null}function V(n,r,l,c){const s=u(l),f=t(s);if(null==f)return null;const p=r[2]-n[2];if(c===a.Vertical)return{verticalSigned:p,unit:f};if(!o(n,l,U,s)||!o(r,l,S,s))return null;if(c===a.Direct){return{direct:e(S,U),unit:f}}if(i(b,n[0],n[1],r[2]),!o(b,l,b,s))return null;const h=e(b,S);if(c===a.Horizontal)return{horizontal:h,unit:f};return{direct:e(S,U),horizontal:h,vertical:Math.abs(p),unit:f}}!function(n){n[n.Direct=0]="Direct",n[n.Horizontal=1]="Horizontal",n[n.Vertical=2]="Vertical"}(a||(a={}));const D=l(),H=l(),U=l(),S=l(),b=l();export{g as elevation,R as elevationOfPoint,x as euclideanDirectDistance,z as euclideanDirectDistanceBetweenPoints,v as euclideanDistance,h as euclideanDistanceBetweenPoints,Z as euclideanHorizontalDistance,m as euclideanHorizontalDistanceBetweenPoints,f as euclideanHorizontalLength,s as euclideanLength,j as verticalDistance,d as verticalSignedDistance,y as verticalSignedDistanceBetweenPoints};
