/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../../chunks/tslib.es6.js";import{clamp as i}from"../../../../../core/mathUtils.js";import{Milliseconds as e}from"../../../../../core/time.js";import"../../../../../core/Logger.js";import"../../../../../core/accessorSupport/ensureType.js";import"../../../../../core/arrayUtils.js";import"../../../../../core/has.js";import"../../../../../core/Error.js";import{subclass as o}from"../../../../../core/accessorSupport/decorators/subclass.js";import{c as r,f as s,n as a,j as n,l as m,g as c,i as p,p as h}from"../../../../../chunks/vec3.js";import{c as l,f as _}from"../../../../../chunks/vec3f64.js";import{applyAll as y}from"../../../camera/constraintUtils.js";import{ConstraintTypes as C}from"../../../camera/constraintUtils/ConstraintTypes.js";import{InteractionType as f}from"../../../camera/constraintUtils/InteractionType.js";import{TiltMode as j}from"../../../camera/constraintUtils/TiltMode.js";import{getVoxelWasm as u}from"../../../layers/VoxelWasm.js";import{PointToPointAnimationController as g}from"../PointToPointAnimationController.js";import{contentIntersectorOptions as w,zoomMaxDistanceModifier as v,zoomMinDistanceModifier as L,zoomDistanceModifier as d}from"../../utils/navigationUtils.js";import{Camera as b}from"../../../webgl-engine/lib/Camera.js";import{newIntersector as z}from"../../../webgl-engine/lib/Intersector.js";import{outExpo as M}from"../../../../animation/easing.js";const D=.6,R=4,S=60;let U=class extends g{constructor(){super(...arguments),this._zoomLocation=l(),this._tmpCamera=new b,this._tmpRayDir=l(),this._tmpCenter=l(),this._constraintOptions={selection:C.ALL,interactionType:f.ZOOM,interactionFactor:null,interactionStartCamera:new b,interactionDirection:null,tiltMode:j.TUMBLE}}zoomStep(t,e){if(!this.active)return;const o=this.view.state,{interactionStartCamera:h}=this._constraintOptions;h&&(this.animation.finished?h.copyFrom(o.camera):this.animation.cameraAt(1,h)),this._tmpCamera.copyFrom(o.camera);const _=z(this.view.state.viewingMode);let y=!1;t>0?(y=this.intersectionHelper.intersectScreenFreePointFallback(e,this._zoomLocation,0===this.view.map.ground.opacity?w:{}),this.intersectionHelper.intersectRay(this._tmpCamera.ray,_,this._tmpCenter)&&(this._tmpCamera.center=this._tmpCenter)):this.intersectionHelper.intersectRay(this._tmpCamera.ray,_,this._zoomLocation)?this._tmpCamera.center=this._zoomLocation:r(this._zoomLocation,this._tmpCamera.center);const C=D**t;let f=this.view._stage.renderView.getMinimalDepthForArea(u(this.view),e[0],e[1],this.view.state.camera,S);s(O,this._tmpCamera.eye,this._zoomLocation),a(O,O);const j=i(Math.min(d,1/Math.abs(n(T,O)))*Math.abs(this.view.camera.position.z),L,v);if(f=null!=f?f:j,f){const t=l();s(t,this._zoomLocation,this._tmpCamera.eye),(f<m(t)||!y)&&(a(t,t),c(this._zoomLocation,this._tmpCamera.eye,p(t,t,f)))}this._updateCamera(this._tmpCamera,C,this._zoomLocation),this.begin(this._tmpCamera)}animationSettings(){return{duration:e(600),easing:M}}_updateCamera(t,i,e){s(this._tmpRayDir,e,t.eye);const o=m(this._tmpRayDir);let r=o*i;const a=i<=1,n=Math.max(R,1.01*t.nearFar[0]);0!==r&&(a&&r<n&&(r=n,i=r/o),Math.abs(o-r)<1e-6||(p(this._tmpRayDir,this._tmpRayDir,i),t.eye=s(F,e,this._tmpRayDir),t.center=h(F,t.center,e,1-i),y(this.view,t,this._constraintOptions)))}};U=t([o("esri.views.3d.state.controllers.local.ZoomStepController")],U);const F=l(),T=_(0,0,1),O=l();export{U as ZoomStepController};
