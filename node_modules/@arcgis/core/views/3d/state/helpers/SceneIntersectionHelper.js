/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import e from"../../../../core/PooledArray.js";import{castRenderScreenPointArray3 as t,createRenderScreenPointArray3 as r}from"../../../../core/screenUtils.js";import{g as n,n as i}from"../../../../chunks/vec3.js";import{c as s}from"../../../../chunks/vec3f64.js";import{create as o,copy as l,negativeInfinity as c,width as a,height as u,expandPointInPlace as h}from"../../../../geometry/support/aaBoundingRect.js";import{create as d}from"../../../../geometry/support/ray.js";import{sv3d as p}from"../../../../geometry/support/vectorStacks.js";import{ViewingMode as m}from"../../../ViewingMode.js";import{fromRenderAtEye as y,fromScreen as g}from"../../support/geometryUtils/ray.js";import{defaultTolerance as f,newIntersector as _}from"../../webgl-engine/lib/Intersector.js";import{StoreResults as R,IntersectorType as v}from"../../webgl-engine/lib/IntersectorInterfaces.js";import{isValidIntersectorResult as I,sliceFilterPredicate as w}from"../../webgl-engine/lib/intersectorUtils.js";class b{constructor(t,r,n){this.viewingMode=t,this._forEachLayer=r,this._view=n,this._externalIntersectionHandlers=new e,this._tolerance=f,this._tmpRay=d(),this._tmpRegion=o(),this._validateHUDIntersector=_(this.viewingMode),this._validateHUDIntersector.options.hud=!1}intersectScreen(e,t,r){return this.intersectRay(this._getPickRay(e,this._tmpRay),U(this.viewingMode),t,r)}intersectScreenFreePointFallback(e,t,r){return this.intersectRayFreePointFallback(this._getPickRay(e,this._tmpRay),t,r)}intersectRayFreePointFallback(e,t,r){return this.intersectRay(e,U(this.viewingMode),t,r)||this._intersectRayFreePointLocal(e,t)}intersectRay(e,t,r,n){return t.options.selectionMode=!1,t.options.store=R.MIN,this.computeIntersection(e,t,n),!!t.results.min&&t.results.min.getIntersectionPoint(r)}getCenterRayWithSubpixelOffset(e,t,r=.5,n=.5){return e.getRenderCenter(T,r,n),T[0]+=.0466,T[1]-=.0123,y(e,T,t)}intersectIntersectorScreen(e,t,r){this.computeIntersection(this._getPickRay(e,this._tmpRay),t,r)}intersectToolIntersectorScreen(e,t,r){const n=this._getPickRay(e,this._tmpRay);this.intersectToolIntersectorRay(n,t,r)}intersectToolIntersectorRay(e,t,r){t.options.selectionMode=!0,this.computeIntersection(e,t,r);const n=t.results.min;!!this._view.basemapTerrain&&this._view.basemapTerrain.opaque||I(n)&&n.intersector!==v.TERRAIN||(t.options.selectionMode=!1,this.computeIntersection(e,t,r))}setTolerance(e=f){this._tolerance=e}addIntersectionHandler(e){this._externalIntersectionHandlers.push(e),this._externalIntersectionHandlers.sort(((e,t)=>e.type===v.TERRAIN?1:t.type===v.TERRAIN?-1:0))}removeIntersectionHandler(e){null!=this._externalIntersectionHandlers.removeUnordered(e)&&this._externalIntersectionHandlers.sort(((e,t)=>e.type===v.TERRAIN?1:t.type===v.TERRAIN?-1:0))}_getPickRay(e,t){const r=this._view.state.camera;return g(r,e,t)}_intersectRayFreePointLocal(e,t){return this.viewingMode!==m.Local||null==e||n(t,e.origin,i(p.get(),e.direction)),!1}intersectElevationFromScreen(e,t,r=0,n=null){return this._intersectElevation(this._getPickRay(e,this._tmpRay),t,r,n)}_intersectElevation(e,r,i=0,s=null){if(null==e)return null;const o=null!=r?r.mode:"absolute-height",l=r?.offset??0,c="on-the-ground"!==o?l+i:0,a=c/this._view.renderCoordsHelper.unitInMeters;if("absolute-height"===o){if(this._view.renderCoordsHelper.intersectInfiniteManifold(e,c,L)){const e=this._view.computeMapPointFromVec3d(L);return e.z??=0,e.z-=l,e}return null}const u=this._view.state.camera,h=t(p.get());u.projectToRenderScreen(e.origin,h);const d=new H(null,this._forEachLayer),m=this._view.slicePlane,y=null!=m?w(m):null,g=_(this.viewingMode);g.options.store=R.MIN,g.options.verticalOffset=a;const f=e.origin,I=n(p.get(),f,e.direction);g.reset(f,I,u),g.point=h;const b=s?"type"in s&&"graphics"===s.type?e=>e.layerUid!==s.uid:e=>e.graphicUid!==s.uid:null;switch(o){case"relative-to-scene":{const e=e=>(!b||b(e))&&!!e.lastValidElevationBB;g.intersect(d.layers,h,this._tolerance,null,e),this._externalIntersectionHandlers.forAll((e=>{if(e.type===v.I3S||e.type===v.TERRAIN){const t=e.slicePlaneEnabled?y:null;e.intersect(g,t,g.rayBegin,g.rayEnd,h)}}));break}case"on-the-ground":case"relative-to-ground":this._externalIntersectionHandlers.forAll((e=>{if(e.isGround){const t=e.slicePlaneEnabled?y:null;e.intersect(g,t,g.rayBegin,g.rayEnd,h)}}))}if(g.results.min.getIntersectionPoint(L)){const e=this._view.computeMapPointFromVec3d(L);return e.z=i,e}return null}computeIntersection(e,r,i){if(null==e)return;const s=this._view.state.camera,o=t(p.get());s.projectToRenderScreen(e.origin,o);const l=new H(i,this._forEachLayer);r.options.selectOpaqueTerrainOnly=!i||!("include"in i||"exclude"in i);const c=e.origin,a=n(p.get(),e.origin,e.direction);r.reset(c,a,s),r.intersect(l.layers,o,this._tolerance);const u=this._view.slicePlane,h=null!=u?w(u):null;r.intersect(l.sliceableLayers,o,this._tolerance,h);const d=i&&(i.requiresGroundFeedback||i.enableDraped);this._externalIntersectionHandlers.forAll((e=>{const t=e.layerUid,n=Array.isArray(t),i=n?t:[t];n&&(r.options.filteredLayerUids=[]);let s=!1;for(const o of i){!l.filterLayerUid(o)?n&&r.options.filteredLayerUids.push(o):s=!0}if(r.options.isFiltered=!s,e.isGround&&d||!r.options.isFiltered){const t=e.slicePlaneEnabled?h:null;e.intersect(r,t,c,a,o)}}));const m=p.get(),y=this._view.basemapTerrain;if(i&&i.enableDraped&&null!=y.spatialReference&&r.results.ground.getIntersectionPoint(m)){const e=y.overlayManager.renderer,t=this._view.renderCoordsHelper.spatialReference,n=p.get();this._view.renderCoordsHelper.fromRenderCoords(m,n,y.spatialReference),n[2]=this._view.elevationProvider?.getElevation(m[0],m[1],m[2],t,"ground")??0,e.intersect(r,n,r.results.ground,(e=>l.filterRenderGeometry(e)))}r.sortResults(),this._processHUDResults(r)}_processHUDResults(e){const t=e.results.hud;l(this._tmpRegion,c);const r=this._view.state.camera,n=[],i=this._tmpRegion,s=e=>{const t=new j(e);r.projectToRenderScreen(e.target.center,t.screenPoint),t.screenPoint[0]=Math.floor(t.screenPoint[0]),t.screenPoint[1]=Math.floor(t.screenPoint[1]),n.push(t),h(i,t.screenPoint)};e.sortResults(t.all),null!=t.min.dist&&s(t.min);for(const l of t.all)t.min.target.object!==l.target.object&&t.max.target.object!==l.target.object&&s(l);if(null!=t.max.dist&&t.max.target.object!==t.min.target.object&&s(t.max),!n.length)return;i[0]===i[2]&&(i[2]+=1),i[1]===i[3]&&(i[3]+=1);const o=r.fullWidth,d=r.fullHeight,p=Math.max(0,i[0]-P),m=Math.max(0,i[1]-P),y=Math.min(a(i)+2*P,o-p),g=Math.min(u(i)+2*P,d-m),f=new Uint8Array(y*g*4);this._view._stage.renderer.readHUDVisibility(p,m,y,g,f);let _=!0;const v=null==e.results.max.dist;let I=0;for(const l of n)for(const t of M){if(f[4*(Math.min(l.screenPoint[0]+t[0],o)-i[0]+(Math.min(l.screenPoint[1]+t[1],d)-i[1])*y)]){_&&(e.results.min.copy(l.result),_=!1),v&&e.results.max.copy(l.result),e.options.store===R.ALL&&e.results.all.splice(I++,0,l.result);break}}}}const P=1,M=(()=>{const e=[],t=P;for(let r=-t;r<=t;r++)for(let n=-t;n<=t;n++)e.push([n+t,r+t]);return e})();class j{constructor(e){this.result=e,this.screenPoint=r()}}let x;function U(e){return x&&x.viewingMode===e||(x=_(e)),x}class H{constructor(e,t){this.layers=new Array,this.sliceableLayers=new Array,this.include=e?.include,this.exclude=e?.exclude,t((e=>{e.pickable&&this.filterLayerUid(e.apiLayerUid)&&(e.sliceable?this.sliceableLayers:this.layers).push(e)}))}filterLayerUid(e){const{include:t,exclude:r}=this;return null==e?null==t&&null==r:(null==t||t.has(e))&&(null==r||!r.has(e))}filterRenderGeometry(e){return this.filterLayerUid(e.layerUid)}}function E(e){return"object"==typeof e&&"intersect"in e}const L=s(),T=r();export{b as SceneIntersectionHelper,E as isIntersectionHandler};
