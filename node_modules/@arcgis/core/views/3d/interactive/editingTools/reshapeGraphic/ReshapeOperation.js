/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../../chunks/tslib.es6.js";import"../../../../../geometry.js";import e from"../../../../../core/Accessor.js";import{removeUnordered as i}from"../../../../../core/arrayUtils.js";import{unitRGBAFromColor as a}from"../../../../../core/colorUtils.js";import"../../../../../core/has.js";import n from"../../../../../core/Evented.js";import o from"../../../../../core/Handles.js";import{handlesGroup as r,makeHandle as s,destroyHandle as l}from"../../../../../core/handleUtils.js";import{destroyMaybe as p,removeMaybe as h}from"../../../../../core/maybe.js";import{zeroMeters as d,scale as u,createLength as c}from"../../../../../core/quantityUtils.js";import{watch as m,when as g,initial as _}from"../../../../../core/reactiveUtils.js";import{getMetersPerUnitForSR as f}from"../../../../../core/unitUtils.js";import{property as v}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/accessorSupport/ensureType.js";import{subclass as M}from"../../../../../core/accessorSupport/decorators/subclass.js";import{I as y}from"../../../../../chunks/mat4f64.js";import{l as O,f as x,p as b,s as E,g as G,i as S}from"../../../../../chunks/vec3.js";import{f as I,c as w}from"../../../../../chunks/vec3f64.js";import{UpdatingHandles as T}from"../../../../../core/support/UpdatingHandles.js";import V from"../../../../../geometry/Polyline.js";import{hasCompatibleTopology as H}from"../../../../../geometry/support/coordsUtils.js";import{projectPoint as A}from"../../../../../geometry/support/plane.js";import{sv3d as D}from"../../../../../geometry/support/vectorStacks.js";import{makeDehydratedPoint as L}from"../../../../../layers/graphics/dehydratedPoint.js";import{getGraphicEffectiveElevationInfo as j}from"../../../../../support/elevationInfoUtils.js";import{isVolumetricSymbol as P}from"../../../../../symbols/support/utils.js";import{Manipulator3D as U}from"../../Manipulator3D.js";import{createManipulatorMaterial as C,createManipulatorOutlineMaterial as N,placeAtGraphic as k}from"../../manipulatorUtils.js";import{RenderObject as R}from"../../RenderObject.js";import{SegmentLabels3D as F}from"../../SegmentLabels3D.js";import{SnappingVisualizer3D as z}from"../../SnappingVisualizer3D.js";import{screenToRenderPlaneFromEvent as X,convertToMapCoordinates as Z,screenToMapXYAtLocation as Y,screenToMapXYForGraphicAtLocation as q}from"../dragEventPipeline3D.js";import{orientation as W}from"../geometryUtils.js";import{ManipulatorType as K}from"../ManipulatorType.js";import{canMoveZ as B}from"../manipulatorUtils.js";import{Settings as J}from"../settings.js";import{createVisualElements as Q}from"../visualElementUtils.js";import{discRadiusSmall as $}from"../manipulations/config.js";import{ManipulationType as tt,MoveManipulation as et}from"../manipulations/MoveManipulation.js";import{axisConstrainedDragSign as it}from"../manipulations/moveUtils.js";import{MoveXYGraphicManipulation as at}from"../manipulations/MoveXYGraphicManipulation.js";import{createEdgeOffsetIntersectionPlane as nt,createEdgeOffsetOperation as ot,edgeOffsetRotationMatrix as rt,screenEdgeLengthSquared as st}from"./edgeOffsetUtils.js";import{OutlineVisualElement as lt}from"../../visualElements/OutlineVisualElement.js";import{GraphicState as pt}from"../../../layers/graphics/GraphicState.js";import{createExtrudedTriangle as ht,createSphereGeometry as dt}from"../../../webgl-engine/lib/GeometryUtil.js";import{MouseButton as ut}from"../../../../input/IViewEvents.js";import{sceneSnappingAtLocation as ct,addMapDelta as mt,createManipulatorDragEventPipeline as gt,dragAtLocation as _t,addScreenDelta as ft}from"../../../../interactive/dragEventPipeline.js";import{ManipulatorStateFlags as vt,ManipulatorStateCustomFlags as Mt}from"../../../../interactive/interfaces.js";import{EditGeometryOperations as yt}from"../../../../interactive/editGeometry/EditGeometryOperations.js";import{AccumulationBehaviour as Ot}from"../../../../interactive/editGeometry/interfaces.js";import{SnappingContext as xt}from"../../../../interactive/snapping/SnappingContext.js";import{createSnapDragEventPipelineStep as bt}from"../../../../interactive/snapping/SnappingDragPipelineStep.js";import{ReshapeEdgeOffsetTooltipInfo as Et}from"../../../../interactive/tooltip/ReshapeTooltipInfos.js";import{Tooltip as Gt}from"../../../../interactive/tooltip/Tooltip.js";import{TranslateGraphicZTooltipInfo as St,TranslateGraphicXYTooltipInfo as It,TranslateGraphicTooltipInfo as wt,TranslateVertexZTooltipInfo as Tt,TranslateVertexXYTooltipInfo as Vt,TranslateVertexTooltipInfo as Ht}from"../../../../interactive/tooltip/TranslateTooltipInfos.js";import{makeElevationField as At}from"../../../../interactive/tooltip/fields/fields.js";import{autoAreaByElevationMode as Dt}from"../../../../support/automaticAreaMeasurementUtils.js";import{autoHorizontalDistanceByElevationModeBetweenPoints as Lt,autoLengthByElevationMode as jt}from"../../../../support/automaticLengthMeasurementUtils.js";import{verticalSignedDistanceBetweenPoints as Pt,elevationOfPoint as Ut}from"../../../../support/euclideanLengthMeasurementUtils.js";import{geodesicDistance as Ct}from"../../../../support/geodesicLengthMeasurementUtils.js";import Nt from"../../../../../geometry/SpatialReference.js";let kt=class extends(n.EventedMixin(e)){constructor(t){super(t),this._selectedIndex=0,this._manipulatorHandles=new o,this._manipulatorInfos=[],this._numGrabbing=0,this._numDragging=0,this._reshapeEventState=qt.NONE,this._updatingHandles=new T,this._recreatingManipulators=!1,this._settings=new J({getTheme:()=>this.view.effectiveTheme}),this._translateGraphicTooltipInfo=null,this._translateGraphicXYTooltipInfo=null,this._translateGraphicZTooltipInfo=null,this._translateVertexTooltipInfo=null,this._translateVertexXYTooltipInfo=null,this._translateVertexZTooltipInfo=null,this._edgeOffsetTooltipInfo=null,this.outputGeometry=null,this._vertexLaserLineVisualElement=null}initialize(){const{graphic:t,view:e}=this,i=this._settings.manipulators,n=i.vertex;this._vertexManipulatorMaterial=C(a(n.color),n.renderOccluded),this._vertexManipulatorOutlineMaterial=N(a(n.outlineColor),n.renderOccluded),this._vertexManipulatorHoverOutlineMaterial=N(a(n.hoverOutlineColor),n.renderOccluded);const o=i.edge;this._edgeManipulatorMaterial=C(a(o.color),o.renderOccluded),this._edgeManipulatorOutlineMaterial=N(a(o.outlineColor),o.renderOccluded);const r=i.edgeOffset;this._edgeOffsetManipulatorMaterial=C(a(r.color),r.renderOccluded,!1),this._edgeOffsetManipulatorHoverMaterial=C(a(r.hoverColor),r.renderOccluded,!1);const s=i.selected;this._selectedManipulatorMaterial=C(a(s.color),s.renderOccluded),this._selectedManipulatorOutlineMaterial=N(a(s.outlineColor),s.renderOccluded),this._selectedManipulatorHoverOutlineMaterial=N(a(s.hoverOutlineColor),s.renderOccluded);const l=this._graphicState=new pt({graphic:t});this._tooltip=new Gt({view:e}),this.addHandles([m((()=>{const t=this._settings.manipulators;return{vertexSettings:t.vertex,edgeSettings:t.edge,edgeOffsetSettings:t.edgeOffset,selectedSettings:t.selected}}),(({vertexSettings:t,edgeSettings:e,edgeOffsetSettings:i,selectedSettings:a})=>{t.applyColor(this._vertexManipulatorMaterial),t.applyOutline(this._vertexManipulatorOutlineMaterial),t.applyHoverOutline(this._vertexManipulatorHoverOutlineMaterial),e.applyColor(this._edgeManipulatorMaterial),e.applyOutline(this._edgeManipulatorOutlineMaterial),i.applyColor(this._edgeOffsetManipulatorMaterial),i.applyHover(this._edgeOffsetManipulatorHoverMaterial),a.applyColor(this._selectedManipulatorMaterial),a.applyOutline(this._selectedManipulatorOutlineMaterial),a.applyHoverOutline(this._selectedManipulatorHoverOutlineMaterial)})),m((()=>l.displaying),(t=>{for(const e of this._manipulatorInfos)e.manipulator.available=t})),m((()=>({labels:this._segmentLabels,enabled:this._labelOptions.enabled,edgeOffsetEnabled:this.enableEdgeOffset})),(({labels:t,enabled:e,edgeOffsetEnabled:i})=>{null!=t&&(t.visible=e,t.edgeDistance=i?"far":"default")}),_),g((()=>!this._tooltipOptions.enabled),(()=>this._tooltip.clear()),_),this.view.trackGraphicState(l)])}destroy(){this._segmentLabels=p(this._segmentLabels),this._tooltip=p(this._tooltip),this._removeManipulators(),this._updatingHandles.destroy()}get inputGeometry(){return null!=this._editGeometryOperations?this._editGeometryOperations.data.geometry:null}set inputGeometry(t){this._recreateEditGeometryAndManipulators(t)}get updating(){return this._updatingHandles.updating}get manipulators(){return this.tool.manipulators}get view(){return this.tool.view}get graphic(){return this.tool.graphic}get enableZShape(){return this.tool.enableZShape}get enableZVertex(){return this.tool.enableZVertex}get enableMoveGraphic(){return this.tool.enableMoveGraphic}get enableMidpoints(){return this.tool.enableMidpoints}get enableEdgeOffset(){return this.tool.enableEdgeOffset}get _labelOptions(){return this.tool.labelOptions}get _tooltipOptions(){return this.tool.tooltipOptions}get _accentColor(){return this.view.effectiveTheme.accentColor}removeSelectedVertices(){const t=this._manipulatorInfos.filter((t=>t.manipulator.selected&&"vertex"===t.type));this._removeVertices(t)}onManipulatorSelectionChanged(){this.emit("manipulators-changed")}_removeManipulators(){this._manipulatorHandles.removeAll(),this._moveManipulation=p(this._moveManipulation),this._graphicMoveManipulation=p(this._graphicMoveManipulation),this.manipulators.removeAll(),this._manipulatorInfos=[],this._numGrabbing=0,this._numDragging=0}_createManipulators(t){if(null==this._editGeometryOperations)return;const e=j(this.graphic);for(const i of this._editGeometryOperations.data.components){const a=t?.byComponentIndex.get(i.index);for(const t of i.vertices){const i=a?.has(t.index);this._createVertexOrEdgeManipulator(t,e,i)}for(const t of i.edges)this._createVertexOrEdgeManipulator(t,e)}this._createGraphicMoveManipulation(),this._createMoveManipulation(e),this._createVisualElements()}get canRedo(){return null!=this._editGeometryOperations&&this._editGeometryOperations.canRedo}get canUndo(){return null!=this._editGeometryOperations&&this._editGeometryOperations.canUndo}redo(){if(null==this._editGeometryOperations)return null;const t=this._editGeometryOperations.redo();return null!=t&&(this.outputGeometry=this._editGeometryOperations.data.geometry,this._recreateManipulators()),t}undo(){if(null==this._editGeometryOperations)return null;this.emit("undo");const t=this._editGeometryOperations.undo();return null!=t&&(this.outputGeometry=this._editGeometryOperations.data.geometry,this._recreateManipulators()),t}_recreateManipulators(){this._recreatingManipulators||(this._recreatingManipulators=!0,this._removeManipulators(),this._tooltip.clear(),this._createManipulators(),this._recreatingManipulators=!1)}_recreateEditGeometryAndManipulators(t){const e={byComponentIndex:new Map};if(null!=t&&null!=this.inputGeometry&&H(t,this.inputGeometry))for(const a of this._manipulatorInfos)if("vertex"===a.type&&a.manipulator.selected){const{index:t,component:{index:i}}=a.handle,{byComponentIndex:n}=e,o=n.get(i)||new Set;o.add(t),n.set(i,o)}if(this._recreatingManipulators=!0,this._removeManipulators(),this._tooltip.clear(),this._editGeometryOperations=p(this._editGeometryOperations),this._segmentLabels=p(this._segmentLabels),null==t)return void(this._recreatingManipulators=!1);const i="mesh"===t.type?t.anchor:t;this._editGeometryOperations=yt.fromGeometry(i,this.view.state.viewingMode),this._createManipulators(e),this._segmentLabels=new F({context:{view:this.view,editGeometryOperations:this._editGeometryOperations,elevationInfo:j(this.graphic),labelOptions:this._labelOptions,graphic:this.graphic,graphicState:this._graphicState},visible:this._labelOptions.enabled}),this._recreatingManipulators=!1}_perGraphicManipulatorDragAction(t,e){if("end"===e.action)return e;let i=0;const a=[],n=this._manipulatorInfos.some((t=>"vertex"===t.type&&t.manipulator.selected)),o=t===Wt.SELECTED_OR_ALL&&n;for(const r of this._manipulatorInfos)"vertex"===r.type&&(r.manipulator.grabbing||o&&!r.manipulator.selected||a.push(r),i++);if(0===a.length)return e;this._moveVertices(a,e);if(a.length===i){if(this._updateEventState(qt.MOVING),this.destroyed)return e;this.emit("move",{type:"move",dx:e.screenDeltaX,dy:e.screenDeltaY,mover:this.graphic})}else{if(this._updateEventState(qt.RESHAPING),this.destroyed)return e;this.emit("reshape",{type:"reshape",mover:this.graphic})}return e}_isMultiVertexSelection(){return this._manipulatorInfos.reduce(((t,e)=>"vertex"===e.type&&e.manipulator.selected?t+1:t),0)>1}_perVertexManipulatorDragAction(t){if(this._updateEventState(qt.RESHAPING),this.destroyed)return;const{mapDeltaX:e,mapDeltaY:i,mapDeltaZ:a}=t;if(!e&&!i&&!a)return;const n=[];for(const o of this._manipulatorInfos)"vertex"===o.type&&(o.manipulator.selected&&!o.manipulator.grabbing||o===t.info)&&n.push(o);this._moveVertices(n,t,Ot.ACCUMULATE_STEPS),this.emit("reshape",{type:"reshape",mover:this.graphic})}_updateEventState(t){if(t===this._reshapeEventState)return!1;switch(t){case qt.NONE:if(0!==this._numGrabbing||0!==this._numDragging)return!1;switch(this._reshapeEventState){case qt.MOVING:this.emit("move",{type:"move-stop",dx:0,dy:0,mover:this.graphic});break;case qt.RESHAPING:this.emit("reshape",{type:"reshape-stop",mover:this.graphic})}break;case qt.MOVING:switch(this._reshapeEventState){case qt.NONE:this.emit("move",{type:"move-start",dx:0,dy:0,mover:this.graphic});break;case qt.RESHAPING:this.emit("reshape",{type:"reshape-stop",mover:this.graphic}),this.destroyed||this.emit("move",{type:"move-start",dx:0,dy:0,mover:this.graphic})}break;case qt.RESHAPING:switch(this._reshapeEventState){case qt.NONE:this.emit("reshape",{type:"reshape-start",mover:this.graphic});break;case qt.MOVING:this.emit("move",{type:"move-stop",dx:0,dy:0,mover:this.graphic}),this.destroyed||this.emit("reshape",{type:"reshape-start",mover:this.graphic})}}if(this.destroyed)return!1;const e=this._reshapeEventState!==t;return this._reshapeEventState=t,e}_createGraphicMoveManipulation(){const{tool:t,view:e}=this,i=this._graphicState;if(this._graphicMoveManipulation=new at({tool:t,view:e,graphicState:i}),this.enableMoveGraphic){let t=null;this._manipulatorHandles.add(this._graphicMoveManipulation.createDragPipeline(((e,i,a)=>{i.next((t=>this._trackNumDragging(t))).next((e=>("start"===e.action&&(t=this._editGeometryOperations.createUndoGroup()),e))).next((t=>this._perGraphicManipulatorDragAction(Wt.ALL,t))).next((t=>(this._updateTranslateGraphicTooltip(tt.XY,t),t))).next((e=>{"end"===e.action&&(this._tooltip.clear(),t=h(t))})),a.next((()=>this._onDragCancel(!0,(()=>t=h(t)))))}))),this._graphicMoveManipulation.forEachManipulator((t=>this._manipulatorHandles.add(this._watchAndUpdateGrabState(t,!1))))}else this._graphicMoveManipulation.forEachManipulator((t=>{t.grabbable=!1,t.cursor=null}));this._graphicMoveManipulation.forEachManipulator((t=>this._manipulatorHandles.add(t.events.on("immediate-click",(t=>{this._manipulatorInfos.some((t=>t.manipulator.selected))?this._clearSelection():this.emit("immediate-click",{...t,graphic:this.graphic}),t.stopPropagation()})))))}_createMoveManipulation(t){const{graphic:e,tool:i,view:a}=this,n=this._graphicState;this._moveManipulation=new et({tool:i,view:a,xyAvailable:!0,xyAxisAvailable:!0,zAvailable:this.enableZShape&&B(e),snapToScene:!1,radius:et.radiusForSymbol(e.symbol)}),this._moveManipulation.forEachManipulator((t=>this.addHandles([t.events.on("immediate-click",(i=>{this._moveManipulation.zManipulation.hasManipulator(t)||this._manipulatorInfos.some((t=>t.manipulator.selected))||this.emit("immediate-click",{...i,graphic:e}),i.stopPropagation()})),this._watchAndUpdateGrabState(t,!1)])));const o=t=>e=>{this.addHandles(e.events.on("focus-changed",(({action:e})=>{"focus"===e&&this._tooltipOptions.enabled?this._updateTranslateTooltip(t):this._tooltip.clear()})))};this._moveManipulation.xyManipulation.forEachManipulator(o(tt.XY)),this._moveManipulation.xyAxisManipulation.forEachManipulator(o(tt.XY_AXIS)),this._moveManipulation.zManipulation.forEachManipulator(o(tt.Z)),this._moveManipulation.elevationInfo={mode:"absolute-height",offset:0};const r=e.geometry.spatialReference;this.addHandles([this._moveManipulation.createDragPipeline(((a,n,o,r,s)=>{const{snappingStep:l,cancelSnapping:p}=bt({predicate:t=>!!t.info,snappingManager:i.snappingManager,snappingContext:new xt({editGeometryOperations:this._editGeometryOperations,elevationInfo:t,pointer:s,excludeFeature:e,visualizer:new z}),updatingHandles:this._updatingHandles,useZ:!1});return r=r.next((t=>(this._onDragCancel(),t))).next(p),{steps:o=o.next((t=>this._trackNumDragging(t))).next((t=>{const e=this._manipulatorInfos.filter((t=>"vertex"===t.type&&t.manipulator.selected));return t.manipulatorType===K.TRANSLATE_XY&&1===e.length?{...t,info:e[0],snapOrigin:e[0].handle.pos}:t})).next(ct(this.view,t,e)).next(...l).next(mt()).next((t=>this._perGraphicManipulatorDragAction(Wt.SELECTED_OR_ALL,t))).next((t=>(this._updateTranslateTooltip(a,t),t))),cancel:r}}),t,r,e),m((()=>n.displaying),(()=>this._updateMoveManipulationPosition()),_),n.on("changed",(()=>{this._recreatingManipulators||this._updateMoveManipulationPosition()})),m((()=>n.isDraped),(t=>{this._updateMoveManipulationPosition();const e="align-move-manipulation";t?this.addHandles(this.view.elevationProvider.on("elevation-change",(()=>this._updateMoveManipulationPosition())),e):this.removeHandles(e)}),_)])}_createVisualElements(){const{graphic:t,view:e}=this,i=Q({view:e,graphic:t,forEachManipulator:t=>{if(!this.destroyed&&!this._recreatingManipulators){this._graphicMoveManipulation.forEachManipulator(t),this._moveManipulation.forEachManipulator(t);for(const e of this._manipulatorInfos)t(e.manipulator,K.TRANSLATE_XY)}},onManipulatorsChanged:t=>this.on("manipulators-changed",t)});null!=i&&(this._outlineVisualElement=i.visualElement instanceof lt?i.visualElement:null),null!=this._outlineVisualElement&&this._manipulatorHandles.add(this._outlineVisualElement.events.on("attachment-origin-changed",(()=>{this._graphicState.isDraped||this._updateMoveManipulationPosition()}))),this._manipulatorHandles.add(i)}_createEdgeOffsetManipulator(t,e=j(this.graphic)){const i=this._settings.manipulators.edgeOffset,a=i.size/2,n=a+i.collisionPadding,o=a/n,s=o*Math.sqrt(3)/2;null==this._edgeOffsetManipulatorGeometryInside&&(this._edgeOffsetManipulatorGeometryInside=ht(this._edgeOffsetManipulatorMaterial,s,o/2,o/2,i.height,i.offset)),null==this._edgeOffsetManipulatorGeometryOutside&&(this._edgeOffsetManipulatorGeometryOutside=ht(this._edgeOffsetManipulatorMaterial,-s,o/2,o/2,i.height,-i.offset));const l=[new R(this._edgeOffsetManipulatorGeometryInside.instantiate(),vt.Unfocused),new R(this._edgeOffsetManipulatorGeometryInside.instantiate({material:this._edgeOffsetManipulatorHoverMaterial}),vt.Focused),new R(this._edgeOffsetManipulatorGeometryOutside.instantiate(),vt.Unfocused),new R(this._edgeOffsetManipulatorGeometryOutside.instantiate({material:this._edgeOffsetManipulatorHoverMaterial}),vt.Focused)],p=new U({view:this.view,renderObjects:l,elevationInfo:"on-the-ground"!==e.mode||P(this.graphic.symbol)?{mode:"absolute-height",offset:0}:e,worldOriented:!1,focusMultiplier:1,radius:n,available:!(!this.graphic.visible||!this.graphic.layer?.visible),collisionType:{type:"disc",direction:I(0,0,1)},collisionPriority:1,metadata:{deleting:!1}}),h=new U({view:this.view,worldSized:!0,worldOriented:!1,available:!(!this.graphic.visible||!this.graphic.layer?.visible),collisionPriority:-10,cursor:this.enableMoveGraphic?"move":"default",metadata:{deleting:!1}}),u={manipulator:p,handle:t,locationUpdateHandle:null,type:"edge",selectedIndex:0,edgeManipulator:h,elevationInfo:e,visibilityHandle:null};this._autoHideEdgeOffsetManipulator(u,i.minSquaredEdgeLength),this._updateEdgeOffsetManipulator(u);const c=[];for(const r of[u.handle.leftVertex,u.handle.rightVertex]){const t=this._getManipulatorInfoFromHandle(r);null!=t&&c.push(t.manipulator.events.on("location-update",(()=>this._updateEdgeOffsetManipulator(u))))}u.locationUpdateHandle=r(c),this._manipulatorHandles.add(u.locationUpdateHandle,p),this._manipulatorHandles.add([this._watchAndUpdateGrabState(p,!0),this._watchAndUpdateGrabState(h,!0)],p),this._manipulatorHandles.add(gt(p,this._createEdgeOffsetPipeline(u,e)),p),this._manipulatorHandles.add(gt(h,((t,i,a,n)=>{if("touch"===n){this._createEdgeOffsetPipeline(u,e)(t,i,a)}else if(this.enableMoveGraphic){const n=this.graphic,o=null!=n.geometry?n.geometry.spatialReference:null;i.next((t=>this._trackNumDragging(t))).next(_t(this.view,t.elevationAlignedLocation)).next(Y(this.view,t.elevationAlignedLocation,e,o,n)).next(ft()).next(mt()).next((t=>this._perGraphicManipulatorDragAction(Wt.ALL,t))).next((t=>(this._updateTranslateGraphicTooltip(tt.XY,t),t))).next((t=>{"end"===t.action&&this._tooltip.clear()})),a.next((()=>this._onDragCancel(!t.metadata.deleting)))}})),p);const m=t=>{this._manipulatorInfos.some((t=>t.manipulator.selected))?this._clearSelection():this.emit("immediate-click",{...t,graphic:this.graphic}),t.stopPropagation()};return this._manipulatorHandles.add([p.events.on("immediate-click",m),h.events.on("immediate-click",m),p.events.on("focus-changed",(({action:t})=>{const{_tooltipOptions:e,_tooltip:i}=this;"focus"===t&&e.enabled?(i.info=this._edgeOffsetTooltipInfo??=new Et({tooltipOptions:e}),i.info.distance=d,i.info.tooltipOptions=e,this._updateTooltipAreaOrTotalLength(i.info)):i.clear()}))],p),this._manipulatorInfos.push(u),this.manipulators.add(p),this.manipulators.add(h),this.emit("manipulators-changed"),u}_autoHideEdgeOffsetManipulator(t,e){const i=t.manipulator,a=t.edgeManipulator,n=()=>{t.visibilityHandle=h(t.visibilityHandle);const n=this._getManipulatorInfoFromHandle(t.handle.leftVertex),o=this._getManipulatorInfoFromHandle(t.handle.rightVertex),l=null!=n&&null!=o&&st(n.manipulator.renderLocation,o.manipulator.renderLocation,this.view.state.camera)<e;(!i.focused&&!a.focused||l)&&(i.grabbable=!l,a.grabbable=!l,t.visibilityHandle=r([i.disableDisplay(),s((()=>{i.grabbable=!0,a.grabbable=this.enableMoveGraphic}))]))};this._manipulatorHandles.add([i.events.on("focus-changed",n),a.events.on("focus-changed",n),s((()=>{h(t.visibilityHandle),a.metadata.deleting=!0,this.manipulators.remove(a)}))],i),n()}_updateEdgeOffsetManipulator(t){this._updateManipulatorPosition(t);const{coordinateHelper:e}=this._editGeometryOperations.data,i=nt(this.view,t.manipulator.elevationAlignedLocation,ot(e,t.handle,t.manipulator.elevationInfo)),a=this._getManipulatorInfoFromHandle(t.handle.leftVertex),n=this._getManipulatorInfoFromHandle(t.handle.rightVertex);if(null==a||null==n)return;const o=a.manipulator.renderLocation,r=n.manipulator.renderLocation,s=null!=i?rt(i,o,r):y;t.manipulator.modelTransform=s,t.edgeManipulator.elevationAlignedLocation=t.manipulator.elevationAlignedLocation,t.edgeManipulator.modelTransform=s;const l=O(x(Xt,o,r))/2;t.edgeManipulator.collisionType={type:"line",paths:[[[-l,0,0],[l,0,0]]]}}_createEdgeOffsetPipeline(t,e){return(i,a,n)=>{this._clearSelection();const{step:o,cleanup:r}=this._initializeEdgeOffset(t,e);a.next((t=>this._trackNumDragging(t))).next(_t(this.view,i.elevationAlignedLocation)).next(o).next(X(this.view)).next(Z(this.view,this._editGeometryOperations.data.spatialReference)).next(mt()).next(this._applyComputeEdgeOffsetDistanceStep()).next(this._applyEdgeOffsetStep(t)).next(this._showEdgeOffsetTooltip()).next((t=>{"end"===t.action&&r()})),n.next((()=>{i.metadata.deleting||(r(),this._onDragCancel())}))}}_initializeEdgeOffset(t,e){const{view:i}=this,n=this._editGeometryOperations,o=ot(n.data.coordinateHelper,t.handle,e),s=n.createUndoGroup(),p=nt(i,t.manipulator.elevationAlignedLocation,o);if(o.requiresSplitEdgeLeft){const e=this._getManipulatorInfoFromHandle(t.handle.leftVertex.leftEdge);null!=e&&this._splitEdgeManipulator(e,1)}if(o.requiresSplitEdgeRight){const e=this._getManipulatorInfoFromHandle(t.handle.rightVertex.rightEdge);null!=e&&this._splitEdgeManipulator(e,0)}const d=()=>new V({paths:[[t.handle.leftVertex.pos,t.handle.rightVertex.pos]],spatialReference:n.data.spatialReference}),u=this._settings,c=new lt({view:i,isDraped:this._graphicState.isDraped,geometry:d(),elevationInfo:t.elevationInfo,width:u.visualElements.lineGraphics.outline.width,attached:!1,isDecoration:!0});let g;const f=()=>{this._cleanEdgeOffsetCollapsedEdges(t),g=h(g)},v=this.on("undo",f);return g=r([m((()=>a(this._accentColor)),(t=>c.color=t),_),l(c),m((()=>this._graphicState.isDraped),(t=>c.isDraped=t)),this._graphicState.on("changed",(()=>c.geometry=d())),s,v]),c.attached=!0,{step:t=>null==o||null==p?(f(),null):{...t,operation:o,plane:p},cleanup:f}}_applyEdgeOffsetStep(t){return e=>{if(this.destroyed||null==e.operation)return e;this._updateEventState(qt.RESHAPING);const{mapDeltaX:i,mapDeltaY:a,mapDeltaZ:n}=e;return(i||a||n)&&(this._offsetEdge(t,e),this.emit("reshape",{type:"reshape",mover:this.graphic})),e}}_applyComputeEdgeOffsetDistanceStep(){return t=>{const{operation:e,mapEnd:i}=t;return null==e||null==i?t:("start"===t.action&&e.selectArrowFromStartPoint(i),{...t,signedDistance:e.signedDistanceToPoint(i)})}}_showEdgeOffsetTooltip(){return t=>{const{mapEnd:e,signedDistance:i,operation:a}=t,{_tooltip:n,_tooltipOptions:o}=this;return o.enabled&&null!=i?(n.info=this._edgeOffsetTooltipInfo??=new Et({tooltipOptions:o}),n.info.tooltipOptions=o,n.info.distance="end"===t.action?d:Ft(this._graphicState.isDraped,i*a.selectedArrow,e,a.plane,this._editGeometryOperations.data.coordinateHelper),this._updateTooltipAreaOrTotalLength(n.info),t):(n.clear(),t)}}_cleanEdgeOffsetCollapsedEdges(t){const e=t.handle.leftVertex.leftEdge?.leftVertex,i=t.handle.leftVertex,a=t.handle.rightVertex.rightEdge?.rightVertex,n=t.handle.rightVertex,o=this._editGeometryOperations.data.coordinateHelper,r=[];if(e&&o.distance(e.pos,i.pos)<Zt){const t=this._getManipulatorInfoFromHandle(i);null!=t&&r.push(t)}if(o.distance(i.pos,n.pos)<Zt||a&&o.distance(a.pos,n.pos)<Zt){const t=this._getManipulatorInfoFromHandle(n);null!=t&&r.push(t)}r.length&&this._removeVertices(r)}_computeVertexManipulatorSizeAndOutline(t){const e=t.size/2,i=e+t.collisionPadding;return{size:e/i,outlineSize:(e+t.outlineSize)/i}}_createVertexOrEdgeManipulator(t,e=j(this.graphic),i=!1){const{view:a}=this,n=this._settings;if("edge"===t.type){if(this.enableEdgeOffset)return this._createEdgeOffsetManipulator(t,e);if(!this.enableMidpoints)return null}if(null==this._vertexManipulatorGeometry||null==this._vertexManipulatorOutlineGeometry){const{size:t,outlineSize:e}=this._computeVertexManipulatorSizeAndOutline(n.manipulators.vertex);this._vertexManipulatorGeometry=dt(this._vertexManipulatorMaterial,t,16,16),this._vertexManipulatorOutlineGeometry=dt(this._vertexManipulatorOutlineMaterial,e,16,16)}if(null==this._edgeManipulatorGeometry||null==this._edgeManipulatorOutlineGeometry){const{size:t,outlineSize:e}=this._computeVertexManipulatorSizeAndOutline(n.manipulators.edge);this._edgeManipulatorGeometry=dt(this._edgeManipulatorMaterial,t,16,16),this._edgeManipulatorOutlineGeometry=dt(this._edgeManipulatorOutlineMaterial,e,16,16)}const{geometry:o}=this.graphic,s=o?.type,l="point"===s||"mesh"===s?[]:[new R(this._vertexManipulatorGeometry.instantiate(),Yt.Vertex|vt.Unselected),new R(this._vertexManipulatorOutlineGeometry.instantiate(),Yt.Vertex|vt.Unfocused|vt.Unselected),new R(this._vertexManipulatorOutlineGeometry.instantiate({material:this._vertexManipulatorHoverOutlineMaterial}),Yt.Vertex|vt.Focused|vt.Unselected),new R(this._vertexManipulatorGeometry.instantiate({material:this._selectedManipulatorMaterial}),vt.Selected),new R(this._vertexManipulatorOutlineGeometry.instantiate({material:this._selectedManipulatorOutlineMaterial}),vt.Selected|vt.Unfocused),new R(this._vertexManipulatorOutlineGeometry.instantiate({material:this._selectedManipulatorHoverOutlineMaterial}),vt.Selected|vt.Focused)];this.enableMidpoints&&l.push(new R(this._edgeManipulatorGeometry.instantiate({material:this._vertexManipulatorMaterial}),Yt.Edge|vt.Focused|vt.Unselected),new R(this._edgeManipulatorOutlineGeometry.instantiate({material:this._vertexManipulatorHoverOutlineMaterial}),Yt.Edge|vt.Focused|vt.Unselected),new R(this._edgeManipulatorGeometry.instantiate(),Yt.Edge|vt.Unfocused|vt.Unselected),new R(this._edgeManipulatorOutlineGeometry.instantiate(),Yt.Edge|vt.Unfocused|vt.Unselected));const p=new U({view:a,renderObjects:l,elevationInfo:e,focusMultiplier:1,touchMultiplier:1,available:!(!this.graphic.visible||!this.graphic.layer?.visible),metadata:{deleting:!1}});p.selected=i,this._setTypeSpecificManipulatorSettings(p,t,e);const d="edge"===t.type?{manipulator:p,handle:t,locationUpdateHandle:null,type:"edge",selectedIndex:0}:{manipulator:p,handle:t,type:"vertex",selectedIndex:0};if(this._manipulatorInfos.push(d),this.manipulators.add(p),this._updateManipulatorPosition(d),"edge"===d.type){const t=[];for(const e of[d.handle.leftVertex,d.handle.rightVertex]){const i=this._getManipulatorInfoFromHandle(e);null!=i&&t.push(i.manipulator.events.on("location-update",(()=>this._updateManipulatorPosition(d))))}d.locationUpdateHandle=r(t),this._manipulatorHandles.add(d.locationUpdateHandle,p)}this._manipulatorHandles.add(this._watchAndUpdateGrabState(p,!0),p);const u=gt(p,((t,i,a,n)=>{let o=null;const{snappingStep:r,cancelSnapping:s}=bt({predicate:()=>!this._isMultiVertexSelection(),snappingManager:this.tool.snappingManager,snappingContext:new xt({editGeometryOperations:this._editGeometryOperations,elevationInfo:e,pointer:n,excludeFeature:this.graphic,visualizer:new z}),updatingHandles:this._updatingHandles,useZ:!1});a=a.next((e=>(this._onDragCancel(!t.metadata.deleting,(()=>o=h(o))),e))).next(s),i.next((t=>this._trackNumDragging(t))).next((t=>{if("start"===t.action&&(o=this._editGeometryOperations.createUndoGroup()),"edge"===d.type){const e=this._splitEdgeManipulator(d);return{...t,info:e,snapOrigin:e.handle.pos}}return{...t,info:d,snapOrigin:d.handle.pos}})).next(_t(this.view,t.elevationAlignedLocation)).next(q(this.view,this.graphic,t.elevationAlignedLocation,t.location.spatialReference,this.graphic)).next(ct(this.view,e,this.graphic)).next(...r).next(mt()).next((e=>{this._perVertexManipulatorDragAction(e),"end"===e.action&&(o=h(o)),this._updateTranslateVertexTooltip(t,tt.XY,e)}))}));return this._manipulatorHandles.add([u,p.events.on("immediate-click",(t=>this._manipulatorClickCallback(t,d))),p.events.on("select-changed",(()=>{d.selectedIndex=++this._selectedIndex,this._updateMoveManipulationPosition()})),p.events.on("focus-changed",(({action:t})=>{"focus"===t&&"edge"!==d.type?this._updateTranslateVertexTooltip(p,tt.XY):this._tooltip.clear()}))],p),this.emit("manipulators-changed"),d}_trackNumDragging(t){switch(t.action){case"start":this._numDragging++;break;case"end":this._numDragging--}return t}_onDragCancel(t=!0,e){switch(this._numDragging--,t&&(this.undo(),this.outputGeometry=null!=this._editGeometryOperations?this._editGeometryOperations.data.geometry:null),null!=this.tool.snappingManager&&this.tool.snappingManager.doneSnapping(),this._tooltip.clear(),this._reshapeEventState){case qt.NONE:break;case qt.MOVING:this.emit("move",{type:"move",dx:0,dy:0,mover:this.graphic});break;case qt.RESHAPING:this.emit("reshape",{type:"reshape",mover:this.graphic})}e&&e(),this.destroyed||this._updateEventState(qt.NONE)}_setTypeSpecificManipulatorSettings(t,e,i){const{graphic:a}=this,n=this._settings;switch(e.type){case"vertex":{t.state=Yt.Vertex,t.selectable=!0,t.cursor="move",t.collisionPriority=2;const{size:e,collisionPadding:o}=n.manipulators.vertex;t.radius=e/2+o,t.elevationInfo=i;const{geometry:r}=a,s=r?.type;t.interactive=null!=s&&"point"!==s&&"mesh"!==s;break}case"edge":{t.state=Yt.Edge,t.selectable=!1,t.cursor="copy",t.collisionPriority=-1;const{size:e,collisionPadding:o}=n.manipulators.edge;t.radius=e/2+o,t.elevationInfo="on-the-ground"!==i.mode||P(a.symbol)?{mode:"absolute-height",offset:0}:i;break}}}_watchAndUpdateGrabState(t,e){return t.events.on("grab-changed",(i=>this._onGrabStateChanged(t,e,i.action,i.pointerType)))}_onGrabStateChanged(t,e,i,a="mouse"){if(!this._recreatingManipulators){if("start"===i)e&&this._updateSelection(t),this._numGrabbing++;else if(this._numGrabbing--,this._updateEventState(qt.NONE),this.destroyed)return;this._moveManipulation.interactive=!this._numGrabbing,("touch"!==a||this.enableEdgeOffset)&&(this._manipulatorInfos.forEach((t=>{const{manipulator:e}=t,{geometry:i}=this.graphic,a=i?.type;e.interactive=e.grabbing||!this._numGrabbing&&null!=a&&"point"!==a&&"mesh"!==a,"edgeManipulator"in t&&(t.edgeManipulator.interactive=t.edgeManipulator.grabbing||!this._numGrabbing)})),this._graphicMoveManipulation.forEachManipulator((t=>{t.interactive=t.grabbing||!this._numGrabbing})))}}_clearSelection(){for(const t of this._manipulatorInfos)t.manipulator.grabbing||(t.manipulator.selected=!1)}_updateSelection(t){t.grabbing&&!t.selected&&t.selectable&&(this._clearSelection(),t.selected=!0,this.emit("manipulators-changed"))}_removeManipulator(t){null!=t&&(t.manipulator.metadata.deleting=!0,this.manipulators.remove(t.manipulator),this._manipulatorHandles.remove(t.manipulator),i(this._manipulatorInfos,t),this.emit("manipulators-changed"))}_getManipulatorInfoFromHandle(t){if(t)for(const e of this._manipulatorInfos)if(t===e.handle)return e;return null}_updateManipulatorPosition(t){if(null==t)return;const e=this._editGeometryOperations;if("vertex"===t.type)t.manipulator.location=e.data.coordinateHelper.vectorToDehydratedPoint(t.handle.pos,zt),t.manipulator.grabbing&&null!=this._vertexLaserLineVisualElement&&(this._vertexLaserLineVisualElement.visualElement.intersectsWorldUpAtLocation=t.manipulator.renderLocation);else if("edge"===t.type){const i=this._getManipulatorInfoFromHandle(t.handle.leftVertex),a=this._getManipulatorInfoFromHandle(t.handle.rightVertex);if(null==i||null==a)return;const n=i.manipulator,o=a.manipulator;if(null!=t.manipulator.elevationInfo&&"on-the-ground"===t.manipulator.elevationInfo.mode){const i=n.location,a=o.location,r=.5,s=i.x+r*(a.x-i.x),l=i.y+r*(a.y-i.y),p=i.hasZ&&a.hasZ?0:void 0;t.manipulator.location=L(s,l,p,e.data.spatialReference)}else b(Xt,n.renderLocation,o.renderLocation,.5),t.manipulator.renderLocation=Xt}}_splitEdgeManipulator(t,e=.5){const i=this._editGeometryOperations,a=i.splitEdge(t.handle,e).createdVertex;t.locationUpdateHandle=h(t.locationUpdateHandle);const n=j(this.graphic);let o;this.enableEdgeOffset?(this._removeManipulator(t),o=this._createVertexOrEdgeManipulator(a)):(o=t,o.handle=a,o.type="vertex",this._setTypeSpecificManipulatorSettings(t.manipulator,t.handle,n)),a.leftEdge&&this._createVertexOrEdgeManipulator(a.leftEdge),a.rightEdge&&this._createVertexOrEdgeManipulator(a.rightEdge),this.outputGeometry=i.data.geometry,this._updateManipulatorPosition(o),this.enableEdgeOffset||this._updateTranslateVertexTooltip(o.manipulator,tt.XY),this._updateSelection(t.manipulator);const r=this._updateEventState(qt.RESHAPING),s=i.data.coordinateHelper.vectorToArray(o.handle.pos),l=i.data.components.indexOf(a.component);return this.emit("vertex-add",{type:"vertex-add",vertices:[{coordinates:s,componentIndex:l,vertexIndex:a.index}],added:s}),r&&this._updateEventState(qt.NONE),o}_updateMoveManipulationPosition(){const t=E(Xt,0,0,0);let e=0,i=!1,a=null,n=null;for(const o of this._manipulatorInfos)"vertex"===o.type&&(o.manipulator.selected?(e++,G(t,t,o.manipulator.renderLocation),null==a||o.selectedIndex>a.selectedIndex?(n=a,a=o):(null==n||o.selectedIndex>n.selectedIndex)&&(n=o)):i=!0);if(0===e){const t=this._graphicState.displaying&&this.enableMoveGraphic;this._moveManipulation.xyManipulation.available=t,this._moveManipulation.xyAxisManipulation.available=t,this._moveManipulation.xyAxisManipulation.orthogonalAvailable=t,this._moveManipulation.zManipulation.available=t&&this.enableZShape&&B(this.graphic),this._moveManipulation.angle=W(this.graphic.geometry),this._moveManipulation.radius=et.radiusForSymbol(this.graphic.symbol)}else{const t=this._graphicState.displaying;this._moveManipulation.xyManipulation.available=t,this._moveManipulation.xyAxisManipulation.available=t,this._moveManipulation.zManipulation.available=t&&this.enableZVertex&&B(this.graphic),this._moveManipulation.xyAxisManipulation.orthogonalAvailable=t&&1!==e;let i=0;if(null!=a){const t=a.handle.pos,e=null!=n?n.handle.pos:a.handle.leftEdge&&a.handle.leftEdge.leftVertex?a.handle.leftEdge.leftVertex.pos:null,o=null==n&&a.handle.rightEdge&&a.handle.rightEdge.rightVertex?a.handle.rightEdge.rightVertex.pos:null;e&&o?this._moveManipulation.xyAxisManipulation.available=!1:e?i=Rt(e,t):o&&(i=Rt(t,o))}this._moveManipulation.angle=i,this._moveManipulation.radius=$}0!==e&&i?(S(t,t,1/e),zt.spatialReference=this._editGeometryOperations.data.spatialReference,zt.hasZ=!0,this.view.renderCoordsHelper.fromRenderCoords(t,zt),this._moveManipulation.elevationAlignedLocation=zt):null==this._outlineVisualElement||this._graphicState.isDraped||null==this._outlineVisualElement.attachmentOrigin?k(this.view,this._moveManipulation,this.graphic):this._moveManipulation.elevationAlignedLocation=this._outlineVisualElement.attachmentOrigin}_removeVertices(t){const e=new Array,i=this._editGeometryOperations;for(const a of t)if("vertex"===a.type&&i.canRemoveVertex(a.handle.component)){e.push(a.handle),this._removeManipulator(a),this._removeManipulator(this._getManipulatorInfoFromHandle(a.handle.leftEdge)),this._removeManipulator(this._getManipulatorInfoFromHandle(a.handle.rightEdge));const t=i.removeVertices([a.handle]),n=t.removedVertices?.[0].createdEdge;n&&this._createVertexOrEdgeManipulator(n)}if(e.length>0){const t=e.map((t=>{const e=i.data.components.indexOf(t.component);return{coordinates:i.data.coordinateHelper.vectorToArray(t.pos),componentIndex:e,vertexIndex:t.index}}));this.outputGeometry=i.data.geometry;const a=this._updateEventState(qt.RESHAPING);if(this.destroyed)return;if(this.emit("vertex-remove",{type:"vertex-remove",removed:t.map((t=>t.coordinates)),vertices:t}),this.destroyed)return;if(a&&(this._updateEventState(qt.NONE),this.destroyed))return;this._updateMoveManipulationPosition()}}_moveVertices(t,e,i=("start"===e.action?Ot.NEW_STEP:Ot.ACCUMULATE_STEPS)){const a=this._editGeometryOperations;a.moveVertices(t.map((t=>t.handle)),e.mapDeltaX,e.mapDeltaY,e.mapDeltaZ,i),this.outputGeometry=a.data.geometry;for(const n of t)this._updateManipulatorPosition(n)}_offsetEdge(t,e){if(null==e.operation||null==e.signedDistance)return;const i=this._editGeometryOperations,a=e.operation.clone();a.distance=e.signedDistance,i.updateVertices([t.handle.leftVertex,t.handle.rightVertex],a),this.outputGeometry=i.data.geometry,this._updateManipulatorPosition(this._getManipulatorInfoFromHandle(t.handle.leftVertex)),this._updateManipulatorPosition(this._getManipulatorInfoFromHandle(t.handle.rightVertex))}_manipulatorClickCallback(t,e){t.shiftKey||this._clearSelection(),"vertex"===e.type&&(e.manipulator.selected=!e.manipulator.selected,t.button===ut.Right&&this._removeVertices([e])),"edge"===e.type&&t.button===ut.Left&&this._splitEdgeManipulator(e),t.stopPropagation()}_updateTranslateTooltip(t,e){const i=this._manipulatorInfos.filter((t=>"vertex"===t.type&&t.manipulator.selected));1===i.length?this._updateTranslateVertexTooltip(i[0].manipulator,t,e):this._updateTranslateGraphicTooltip(t,e)}_updateTranslateGraphicTooltip(t,e){const{_tooltipOptions:i,_tooltip:a}=this;if(!i.enabled)return;const n=this._graphicState.isDraped?"on-the-ground":"absolute-height";switch(t){case tt.XY:a.info=this._translateGraphicTooltipInfo??=new wt({tooltipOptions:i}),this._updateTranslateTooltipDistance(a.info,e,((t,e)=>Lt(t,e,n)));break;case tt.XY_AXIS:a.info=this._translateGraphicXYTooltipInfo??=new It({tooltipOptions:i}),this._updateTranslateTooltipDistance(a.info,e,((t,i)=>{const a=Lt(t,i,n);return u(a,it(e))}));break;case tt.Z:a.info=this._translateGraphicZTooltipInfo??=new St({tooltipOptions:i}),this._updateTranslateTooltipDistance(a.info,e,Pt)}a.info.tooltipOptions=i}_updateTranslateVertexTooltip(t,e,i){const{_tooltipOptions:a,_tooltip:n}=this;if(!a.enabled)return;const o=this._graphicState.isDraped?"on-the-ground":"absolute-height";switch(e){case tt.XY:n.info=this._translateVertexTooltipInfo??=new Ht({tooltipOptions:a}),this._updateTranslateTooltipDistance(n.info,i,((t,e)=>Lt(t,e,o))),this._updateTooltipAreaOrTotalLength(n.info);break;case tt.XY_AXIS:n.info=this._translateVertexXYTooltipInfo??=new Vt({tooltipOptions:a}),this._updateTranslateTooltipDistance(n.info,i,((t,e)=>{const a=Lt(t,e,o);return u(a,it(i))})),this._updateTooltipAreaOrTotalLength(n.info);break;case tt.Z:n.info=this._translateVertexZTooltipInfo??=new Tt({tooltipOptions:a}),this._updateTranslateTooltipDistance(n.info,i,Pt)}const r=Ut(t.elevationAlignedLocation);null!=r&&(n.info.elevation=At({actual:r})),n.info.tooltipOptions=a}_updateTranslateTooltipDistance(t,e,i){if(null!=e&&"end"!==e.action){const{mapStart:a,mapEnd:n}=e,o=i(a,n);t.distance=null!=o?o:d}else t.distance=d}_updateTooltipAreaOrTotalLength(t){const{geometry:e}=this.graphic;if(null==e)return t.area=null,void(t.totalLength=null);const i=this._graphicState.isDraped?"on-the-ground":"absolute-height";t.area="polygon"===e.type?Dt(e,i):null,t.totalLength="polyline"===e.type?jt(e,i):null}get test(){return{segmentLabels:this._segmentLabels,tooltip:this._tooltip}}};function Rt(t,e){return Math.atan2(e[1]-t[1],e[0]-t[0])+Math.PI/2}function Ft(t,e,i,a,n){if(t){const t=n.toXYZ(n.pointToVector(i)),o=A(a,t,D.get()),r=Ct(o,t,n.spatialReference);if(null!=r)return c(r.value*Math.sign(e),r.unit)}return c(e*f(i.spatialReference),"meters")}t([v()],kt.prototype,"_editGeometryOperations",void 0),t([v()],kt.prototype,"_segmentLabels",void 0),t([v({constructOnly:!0})],kt.prototype,"tool",void 0),t([v()],kt.prototype,"_tooltip",void 0),t([v()],kt.prototype,"inputGeometry",null),t([v()],kt.prototype,"outputGeometry",void 0),t([v({readOnly:!0})],kt.prototype,"updating",null),t([v()],kt.prototype,"manipulators",null),t([v()],kt.prototype,"view",null),t([v()],kt.prototype,"graphic",null),t([v()],kt.prototype,"enableZShape",null),t([v()],kt.prototype,"enableZVertex",null),t([v()],kt.prototype,"enableMoveGraphic",null),t([v()],kt.prototype,"enableMidpoints",null),t([v()],kt.prototype,"enableEdgeOffset",null),t([v()],kt.prototype,"_labelOptions",null),t([v()],kt.prototype,"_tooltipOptions",null),t([v()],kt.prototype,"_accentColor",null),kt=t([M("esri.views.3d.interactive.editingTools.reshapeGraphic.ReshapeOperation")],kt);const zt=L(0,0,void 0,Nt.WGS84),Xt=w(),Zt=1e-6;var Yt,qt,Wt;!function(t){t.Vertex=Mt.Custom1,t.Edge=Mt.Custom2}(Yt||(Yt={})),function(t){t[t.NONE=0]="NONE",t[t.MOVING=1]="MOVING",t[t.RESHAPING=2]="RESHAPING"}(qt||(qt={})),function(t){t[t.ALL=0]="ALL",t[t.SELECTED_OR_ALL=1]="SELECTED_OR_ALL"}(Wt||(Wt={}));export{kt as ReshapeOperation};
