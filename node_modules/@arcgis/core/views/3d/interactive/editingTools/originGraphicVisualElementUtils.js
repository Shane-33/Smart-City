/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{removeHandles as e,destroyHandle as t,refHandle as n}from"../../../../core/handleUtils.js";import{deg2rad as o}from"../../../../core/mathUtils.js";import{watch as i,initial as a}from"../../../../core/reactiveUtils.js";import{signal as r}from"../../../../core/signal.js";import{s}from"../../../../chunks/vec3.js";import{c as l}from"../../../../chunks/vec3f64.js";import{projectPointToVector as p}from"../../../../geometry/projection/projectPointToVector.js";import{projectVectorToVector as c}from"../../../../geometry/projection/projectVectorToVector.js";import{create as m,empty as h,getMin as u}from"../../../../geometry/support/aaBoundingBox.js";import{containsXY as d}from"../../../../geometry/support/aaBoundingRect.js";import{getGraphicEffectiveElevationInfo as f}from"../../../../support/elevationInfoUtils.js";import{GrabbingState as g}from"./GrabbingState.js";import{ManipulatorState as v}from"./ManipulatorState.js";import{Settings as y}from"./settings.js";import{ExtendedLineVisualElement as j}from"../visualElements/ExtendedLineVisualElement.js";import{LaserlineVisualElement as w}from"../visualElements/LaserlineVisualElement.js";import{PointVisualElement as E}from"../visualElements/PointVisualElement.js";import{evaluateElevationAlignmentAtPoint as b}from"../../layers/graphics/elevationAlignmentUtils.js";import{ElevationContext as S}from"../../layers/graphics/ElevationContext.js";import{GraphicState as T}from"../../layers/graphics/GraphicState.js";import{RenderOccludedFlag as D}from"../../webgl-engine/lib/Material.js";function P(t){const{view:n,graphic:o}=t,i=new T({graphic:o}),a=[],r=V(t,i,a);return x(t,i,a,r),a.push(n.trackGraphicState(i)),{visualElement:r,remove:()=>e(a)}}function x(e,n,l,p){const{view:m,graphic:d}=e,E=new y({getTheme:()=>m.effectiveTheme}),T=new j({view:m,extensionType:E.visualElements.zVerticalLine.extensionType,innerWidth:1,attached:!1,writeDepthEnabled:!1,renderOccluded:D.OccludeAndTransparent,isDecoration:!0});l.push(i((()=>E.visualElements.zVerticalLine),(e=>e.apply(T)),a));const P=new w({view:m,intersectsLineInfinite:!0,attached:!1,isDecoration:!0}),x=o(E.visualElements.heightPlaneAngleCutoff),V=new w({view:m,attached:!1,angleCutoff:x,isDecoration:!0}),L=f(e.graphic),M=S.fromElevationInfo(L),C="on-the-ground"===L.mode||!L.offset&&"absolute-height"!==L.mode,G=new v,B=r(1);l.push(i((()=>({heightPlane:E.visualElements.heightPlane,alpha:B.value})),(({heightPlane:e,alpha:t})=>e.apply(V,t)),a));const I=r(1);l.push(i((()=>({shadowStyle:E.visualElements.pointGraphics.shadowStyle,alpha:I.value})),(({shadowStyle:e,alpha:t})=>e.apply(P,t)),a));const k=()=>{G.update(e);const t=A(d),o=C&&(n.isDraped||null==t||!t.hasZ);let i=!0;if(o||null==t)i=!1;else{const e=b(t,m.elevationProvider,M,m.renderCoordsHelper);s(R,t.x,t.y,e),c(R,t.spatialReference,R,m.renderCoordsHelper.spatialReference),T.setStartEndFromWorldDownAtLocation(R),P.intersectsWorldUpAtLocation=R}const a=G.grabbingState&g.Z?E.visualElements.laserlineAlphaMultiplier:1;B.value=a;const r=h(U);!o&&n.displaying&&p.calculateMapBounds(r)&&c(u(r,R),m.spatialReference,R,m.renderCoordsHelper.spatialReference)?(V.heightManifoldTarget=R,V.attached=!0):V.attached=!1;const l=G.grabbingState&g.XY?E.visualElements.laserlineAlphaMultiplier:1;I.value=l;const f=i&&n.displaying&&!o;P.attached=f,T.attached=f};l.push(i((()=>[n.displaying,n.isDraped]),k),n.on("changed",k)),e.forEachManipulator((e=>{l.push(e.events.on("grab-changed",k))})),l.push(t(P)),l.push(t(T)),l.push(t(V)),k()}function V(e,n,o){const{view:i,graphic:a}=e,r=new E({view:i,geometry:A(a),elevationInfo:f(a),isDecoration:!0});return L(e,r,n,o),o.push(t(r)),r}function A(e){const t=e.geometry;return null==t?null:"point"===t.type?t:"mesh"===t.type?t.anchor.clone():null}function L(e,t,n,o){const r=()=>{t.attached=n.displaying},s=new y({getTheme:()=>e.view.effectiveTheme});M(e,t,n,o),s.visualElements.pointGraphics.outline.apply(t),o.push(i((()=>n.displaying),r,a))}function M(e,t,o,i){const{view:a,graphic:r}=e;let s=null;const l=e=>{null!=s&&(s.remove(),s=null),o.isDraped&&null!=e&&(s=C(a,e,(()=>{t.geometry=e})))},p=()=>{const e=A(r);l(e),t.geometry=e};i.push(o.on("changed",p),n((()=>s))),p()}function C(e,t,n){const o=e.elevationProvider.spatialReference;p(t,R,o);const i=R[0],a=R[1];return e.elevationProvider.on("elevation-change",(e=>{d(e.extent,i,a)&&n()}))}const R=l(),U=m();export{P as createVisualElements};
