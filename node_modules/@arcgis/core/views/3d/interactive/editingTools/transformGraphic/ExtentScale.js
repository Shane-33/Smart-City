/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{s as t,e}from"../../../../../chunks/vec2.js";import{a as s}from"../../../../../chunks/vec2f64.js";import{c as a,q as i,f as r,l as o,j as n}from"../../../../../chunks/vec3.js";import{c}from"../../../../../chunks/vec3f64.js";import{a as p,c as l}from"../../../../../chunks/boundedPlane.js";import{intersectRay as h}from"../../../../../geometry/support/plane.js";import{sv3d as d}from"../../../../../geometry/support/vectorStacks.js";import{ResizeManipulator as u}from"../../../analysis/Slice/ResizeManipulator.js";import{updateResizeHandle as m,isDiagonalResizeHandle as _,calculateDiagonalResizeHandleScale as S}from"../../../analysis/Slice/sliceToolUtils.js";import{screenToRenderPlane as g}from"../dragEventPipeline3D.js";import{ManipulatorType as f}from"../ManipulatorType.js";import{mapPlaneAutoHorizontalSizeByElevationMode as y}from"./extentUtils.js";import{fromScreenNormalized as z}from"../../../support/geometryUtils/ray.js";import{createManipulatorDragEventPipeline as x}from"../../../../interactive/dragEventPipeline.js";import{AccumulationBehaviour as M}from"../../../../interactive/editGeometry/interfaces.js";import{AccumulationType as v}from"../../../../interactive/editGeometry/operations/UpdateVertices.js";import{apply as B}from"../../../../interactive/editGeometry/support/editPlaneUtils.js";import{ExtentScaleTooltipInfo as b}from"../../../../interactive/tooltip/ExtentTooltipInfos.js";class j{get zMax(){if(!this._zMaxDirty)return this._zMax;const t=this._editGeometryOperations.data;if(t.geometry.hasZ){const e=t.coordinateHelper;this._zMax=Number.NEGATIVE_INFINITY;for(const s of t.components)for(const t of s.vertices){const s=e.getZ(t.pos)??0;this._zMax=Math.max(s,this._zMax)}}else this._zMax=0;return this._zMaxDirty=!1,this._zMax}constructor(e,a,i,r,o){this._tool=e,this._graphicState=a,this._editGeometryOperations=i,this._bounds=r,this._preserveAspectRatioStep=o,this._resizeHandles=[{direction:[1,0]},{direction:[1,1]},{direction:[0,1]},{direction:[-1,1]},{direction:[-1,0]},{direction:[-1,-1]},{direction:[0,-1]},{direction:[1,-1]}],this._scaleTooltipInfo=null,this._displayBoundsStart=p(),this._displayBoundsMarginStart=0,this._startScale=s(),this._endScale=s(),this._sizeStart=null,this._zMax=0,this._zMaxDirty=!0;const n=this._tool,c=n.view;this.resizeManipulators=this._resizeHandles.map((t=>{const e=new u(c,t);return n.addHandles([e.events.on("grab-changed",(t=>this._onResizeGrab(t))),this._createResizeDragPipeline(e,t)]),e})),n.manipulators.addMany(this.resizeManipulators),n.addHandles([n.on("graphic-scale-start",(e=>{t(this._startScale,e.xScale,e.yScale),t(this._endScale,e.xScale,e.yScale)})),n.on("graphic-scale",(e=>{t(this._endScale,e.xScale,e.yScale)})),n.on("graphic-scale-stop",(()=>{t(this._startScale,0,0),t(this._endScale,0,0)})),this._graphicState.on("changed",(()=>{"resize"!==n.inputState?.type&&(this._zMaxDirty=!0)}))])}destroy(){this.forEachManipulator((t=>{this._tool.manipulators.remove(t),t.destroy()}))}forEachManipulator(t){this.resizeManipulators.forEach((e=>t(e,f.SCALE)))}updateManipulators(t,e){this.resizeManipulators.forEach(((s,a)=>{m(s,this._resizeHandles[a],t,e)}))}getUpdatedTooltipInfo(){return this.resizeManipulators.some((t=>t.focused))?this._computeScaleTooltipInfo():null}_computeScaleTooltipInfo(){const t=this._tool,e=t.tooltipOptions,s=this._scaleTooltipInfo??=new b({tooltipOptions:e}),a=t.graphic.geometry;if(null==a)return null;const i=y(this._bounds.mapBounds,this.zMax,a.spatialReference,this._graphicState.isDraped);return null==i?null:(s.xSize=i[0],s.ySize=i[1],null!=this._sizeStart&&this.resizeManipulators.some((t=>t.dragging))?(s.xScale=i[0].value/this._sizeStart[0].value,s.yScale=i[1].value/this._sizeStart[1].value):(s.xScale=1,s.yScale=1),s)}_onResizeGrab({action:t,screenPoint:e}){const s=this._tool,a=this._bounds;if("start"!==t||!e||!s.graphic.geometry)return;const i=z(s.view.state.camera,e);h(a.displayBounds.plane,i,d.get())&&(a.backupMapBounds(),l(a.displayBounds,this._displayBoundsStart),this._displayBoundsMarginStart=a.displayBoundsMargin,this._sizeStart=y(a.mapBoundsStart,this.zMax,s.graphic.geometry.spatialReference,this._graphicState.isDraped),s.inputState={type:"resize"})}_createResizeDragPipeline(t,e){const s=this._tool,a=s.graphic;return x(t,((t,i,r)=>{null!=s.inputState&&(i.next((t=>("start"===t.action&&s.emit("graphic-scale-start",{graphic:a,xScale:1,yScale:1}),t))).next(g(s.view,this._displayBoundsStart.plane)).next((t=>({...t,handle:e}))).next(this._resizeDragRenderPlaneToFactors()).next(...this._preserveAspectRatioStep()).next(this._resizeDragUpdateGeometry()).next((t=>{const e={graphic:a,xScale:t.factor1,yScale:t.factor2};switch(t.action){case"start":case"update":s.emit("graphic-scale",e);break;case"end":s.inputState=null,s.emit("graphic-scale-stop",e)}return t})),r.next((()=>{null!=s.inputState&&s.emit("graphic-scale-stop",{graphic:a,xScale:1,yScale:1}),s.cancel()})))}))}_resizeDragRenderPlaneToFactors(){const t=this._bounds;return e=>{const s=this._displayBoundsStart,c=e.handle.direction,p=t.displayBoundsMargin,l=this._displayBoundsMarginStart,h=a(d.get(),s.origin);i(h,h,s.basis1,-c[0]),i(h,h,s.basis2,-c[1]);const u=r(d.get(),e.renderEnd,h),m=r(d.get(),e.renderStart,h),g=_(e.handle),f=S(s),y=S(t.displayBounds)/f,z=(t,e)=>{if(0===t)return 1;let s=o(e),a=.5*t*n(e,u)/s;const i=a<0?-1:1;if(g){a+=(s-.5*t*n(e,m)/s)*i*y}const r=s<1.5*l?1:E;return s=Math.max(s-l,E),i>0&&(a-=p),i*Math.max(i*(a/s),r)};return{...e,factor1:z(c[0],s.basis1),factor2:z(c[1],s.basis2)}}}_resizeDragUpdateGeometry(){const r=this._tool,o=this._bounds;return n=>{const p=a(c(),o.mapBoundsStart.origin);i(p,p,o.mapBoundsStart.basis1,-n.handle.direction[0]),i(p,p,o.mapBoundsStart.basis2,-n.handle.direction[1]);const h=t(s(),o.mapBoundsStart.basis1[0],o.mapBoundsStart.basis1[1]);e(h,h);const d=[];for(const t of this._editGeometryOperations.data.components)d.push(...t.vertices);const u="start"===n.action?M.NEW_STEP:M.ACCUMULATE_STEPS,m=this._editGeometryOperations.scaleVertices(d,p,h,n.factor1,n.factor2,u,v.REPLACE);return l(o.mapBoundsStart,o.mapBounds),B(m,o.mapBounds),r.graphic.geometry=this._editGeometryOperations.data.geometry,n}}}const E=1e-6;export{j as ExtentScale,E as scaleEpsilon};
