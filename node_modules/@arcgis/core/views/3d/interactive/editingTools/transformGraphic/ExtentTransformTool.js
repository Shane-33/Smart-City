/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../../chunks/tslib.es6.js";import e from"../../../../../core/Evented.js";import{makeHandle as i}from"../../../../../core/handleUtils.js";import{watch as a,initial as o}from"../../../../../core/reactiveUtils.js";import{lengthUnitFromSpatialReference as s}from"../../../../../core/unitUtils.js";import{property as n}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/accessorSupport/ensureType.js";import"../../../../../core/arrayUtils.js";import"../../../../../core/has.js";import{subclass as r}from"../../../../../core/accessorSupport/decorators/subclass.js";import{containsXY as l}from"../../../../../geometry/support/aaBoundingRect.js";import{sm4d as p}from"../../../../../geometry/support/vectorStacks.js";import{calculateBoundedPlaneTranslateRotate as h,resizeNormal as c,resizeOutlineOnly as d}from"../../../analysis/Slice/sliceToolUtils.js";import{Manipulator3D as u}from"../../Manipulator3D.js";import{getGraphicAttachmentOrigin as m}from"../../manipulatorUtils.js";import{ManipulatorType as g}from"../ManipulatorType.js";import{canMoveZ as _}from"../manipulatorUtils.js";import{createVisualElements as v}from"../visualElementUtils.js";import{ExtentMove as y}from"./ExtentMove.js";import{ExtentRotate as f}from"./ExtentRotate.js";import{ExtentScale as b}from"./ExtentScale.js";import{TransformBounds as M}from"./extentUtils.js";import{PreserveAspectRatio as S}from"./PreserveAspectRatio.js";import{OutlineVisualElement as E}from"../../visualElements/OutlineVisualElement.js";import{GraphicState as x}from"../../../layers/graphics/GraphicState.js";import{InteractiveToolBase as A}from"../../../../interactive/InteractiveToolBase.js";import{EditGeometryOperations as O}from"../../../../interactive/editGeometry/EditGeometryOperations.js";import{unapply as R,apply as j}from"../../../../interactive/editGeometry/support/editPlaneUtils.js";import T from"../../../../interactive/sketch/SketchTooltipOptions.js";import{Tooltip as w}from"../../../../interactive/tooltip/Tooltip.js";let U=class extends(e.EventedMixin(A)){constructor(t){super(t),this.enableZ=!0,this.enableScaling=!0,this.enableRotation=!0,this.tooltipOptions=new T,this._preserveAspectRatio=new S,this.grabbing=!1,this.inputState=null,this._attachmentOrigin=null,this.type="transform-3d",this._outlineVisualElement=null}initialize(){const{view:t,graphic:e}=this,s=this._graphicState=new x({graphic:e}),n=e.geometry,r=this._editGeometryOperations=O.fromGeometry(n,t.state.viewingMode),l=this._bounds=new M(this,(()=>this._updateManipulators()),r.data);this._extentMove=new y(this,s,r,l),this._extentScale=new b(this,s,r,l,(()=>this._preserveAspectRatio.createDragEventPipelineStep())),this._extentRotate=new f(this,r,l),this.addHandles([a((()=>this.enableZ),(()=>this._updateManipulatorAvailability(this._extentMove.moveZManipulator,g.TRANSLATE_Z))),a((()=>this.enableScaling),(()=>this._extentScale.forEachManipulator((t=>this._updateManipulatorAvailability(t,g.SCALE))))),a((()=>this.enableRotation),(()=>this._updateManipulatorAvailability(this._extentRotate.rotateManipulator,g.ROTATE)))]),this._updateAllManipulatorAvailability();const p=v({view:t,graphic:e,forEachManipulator:t=>this._forEachManipulator(t),onManipulatorsChanged:()=>i()});if(null!=p){const{visualElement:t}=p;t instanceof E&&(this._outlineVisualElement=t,this.addHandles(t.events.on("attachment-origin-changed",(()=>this._bounds.updateDisplayBounds())))),this.addHandles(p)}this.addHandles([s.on("changed",(()=>this._onGeometryChanged())),a((()=>s.displaying),(()=>this._updateAllManipulatorAvailability())),a((()=>s.isDraped),(()=>this._graphicDrapedChanged()),o),a((()=>t.pointsOfInterest?.centerOnSurfaceFrequent.location),(()=>l.updateDisplayBounds())),t.trackGraphicState(s)]);const h=t=>{this.addHandles(t.events.on("grab-changed",(()=>{this.grabbing=t.grabbing,this._updateAllManipulatorAvailability()})))};this._forEachManipulator(h);const c=(t,i)=>{this.addHandles(t.events.on("immediate-click",(t=>{i===g.TRANSLATE_XY&&this.emit("immediate-click",{...t,graphic:e}),t.stopPropagation()})))};this._forEachManipulator(c),this._initializeTooltip(),this.finishToolCreation()}destroy(){this._extentMove.destroy(),this._extentScale.destroy(),this._extentRotate.destroy(),this._editGeometryOperations.destroy(),this._tooltip.destroy(),this._set("view",null),this._set("graphic",null)}_initializeTooltip(){const{view:t}=this,e=this._tooltip=new w({view:t}),i=()=>{e.info=this._getUpdatedTooltipInfo()};this.addHandles([this.on("graphic-translate-start",i),this.on("graphic-translate",i),this.on("graphic-translate-stop",(()=>{this._tooltip.clear()})),this.on("graphic-rotate-start",i),this.on("graphic-rotate",i),this.on("graphic-rotate-stop",i),this.on("graphic-scale-start",i),this.on("graphic-scale",i),this.on("graphic-scale-stop",i)]),this._forEachManipulator((t=>{this.addHandles([t.events.on("focus-changed",i),t.events.on("grab-changed",i),t.events.on("drag",(t=>{"cancel"===t.action?this._tooltip.clear():i()}))])}))}_getUpdatedTooltipInfo(){return this.tooltipOptions.enabled?this._extentMove.getUpdatedTooltipInfo()??this._extentScale.getUpdatedTooltipInfo()??this._extentRotate.getUpdatedTooltipInfo():null}_onGeometryChanged(){this._bounds.updateDisplayBounds()}_graphicDrapedChanged(){this.removeHandles(G),this._bounds.updateDisplayBounds(),this._graphicState.isDraped&&this.addHandles(this.view.elevationProvider.on("elevation-change",(t=>{null!=this._attachmentOrigin&&l(t.extent,this._attachmentOrigin.x,this._attachmentOrigin.y)&&this._bounds.updateDisplayBounds()})),G)}_updateManipulators(){if(!this.visible)return;const t=this._bounds.displayBounds,e=h(t,p.get());this._extentMove.updateManipulators(e,t),this._extentScale.updateManipulators(e,t),this._extentRotate.updateManipulators(e,t)}_updateAllManipulatorAvailability(){this._forEachManipulator(((t,e)=>this._updateManipulatorAvailability(t,e)))}_updateManipulatorAvailability(t,e){const i=this.grabbing&&!t.grabbing;if(t.interactive=!i,t instanceof u){const a=this._graphicState.displaying,o=this.enableZ&&_(this.graphic);switch(e){case g.ROTATE:t.available=a&&this.enableRotation;break;case g.SCALE:t.available=a&&(this.enableScaling||this.enableRotation||o),t.interactive=!i&&this.enableScaling,t.state=this.enableScaling?c:d;break;case g.TRANSLATE_Z:t.available=a&&o;break;default:t.available=a}}}_forEachManipulator(t){this._extentMove.forEachManipulator(t),this._extentScale.forEachManipulator(t),this._extentRotate.forEachManipulator(t)}get preserveAspectRatio(){return this._preserveAspectRatio.enabled}set preserveAspectRatio(t){this._preserveAspectRatio.enabled=t,this._set("preserveAspectRatio",t)}get moveUnit(){return s(this.view.spatialReference)??"meters"}get attachmentOrigin(){const t=this.graphic.geometry,e=this._graphicState.isDraped?null:this._outlineVisualElement?.attachmentOrigin;return this._attachmentOrigin=e??m(this.view,this.graphic)??t?.extent?.center,this._attachmentOrigin}reset(){}cancel(){if(this.canUndo){const t=this._editGeometryOperations.undo();R(t,this._bounds.mapBounds),this.graphic.geometry=this._editGeometryOperations.data.geometry}this.inputState=null}get canUndo(){return this._editGeometryOperations.canUndo}undo(){if(null!=this.inputState)this.view.activeTool=null;else if(this.canUndo){const t=this._editGeometryOperations.undo();R(t,this._bounds.mapBounds),this.graphic.geometry=this._editGeometryOperations.data.geometry}}get canRedo(){return this._editGeometryOperations.canRedo}redo(){if(this.canRedo){const t=this._editGeometryOperations.redo();j(t,this._bounds.mapBounds),this.graphic.geometry=this._editGeometryOperations.data.geometry}}get test(){return{moveZManipulator:this._extentMove.moveZManipulator,resizeManipulators:this._extentScale.resizeManipulators,rotateManipulator:this._extentRotate.rotateManipulator,tooltip:this._tooltip}}};t([n({constructOnly:!0,nonNullable:!0})],U.prototype,"view",void 0),t([n({constructOnly:!0,nonNullable:!0})],U.prototype,"graphic",void 0),t([n()],U.prototype,"enableZ",void 0),t([n()],U.prototype,"enableScaling",void 0),t([n()],U.prototype,"enableRotation",void 0),t([n({constructOnly:!0,type:T})],U.prototype,"tooltipOptions",void 0),t([n()],U.prototype,"preserveAspectRatio",null),t([n()],U.prototype,"moveUnit",null),t([n()],U.prototype,"grabbing",void 0),t([n()],U.prototype,"inputState",void 0),t([n({readOnly:!0})],U.prototype,"type",void 0),U=t([r("esri.views.3d.interactive.editingTools.transformGraphic.ExtentTransformTool")],U);const G="draped-elevation-changes";export{U as ExtentTransformTool};
