/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{LengthDimensionMeasureType as e}from"../../../../analysis/dimensionUtils.js";import{deg2rad as n}from"../../../../core/mathUtils.js";import{toUnit as t}from"../../../../core/quantityUtils.js";import{adaptiveVerticalLengthUnit as r,adaptiveLengthUnit as i}from"../../../../core/unitUtils.js";import{c as o}from"../../../../chunks/mat4.js";import{a}from"../../../../chunks/mat4f64.js";import{c as s,q as d,u as c,G as l,j as u,y as p,e as m,b as S,n as f,m as g}from"../../../../chunks/vec3.js";import{c as v,Z as R}from"../../../../chunks/vec3f64.js";import{Axis as A}from"../../../../geometry/support/Axis.js";import{sv3d as P}from"../../../../geometry/support/vectorStacks.js";import{makeDehydratedPoint as y}from"../../../../layers/graphics/dehydratedPoint.js";import{clonePoint as j}from"../../../../layers/graphics/hydratedFeatures.js";import{EuclideanSegment as E}from"../../interactive/visualElements/support/Segment.js";import{euclideanDirectDistance as h,euclideanDirectDistanceBetweenPoints as x}from"../../../support/euclideanLengthMeasurementUtils.js";function T(n,o,a){if(null==n)return null;const s=n.dimensionSegment.startRenderSpace,d=n.dimensionSegment.endRenderSpace,c=h(s,d,n.spatialReference);if(null==c)return null;const l=o===e.Vertical?r(c.value,c.unit,a):i(c.value,c.unit,a);return t(c,l)}function C(e){const{elevationAlignedStartPoint:n,elevationAlignedEndPoint:t,dimension:{offset:r,measureType:i,orientation:o}}=e;return{elevationAlignedStartPoint:n,elevationAlignedEndPoint:t,offset:r,measureType:i,orientation:o}}function H({elevationAlignedStartPoint:n,elevationAlignedEndPoint:t,offset:r,measureType:i,orientation:o},a,d=null){if(null==n||null==t)return null;const c=b(null!=d?d.directSegment:new E,{elevationAlignedStartPoint:n,elevationAlignedEndPoint:t},a),l=null!=d?d.primaryOffsetAxis:v();I(l,{measureType:i,elevationAlignedStartPoint:n,elevationAlignedEndPoint:t,directSegment:c,orientation:o,renderCoordsHelper:a});const u=null!=d?d.dimensionSegment:new E;return F({elevationAlignedStartPoint:n,elevationAlignedEndPoint:t})&&i===e.Vertical?(s(u.startRenderSpace,c.startRenderSpace),s(u.endRenderSpace,c.endRenderSpace)):G(u,{offsetAxis:l,offset:r,relativeToSegment:c,renderCoordsHelper:a}),{directSegment:c,dimensionSegment:u,primaryOffsetAxis:l,spatialReference:a.spatialReference}}function w(e,n,t,r){return n===k.Start?(s(e.startRenderSpace,t.startRenderSpace),s(e.endRenderSpace,r.startRenderSpace)):(s(e.startRenderSpace,t.endRenderSpace),s(e.endRenderSpace,r.endRenderSpace)),e}var k;function z(e,n,t,r){d(e.startRenderSpace,n.startRenderSpace,t,r),d(e.endRenderSpace,n.endRenderSpace,t,r)}function U(n,t,r,i){switch(t){case e.Direct:return b(n,r,i);case e.Horizontal:case e.Vertical:{const{elevationAlignedStartPoint:o,elevationAlignedEndPoint:a,dimension:s,geometry:d}=r;let c;if(s.measureType===e.Direct){c=M(d,i)===o.z>a.z,t===e.Horizontal&&(c=!c)}else c=!V(d);const[l,u]=c?[o,a]:[a,o],p=j(u,D);return t===e.Horizontal?p.z=l.z:(p.x=l.x,p.y=l.y),i.toRenderCoords(l,n.startRenderSpace),i.toRenderCoords(p,n.endRenderSpace),n}}}function b(e,n,t){return t.toRenderCoords(n.elevationAlignedStartPoint,e.startRenderSpace),t.toRenderCoords(n.elevationAlignedEndPoint,e.endRenderSpace),e}function M(e,n){const t=e.directSegment.eval(.5,P.get()),r=n.worldUpAtPosition(t,P.get()),i=e.dimensionSegment.eval(.5,P.get()),o=c(P.get(),i,t);return!l(o,R)&&u(o,r)>0}function V(e){const{startRenderSpace:n,endRenderSpace:t}=e.dimensionSegment,{startRenderSpace:r,endRenderSpace:i}=e.directSegment;return p(r,n)<p(i,t)}!function(e){e[e.Start=0]="Start",e[e.End=1]="End"}(k||(k={}));const D=y(0,0,0,null);function O(e,n,t,r){const{directSegment:i}=t,o=I(P.get(),{measureType:n,directSegment:i,renderCoordsHelper:r}),a=G(q,{offsetAxis:o,offset:0,relativeToSegment:i,renderCoordsHelper:r}).eval(.5,P.get()),s=c(P.get(),e,a);return u(s,o)*r.unitInMeters}const q=new E;function I(t,r){const{measureType:i,elevationAlignedStartPoint:a,elevationAlignedEndPoint:d,directSegment:{startRenderSpace:p,endRenderSpace:g},directSegment:v,renderCoordsHelper:y}=r,j=v.eval(.5,P.get()),E=y.worldUpAtPosition(j,P.get()),h=y.worldBasisAtPosition(j,A.Y,P.get());switch(i){case e.Horizontal:s(t,E);break;case e.Vertical:u(p,E)<u(g,E)?c(t,g,p):c(t,p,g),S(t,t,E),S(t,t,E);break;case e.Direct:{const e=r.orientation??0;if(F({elevationAlignedStartPoint:a,elevationAlignedEndPoint:d}))o(B,-n(e),E),m(t,h,B);else{const r=c(P.get(),g,p),i=S(P.get(),r,E);S(i,i,r),o(B,n(e),r),m(t,i,B)}break}}return l(t,R)?s(t,h):f(t,t)}const B=a();function F({elevationAlignedStartPoint:e,elevationAlignedEndPoint:n}){return null!=e&&null!=n&&e.x===n.x&&e.y===n.y}function G(e,n){const{offsetAxis:t,offset:r,relativeToSegment:{startRenderSpace:i,endRenderSpace:o},relativeToSegment:a,renderCoordsHelper:s}=n,c=r/s.unitInMeters,[l,u]=L(i,o,t,c);return d(e.startRenderSpace,a.startRenderSpace,t,l),d(e.endRenderSpace,a.endRenderSpace,t,u),e}function L(e,n,t,r=0){const i=u(n,t),o=u(e,t),a=Math.abs(i-o)+r;return i>o?[a,r]:[r,a]}function Y(e,n,t){const r=n.directSegment.eval(.5,P.get());return t.worldUpAtPosition(r,e)}function Z(e,n){const{startRenderSpace:t,endRenderSpace:r}=n.directSegment;return c(e,r,t)}function J(e,n,t={invert:!1}){const{startRenderSpace:r,endRenderSpace:i}=n.dimensionSegment;return t.invert?c(e,r,i):c(e,i,r)}function K(e,n){const t=e.directSegment.eval(.5,P.get());return n.headingAtPosition(t,e.primaryOffsetAxis)}function N(e,n){return g(J(Q,e))/n**2}const Q=v();function W(e){const{elevationAlignedStartPoint:n,elevationAlignedEndPoint:r}=e;if(null==n||null==r)return!1;const i=x(n,r);return null!=i&&t(i,"meters").value>X}const X=1e5;function $(e){return null!=e.geometry}export{k as OffsetSegmentLocation,F as arePointsVerticallyAligned,C as computationToGeometryDependencies,H as computeGeometryFromDimension,T as computeLength,I as computeOffsetAxis,O as computeOffsetForPoint,U as computeSegmentForMeasureType,w as computeSpanningSegment,J as dimensionStartToEnd,Z as directStartToEnd,Y as directUp,X as geodesicDistanceThreshold,K as headingFromGeometry,W as isGeodesicDimension,$ as isValidComputation,N as maxScreenLengthSquaredFromGeometry,z as offsetSegment};
