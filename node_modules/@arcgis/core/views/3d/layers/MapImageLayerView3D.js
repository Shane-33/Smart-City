/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/Error.js";import{subclass as r}from"../../../core/accessorSupport/decorators/subclass.js";import t from"./DynamicLayerView3D.js";import s from"../../layers/MapImageLayerView.js";import{MapServiceLayerViewHelper as i}from"../../layers/support/MapServiceLayerViewHelper.js";import{createQueryGeometry as p}from"../../support/drapedUtils.js";let o=class extends(s(t)){constructor(){super(...arguments),this.type="map-image-3d"}initialize(){this._updatingHandles.add((()=>this.exportImageVersion),(()=>this._updatingHandles.addPromise(this.refreshDebounced()))),this._popupHighlightHelper=new i({createFetchPopupFeaturesQueryGeometry:(e,r)=>p(e,r,this.view),layerView:this,updatingHandles:this._updatingHandles})}destroy(){this._popupHighlightHelper?.destroy()}fetchPopupFeatures(e,r){return this._popupHighlightHelper.fetchPopupFeatures(e,r)}getFetchOptions(){return{timeExtent:this.timeExtent}}};o=e([r("esri.views.3d.layers.MapImageLayerView3D")],o);const a=o;export{a as default};
