/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import r from"../../../../core/Accessor.js";import{AsyncUpdateMixin as s}from"../../../../core/AsyncUpdate.js";import t from"../../../../core/Logger.js";import{property as i}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/accessorSupport/ensureType.js";import"../../../../core/arrayUtils.js";import"../../../../core/has.js";import{subclass as o}from"../../../../core/accessorSupport/decorators/subclass.js";import{fixFields as l,collectLabelingFields as n,collectFilterFields as a}from"../../../../layers/support/fieldUtils.js";const d="esri.views.3d.layers.support.SceneLayerViewRequiredFields";let c=class extends(s(r)){get layer(){return this.layerView.layer}get requiredFields(){const{layerView:{layer:{fieldsIndex:e},definitionExpressionFields:r},rendererFields:s,labelingFields:t,viewFilterFields:i}=this;return l(e,[...r??[],...s??[],...t??[],...i??[]])}constructor(e){super(e)}initialize(){this.addHandles([this.autoUpdateAsync("rendererFields",(async()=>{const{fieldsIndex:e,renderer:r}=this.layer;return r?p((s=>r.collectRequiredFields(s,e))):null})),this.autoUpdateAsync("labelingFields",(async()=>{const{layer:e}=this;return e.labelsVisible?p((r=>n(r,e))):null})),this.autoUpdateAsync("viewFilterFields",(()=>{const{layer:e,filter:r}=this.layerView;return p((s=>a(s,e,r)))}))])}};async function p(e){const r=new Set;try{return await e(r),Array.from(r).sort()}catch(s){return t.getLogger(d).error(s),null}}e([i()],c.prototype,"layerView",void 0),e([i()],c.prototype,"layer",null),e([i()],c.prototype,"requiredFields",null),e([i()],c.prototype,"rendererFields",void 0),e([i()],c.prototype,"labelingFields",void 0),e([i()],c.prototype,"viewFilterFields",void 0),c=e([o(d)],c);export{c as SceneLayerViewRequiredFields};
