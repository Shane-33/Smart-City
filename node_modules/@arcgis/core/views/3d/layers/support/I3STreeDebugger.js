/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import"../../../../geometry.js";import{isSome as r}from"../../../../core/arrayUtils.js";import{property as s}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/accessorSupport/ensureType.js";import"../../../../core/has.js";import{subclass as o}from"../../../../core/accessorSupport/decorators/subclass.js";import{F as t}from"../../../../chunks/mat4.js";import{a as i}from"../../../../chunks/mat4f64.js";import{c as p,e as l}from"../../../../chunks/vec3.js";import{c}from"../../../../chunks/vec3f64.js";import{projectBuffer as u}from"../../../../geometry/projection/projectBuffer.js";import{TileTreeDebugger as n}from"../../../support/TileTreeDebugger.js";import a from"../../../../geometry/Polygon.js";let m=class extends n{constructor(e){super(e)}getTiles(){const e=this.lv.getVisibleNodes(),s=this.view.renderSpatialReference,o=this.nodeSR;return e.map((e=>h(e,s,o))).filter(r).sort(((e,r)=>e.lij[0]===r.lij[0]?e.label>r.label?-1:1:e.lij[0]-r.lij[0]))}};function h(e,r,s){const o=e.serviceObb;if(null==o||null==r)return null;t(f,o.quaternion),p(j,o.center),u(j,s,0,j,r,0,1),f[12]=j[0],f[13]=j[1],f[14]=j[2];const i=[[],[],[]];p(j,o.halfSize),l(j,j,f),u(j,r,0,j,s,0,1),i[0].push([j[0],j[1]]),p(j,o.halfSize),j[0]=-j[0],l(j,j,f),u(j,r,0,j,s,0,1),i[0].push([j[0],j[1]]),p(j,o.halfSize),j[0]=-j[0],j[1]=-j[1],l(j,j,f),u(j,r,0,j,s,0,1),i[0].push([j[0],j[1]]),p(j,o.halfSize),j[1]=-j[1],l(j,j,f),u(j,r,0,j,s,0,1),i[0].push([j[0],j[1]]),i[1].push(i[0][0]),i[1].push(i[0][1]),p(j,o.halfSize),j[0]=-j[0],j[2]=-j[2],l(j,j,f),u(j,r,0,j,s,0,1),i[1].push([j[0],j[1]]),p(j,o.halfSize),j[2]=-j[2],l(j,j,f),u(j,r,0,j,s,0,1),i[1].push([j[0],j[1]]),i[2].push(i[0][0]),i[2].push(i[0][3]),p(j,o.halfSize),j[1]=-j[1],j[2]=-j[2],l(j,j,f),u(j,r,0,j,s,0,1),i[2].push([j[0],j[1]]),i[2].push(i[1][3]);const c=new a({rings:i,spatialReference:s});return{lij:[e.level,e.childCount,0],label:e.id,geometry:c}}e([s({constructOnly:!0})],m.prototype,"lv",void 0),e([s({constructOnly:!0})],m.prototype,"nodeSR",void 0),m=e([o("esri.views.3d.layers.support.I3STreeDebugger")],m);const f=i(),j=c();export{m as I3STreeDebugger};
