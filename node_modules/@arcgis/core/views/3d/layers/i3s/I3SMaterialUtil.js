/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import has from"../../../../core/has.js";import{clamp as e}from"../../../../core/mathUtils.js";import{TextureEncoding as o,TextureUsage as a}from"./enums.js";import{RenderTexture as r}from"../../webgl-engine/core/material/RenderTexture.js";import{defaultMaskAlphaCutoff as s}from"../../webgl-engine/core/shaderLibrary/util/AlphaCutoff.js";import{getEllipsoidMode as t}from"../../webgl-engine/core/shaderLibrary/util/EllipsoidMode.js";import{TextureEncodingMimeType as l,CullFaceOptions as n,AlphaDiscardMode as i}from"../../webgl-engine/lib/basicInterfaces.js";import{Texture as u}from"../../webgl-engine/lib/Texture.js";import{useSchematicPBR as c,defaultSchematicMRRFactors as m,defaultAdvancedMRRFactors as d}from"../../webgl-engine/materials/pbrUtils.js";import{TextureWrapMode as p}from"../../../webgl/enums.js";function g(e,o){const r=new Map,s=(e,o)=>{if(null==e)return-1;const a=r.get(e.id);if(a)return a.usage|=o,a.id;const s=r.size;return r.set(e.id,{id:s,usage:o}),s},t=o.pbrMetallicRoughness,l=t?.baseColorFactor,i=o.emissiveFactor,u=c({normalTexture:o.normalTexture,emissiveTexture:o.emissiveTexture,emissiveFactor:o.emissiveFactor,occlusionTexture:o.occlusionTexture,metallicRoughnessTexture:t?.metallicRoughnessTexture,metallicFactor:t?.metallicFactor,roughnessFactor:t?.roughnessFactor}),p=u?m[0]:t?.metallicFactor??d[0],g=u?m[1]:t?.roughnessFactor??d[1],T="mask"===o.alphaMode?a.Color|a.AlphaMask:a.Color,x={baseColorFactor:l?[l[0],l[1],l[2],l[3]]:[1,1,1,1],baseColorTextureId:s(t?.baseColorTexture,T),metallicRoughnessTextureId:s(t?.metallicRoughnessTexture,a.MetallicRoughness),metallicFactor:p,roughnessFactor:g},b={alphaMode:o.alphaMode,alphaCutoff:o.alphaCutoff,doubleSided:o.doubleSided,cullFace:"none"===o.cullFace?n.None:"back"===o.cullFace?n.Back:"front"===o.cullFace?n.Front:n.None,normalTextureId:s(o.normalTexture,a.Normal),emissiveTextureId:s(o.emissiveTexture,a.Emissive),occlusionTextureId:s(o.occlusionTexture,a.Occlusion),emissiveFactor:i?[i[0],i[1],i[2]]:[0,0,0],metallicRoughness:x,wrapTextures:!1,hasParametersFromSource:u},F=[];return r.forEach((({usage:o},a)=>{const r=null!=e&&e[a]&&e[a].formats,s=r?h(r.map((({name:e,format:o})=>({name:e,encoding:f[o]})))):[];F.push({id:a,usage:o,encodings:s})})),{material:b,textures:F}}function h(e){return e.sort(((e,o)=>e.encoding-o.encoding))}const f={ktx2:o.KTX2,basis:o.Basis,dds:o.DDS_S3TC,png:o.PNG,jpg:o.JPG,"ktx-etc2":o.KTX_ETC2},T={[l.KTX2_ENCODING]:o.Basis,[l.BASIS_ENCODING]:o.Basis,[l.DDS_ENCODING]:o.DDS_S3TC,"image/png":o.PNG,"image/jpg":o.JPG,"image/jpeg":o.JPG,"image/ktx":o.KTX_ETC2};function x(o){const r=o?.materialDefinitions?Object.keys(o.materialDefinitions)[0]:null,s=o?.textureDefinitions?Object.keys(o.textureDefinitions)[0]:null,t=r?o.materialDefinitions?.[r]:null,l=s?o.textureDefinitions?.[s]:null,i=b();if(null!=t){const o=t.params;o.diffuse&&(i.metallicRoughness.baseColorFactor=[o.diffuse[0],o.diffuse[1],o.diffuse[2],1]),null!=o.doubleSided&&(i.doubleSided=o.doubleSided,i.cullFace=o.doubleSided?n.None:n.Back),"none"!==o.cullFace&&"front"!==o.cullFace&&"back"!==o.cullFace||(i.cullFace="none"===o.cullFace?n.None:"back"===o.cullFace?n.Back:n.Front),o.transparency&&(i.metallicRoughness.baseColorFactor[3]=e(1-o.transparency,0,1)),(o.useVertexColorAlpha||i.metallicRoughness.baseColorFactor[3]<1)&&(i.alphaMode="blend")}const u=[];if(null!=l){const e=0;!l.wrap||"repeat"!==l.wrap[0]&&"repeat"!==l.wrap[1]||(i.wrapTextures=!0);let o=a.Color;"rgba"===l.channels&&(i.alphaMode="blend",o|=a.AlphaMask);const r=l.images.length-1,s=l.images[r],t=e=>e?.split("/").pop(),n=Array.isArray(l.encoding)?h(l.encoding.map(((e,o)=>({name:t(s.href[o]),encoding:T[e]||0})))):[{name:t(s.href),encoding:T[l.encoding]||0}];u.push({id:e,usage:o,encodings:n}),i.metallicRoughness.baseColorTextureId=e}return{material:i,textures:u}}const b=()=>({alphaMode:"opaque",alphaCutoff:s,doubleSided:!0,cullFace:n.None,normalTextureId:-1,emissiveTextureId:-1,occlusionTextureId:-1,emissiveFactor:[0,0,0],metallicRoughness:{baseColorFactor:[.8,.8,.8,1],baseColorTextureId:-1,metallicRoughnessTextureId:-1,metallicFactor:0,roughnessFactor:.6},wrapTextures:!1,hasParametersFromSource:!0});function F(e,o,r,s){if(null==e?.data)return null;const t=e.data,l=s.renderingContext.parameters.maxMaxAnisotropy,n=l>1,i=r||!o.wrapTextures?C:P,c=w(e.encoding),m=e.usage&a.Color?"opaque"===o.alphaMode?3:4:3;return new u(t,{mipmap:n,maxAnisotropy:l,encoding:c,wrap:i,components:m,noUnpackFlip:!0})}const C={s:p.CLAMP_TO_EDGE,t:p.CLAMP_TO_EDGE},P={s:p.REPEAT,t:p.REPEAT};function S(o,l,n,u,c,p){const g=p.rendererTextureUsage,h=e=>R(u,n,e&g),f=l.metallicRoughness.baseColorFactor,T=e(l.metallicRoughness.baseColorFactor[3],0,1);o.baseColor=[f[0],f[1],f[2],T],o.hasParametersFromSource=!!l.hasParametersFromSource,o.usePBR=p.usePBR,o.mrrFactors=[l.metallicRoughness.metallicFactor,l.metallicRoughness.roughnessFactor,l.hasParametersFromSource?m[2]:d[2]],o.emissiveFactor=l.emissiveFactor,o.isIntegratedMesh=p.isIntegratedMesh,o.textureAlphaCutoff="mask"===l.alphaMode?l.alphaCutoff:s,o.alphaDiscardMode="opaque"===l.alphaMode?i.Opaque:"mask"===l.alphaMode?i.Mask:i.MaskBlend;const x=[],b=h(a.Color|a.AlphaMask);null!=b&&(o.baseColorTexture=new r(c,b),x.push(o.baseColorTexture.loadPromise));const F=h(a.MetallicRoughness);null!=F&&(o.metallicRoughnessTexture=new r(c,F),x.push(o.metallicRoughnessTexture.loadPromise));const C=h(a.Emissive);null!=C&&(o.emissionTexture=new r(c,C),x.push(o.emissionTexture.loadPromise));const P=h(a.Occlusion);null!=P&&(o.occlusionTexture=new r(c,P),x.push(o.occlusionTexture.loadPromise));const S=h(a.Normal);return null!=S&&(o.normalTexture=new r(c,S),x.push(o.normalTexture.loadPromise)),o.commonMaterialParameters.hasSlicePlane=p.slicePlaneEnabled,o.commonMaterialParameters.doubleSided=l.doubleSided,o.commonMaterialParameters.cullFace=l.cullFace,o.ellipsoidMode=t(p.viewSpatialReference),Promise.all(x)}function M(e){const a=!!e.compressedTextureS3TC,r=!!e.compressedTextureETC,s=has("disable-feature:i3s-basis")?0:o.Basis|o.KTX2,t=o.JPG|o.PNG,l=s|o.DDS_S3TC;return t|(a?l:0)|(r?s:0)}function D(e,o){if(null!=o)return e.find((e=>0!=(e.encoding&o)))}function R(e,o,r){if(null==e||r===a.None)return null;for(let a=0;a<e.length;a++){const s=e[a];if(null!=s&&0!=(s.usage&r)){const e=o[a];return null!=e?e.id:null}}return null}function w(e){switch(e){case o.KTX2:return l.KTX2_ENCODING;case o.Basis:return l.BASIS_ENCODING;case o.DDS_S3TC:return l.DDS_ENCODING;case o.PNG:return"image/png";case o.JPG:return"image/jpeg";case o.KTX_ETC2:return"image/ktx";default:return""}}export{S as configureMaterial,F as createTexture,b as defaultMaterial,g as getMaterialAndTextures,x as getMaterialAndTexturesFromShared,M as getSupportedEncodings,D as selectEncoding};
