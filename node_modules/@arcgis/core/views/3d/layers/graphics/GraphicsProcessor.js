/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../chunks/tslib.es6.js";import i from"../../../../Graphic.js";import e from"../../../../core/Accessor.js";import s from"../../../../core/Collection.js";import{makeHandle as r}from"../../../../core/handleUtils.js";import{destroyMaybe as n}from"../../../../core/maybe.js";import{isAbortError as o}from"../../../../core/promiseUtils.js";import{watch as a,sync as l,syncAndInitial as p}from"../../../../core/reactiveUtils.js";import{property as c}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/accessorSupport/ensureType.js";import"../../../../core/arrayUtils.js";import"../../../../core/has.js";import{subclass as h}from"../../../../core/accessorSupport/decorators/subclass.js";import{diff as u}from"../../../../core/accessorSupport/diffUtils.js";import{UpdatingHandles as d}from"../../../../core/support/UpdatingHandles.js";import y from"../../../../layers/Layer.js";import{hydrateGraphic as g}from"../../../../layers/graphics/hydratedFeatures.js";import{getRenderingInfo as m,getRenderingInfoAsync as f}from"../../../../renderers/support/renderingInfoUtils.js";import b from"../../../../rest/support/Query.js";import{DrapeSourceType as C}from"../interfaces.js";import{suspendResumeExtentOptimism as j}from"./constants.js";import{Graphics3DCore as w}from"./Graphics3DCore.js";import{Graphics3DElevationAlignment as S}from"./Graphics3DElevationAlignment.js";import{Graphics3DFrustumVisibility as V}from"./Graphics3DFrustumVisibility.js";import{Graphics3DObjectStates as v}from"./Graphics3DObjectStates.js";import{Graphics3DScaleVisibility as E}from"./Graphics3DScaleVisibility.js";import{enlargeExtent as G}from"./graphicUtils.js";import{Object3DState as _}from"../../webgl-engine/lib/basicInterfaces.js";import{UpdatePolicy as x}from"../../webgl-engine/lib/UpdatePolicy.js";let O=class extends e{constructor(t){super(t),this.type="graphics-3d",this.graphicsCore=null,this.drapeSourceType=C.Features,this.scaleVisibilityEnabled=!1,this.frustumVisibilityEnabled=!1,this._suspendResumeExtent=null,this._updatingHandles=new d}initialize(){const{layer:t}=this,i="effectiveScaleRange"in t?t:null,e=this.scaleVisibilityEnabled&&null!=i,s=new w({owner:this,layer:this.owner.layer,preferredUpdatePolicy:x.SYNC,graphicSymbolSupported:!0,componentFactories:{elevationAlignment:(t,i)=>new S({graphicsCoreOwner:this,graphicsCore:t,queryGraphicUIDsInExtent:i,elevationProvider:this.view.elevationProvider}),scaleVisibility:e?(t,e)=>new E({graphicsCoreOwner:this,layer:i,queryGraphicUIDsInExtent:e,graphicsCore:t,basemapTerrain:this.owner.view.basemapTerrain}):null,objectStates:t=>new v(t)}});if(this._set("graphicsCore",s),this.frustumVisibilityEnabled&&this._set("frustumVisibility",new V({graphicsCoreOwner:this})),"fullOpacity"in this.owner){const t=this.owner;this._updatingHandles.add((()=>t.fullOpacity),(()=>this.graphicsCore.opacityChange()))}if("elevationInfo"in t){const i=t;this._updatingHandles.add((()=>i.elevationInfo),((t,i)=>{u(t,i)&&this._updatingHandles.addPromise(this.graphicsCore.elevationInfoChange())}))}this._set("initializePromise",this._initializeAsync()),this._updatingHandles.addPromise(this.initializePromise)}async _initializeAsync(){try{await this.graphicsCore.initializePromise}catch(t){if(o(t))return;throw t}this.destroyed||(this.addHandles(a((()=>this.view.clippingArea),(()=>this._updateClippingExtent()),l)),this._updateClippingExtent(),this._setupSuspendResumeExtent(),this.graphicsCore.startCreateGraphics())}destroy(){this._updatingHandles.destroy(),this._set("frustumVisibility",n(this.frustumVisibility)),this._set("graphicsCore",n(this.graphicsCore))}get layer(){return this.owner.layer}get view(){return this.owner.view}get scaleVisibility(){return this.graphicsCore?.scaleVisibility}get elevationAlignment(){return this.graphicsCore?.elevationAlignment}get objectStates(){return this.graphicsCore?.objectStates}get scaleVisibilitySuspended(){return!(null==this.scaleVisibility||!this.scaleVisibility.suspended)}get frustumVisibilitySuspended(){return null!=this.frustumVisibility&&this.frustumVisibility.suspended}get suspended(){return this.owner.suspended??!1}get updating(){return!!(this.graphicsCore?.updating||null!=this.scaleVisibility&&this.scaleVisibility.updating||null!=this.frustumVisibility&&this.frustumVisibility.updating||this._updatingHandles.updating)}get graphics3DGraphics(){return this.graphicsCore?.graphics3DGraphics}get graphics3DGraphicsByObjectID(){return this.graphicsCore?.graphics3DGraphicsByObjectID}get loadedGraphics(){return this.owner.loadedGraphics}get fullOpacity(){return this.owner.fullOpacity??1}get slicePlaneEnabled(){return this.owner.slicePlaneEnabled}get updatePolicy(){return this.owner.updatePolicy}notifyGraphicGeometryChanged(t){this.graphicsCore.notifyGraphicGeometryChanged(t)}notifyGraphicVisibilityChanged(t){this.graphicsCore.notifyGraphicVisibilityChanged(t)}getRenderingInfo(t,i,e){const s=m(t,{renderer:i,arcade:e});if(s?.color){const t=s.color;t[0]=t[0]/255,t[1]=t[1]/255,t[2]=t[2]/255}return s}getRenderingInfoAsync(t,i,e,s){return f(t,{renderer:i,arcade:e,...s})}getHit(t){if(this.owner.loadedGraphics){const i=this.owner.loadedGraphics.find((i=>i.uid===t));if(i){const t=this.layer instanceof y?this.layer:null,e=g(i,t);return{type:"graphic",graphic:e,layer:e.layer}}}return null}whenGraphicBounds(t,i){return this.graphicsCore?this.graphicsCore.whenGraphicBounds(t,i):Promise.reject()}computeAttachmentOrigin(t,i){return this.graphicsCore?this.graphicsCore.computeAttachmentOrigin(t,i):null}getSymbolLayerSize(t,i){return this.graphicsCore?this.graphicsCore.getSymbolLayerSize(t,i):null}maskOccludee(t){const{set:i,handle:e}=this.objectStates.acquireSet(_.MaskOccludee,null);return this.objectStates.setUid(i,t.uid),e}highlight(t){if(t instanceof b)return P;if("number"==typeof t)return this.highlight([t]);if(t instanceof i)return this.highlight([t]);if(t instanceof s&&(t=t.toArray()),Array.isArray(t)&&t.length>0){if(t[0]instanceof i){const i=t.map((t=>t.uid)),{set:e,handle:s}=this.objectStates.acquireSet(_.Highlight,null);return this.objectStates.setUids(e,i),s}if("number"==typeof t[0]){const i=t,{set:e,handle:s}=this.objectStates.acquireSet(_.Highlight,null);return this.objectStates.setObjectIds(e,i),s}}return P}_setupSuspendResumeExtent(){const{scaleVisibility:t,frustumVisibility:i}=this;if(null==t&&null==i)return;const e=({computedExtent:e,extentPadding:s})=>{this._suspendResumeExtent=G(e,this._suspendResumeExtent,j,s),null!=t&&t.setExtent(this._suspendResumeExtent),null!=i&&i.setExtent(this._suspendResumeExtent)};this.addHandles(a((()=>({computedExtent:this.graphicsCore?.computedExtent,extentPadding:this.graphicsCore?.extentPadding})),(t=>e(t)),p))}_updateClippingExtent(){const t=this.view.clippingArea;this.graphicsCore.setClippingExtent(t,this.view.spatialReference)&&this.graphicsCore.recreateAllGraphics()}};t([c()],O.prototype,"type",void 0),t([c({constructOnly:!0})],O.prototype,"owner",void 0),t([c()],O.prototype,"layer",null),t([c()],O.prototype,"view",null),t([c({constructOnly:!0})],O.prototype,"graphicsCore",void 0),t([c()],O.prototype,"scaleVisibility",null),t([c({constructOnly:!0})],O.prototype,"frustumVisibility",void 0),t([c()],O.prototype,"elevationAlignment",null),t([c()],O.prototype,"objectStates",null),t([c()],O.prototype,"scaleVisibilitySuspended",null),t([c({readOnly:!0})],O.prototype,"frustumVisibilitySuspended",null),t([c()],O.prototype,"suspended",null),t([c({readOnly:!0})],O.prototype,"updating",null),t([c()],O.prototype,"loadedGraphics",null),t([c()],O.prototype,"fullOpacity",null),t([c()],O.prototype,"slicePlaneEnabled",null),t([c()],O.prototype,"drapeSourceType",void 0),t([c()],O.prototype,"updatePolicy",null),t([c({constructOnly:!0})],O.prototype,"scaleVisibilityEnabled",void 0),t([c({constructOnly:!0})],O.prototype,"frustumVisibilityEnabled",void 0),t([c()],O.prototype,"initializePromise",void 0),O=t([h("esri.views.3d.layers.graphics.GraphicsProcessor")],O);const P=r();export{O as GraphicsProcessor};
