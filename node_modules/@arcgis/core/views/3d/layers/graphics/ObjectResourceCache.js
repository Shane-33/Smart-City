/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{removeMaybe as o}from"../../../../core/maybe.js";import{throwIfAborted as t,onAbort as e}from"../../../../core/promiseUtils.js";import{DefaultLoadingContext as r}from"../../glTF/DefaultLoadingContext.js";import{loadGLTF as s}from"../../glTF/loader.js";import{load as a}from"./wosrLoader.js";class l{constructor(o){this._gltfLoading=new Map,this._wosrLoading=new Map,this._gltfMemCache=o("gltf-resources",(()=>{})),this._wosrMemCache=o("wosr-resources",(()=>{}))}destroy(){this._gltfLoading.forEach((o=>o.abortController.abort())),this._wosrLoading.forEach((o=>o.abortController.abort())),this._gltfMemCache.destroy(),this._wosrMemCache.destroy()}loadGLTF(o,t,e){const a=e?`gltfPBR:${o}`:`gltf:${o}`,l=this._gltfMemCache.get(a);return null!=l?Promise.resolve(l):this._loadOnce(this._gltfLoading,this._gltfMemCache,a,(t=>s(new r(t.streamDataRequester),o,t,e)),t)}loadWOSR(o,t){const e=`wosr:${o}:${t.disableTextures}`,r=this._wosrMemCache.get(e);return null!=r?Promise.resolve(r):this._loadOnce(this._wosrLoading,this._wosrMemCache,e,(t=>a(o,t)),t)}async _loadOnce(r,s,a,l,i){t(i);const n=e(i,(()=>this._abortLoad(r,a)));let c=r.get(a);if(c)c.refCount++;else{const o=new AbortController;c={refCount:1,abortController:o,promise:l({...i,signal:o.signal})},r.set(a,c)}try{const o=await c.promise;return s.put(a,o,o.size),r.delete(a),t(i),o}finally{o(n)}}_abortLoad(o,t){const e=o.get(t);if(null!=e){if(--e.refCount>0)return}o.delete(t),null!=e&&e.abortController.abort()}}export{l as ObjectResourceCache};
