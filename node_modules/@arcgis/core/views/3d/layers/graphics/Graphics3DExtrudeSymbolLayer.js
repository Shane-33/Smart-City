/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import"../../../../core/has.js";import e from"../../../../core/Error.js";import{clone as t}from"../../../../core/lang.js";import{getMetersPerVerticalUnitForSR as s}from"../../../../core/unitUtils.js";import{e as r}from"../../../../chunks/earcut.js";import{n}from"../../../../chunks/mat3.js";import{a as i}from"../../../../chunks/mat3f64.js";import{i as o,p as a}from"../../../../chunks/mat4.js";import{a as l}from"../../../../chunks/mat4f64.js";import{c,n as m,s as h,f as p,b as g,e as d}from"../../../../chunks/vec3.js";import{e as u,c as f}from"../../../../chunks/vec3f64.js";import{computeTranslationToOriginAndRotation as y}from"../../../../geometry/projection/computeTranslationToOriginAndRotation.js";import{create as b,empty as _,expandWithBuffer as j,intersectsClippingArea as x}from"../../../../geometry/support/aaBoundingBox.js";import{newDoubleArray as P}from"../../../../geometry/support/DoubleArray.js";import{newIndexArray as S,getZeroIndexArray as w}from"../../../../geometry/support/Indices.js";import{t as E}from"../../../../chunks/vec32.js";import{makeVertexCandidate as v,makeEdgeCandidate as I}from"../../../../layers/graphics/data/SnappingCandidate.js";import{getDriverAxisSizeValue as C}from"../../../../renderers/support/renderingInfoUtils.js";import{ViewingMode as L}from"../../../ViewingMode.js";import{needsElevationUpdates3D as M,SampleElevationInfo as O}from"./elevationAlignmentUtils.js";import{Graphics3DObject3DGraphicLayer as A}from"./Graphics3DObject3DGraphicLayer.js";import{Graphics3DSymbolLayer as z}from"./Graphics3DSymbolLayer.js";import{validateSymbolLayerSize as B,computeCentroid as D}from"./graphicUtils.js";import{ApplyRendererDiffResult as G}from"./interfaces.js";import{geometryAsPolygon as R}from"./polygonUtils.js";import{createMaterial as T}from"../support/edgeUtils.js";import{debugFlags as U}from"../../support/debugFlags.js";import{SamplePosition as k}from"../../support/ElevationProvider.js";import{geometryToRenderInfo as N}from"../../support/renderInfoUtils/polygon.js";import{NormalType as V}from"../../webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl.js";import{Attribute as H}from"../../webgl-engine/lib/Attribute.js";import{CullFaceOptions as F}from"../../webgl-engine/lib/basicInterfaces.js";import{ContentObjectType as W}from"../../webgl-engine/lib/ContentObjectType.js";import{Geometry as q}from"../../webgl-engine/lib/Geometry.js";import{isGeometryWithMapPositions as Z}from"../../webgl-engine/lib/GeometryWithMapPositions.js";import{compressNormals as J}from"../../webgl-engine/lib/Normals.js";import{Object3D as K}from"../../webgl-engine/lib/Object3D.js";import{VertexAttribute as Q}from"../../webgl-engine/lib/VertexAttribute.js";import{DefaultMaterial as X}from"../../webgl-engine/materials/DefaultMaterial.js";const Y=["polygon","extent"];class $ extends z{constructor(e,t,s,r){super(e,t,s,r),this.ensureDrapedStatus(!1)}async doLoad(){if(!this._drivenProperties.size){const t=B(this._getSymbolSize());if(t)throw new e("graphics3dextrudesymbollayer:invalid-size",t)}const t=this.symbolLayer?.material?.color,s=this._getCombinedOpacityAndColor(t),r=u(s),n=s[3],i=n<1||this.needsDrivenTransparentPass,o={usePBR:this._context.physicalBasedRenderingEnabled,isSchematic:!0,diffuse:r,ambient:r,opacity:n,transparent:i,cullFace:i?F.None:F.Back,hasVertexColors:!0,hasSlicePlane:this._context.slicePlaneEnabled,castShadows:this.symbolLayer.castShadows,offsetTransparentBackfaces:!0,normalType:V.Compressed};this._materials[je.Main]=new X(o),this._materials[je.Bottom]=new X({...o,cullFace:F.Back}),this._context.stage.addMany(this._materials)}destroy(){super.destroy(),this._context.stage.removeMany(this._materials),this._materials.length=0}createGraphics3DGraphic(e){const t=e.graphic;if(!this._validateGeometry(t.geometry,Y,this.symbolLayer.type))return null;const s=this._getVertexOpacityAndColor(e.renderingInfo,255),r=this.setGraphicElevationContext(t);return this._createAs3DShape(t,e.renderingInfo,s,r,t.uid)}layerOpacityChanged(e,t){const s=this.symbolLayer?.material?.color,r=this._getCombinedOpacity(s),n=r<1||this.needsDrivenTransparentPass;this._materials[je.Main]?.setParameters({opacity:r,transparent:n}),this._materials[je.Bottom]?.setParameters({opacity:r,transparent:n});const i=this._getLayerOpacity();e.forEach((e=>{const s=t(e);null!=s&&s.layerOpacityChanged(i,this._context.isAsync)}))}layerElevationInfoChanged(e,t){return this.updateGraphics3DGraphicElevationInfo(e,t,M)}slicePlaneEnabledChanged(e,t){return this._materials[je.Main]?.setParameters({hasSlicePlane:this._context.slicePlaneEnabled}),this._materials[je.Bottom]?.setParameters({hasSlicePlane:this._context.slicePlaneEnabled}),e.forEach((e=>{const s=t(e);null!=s&&s.slicePlaneEnabledChanged(this._context.slicePlaneEnabled,this._context.isAsync)})),!0}physicalBasedRenderingChanged(){const e={usePBR:this._context.physicalBasedRenderingEnabled,isSchematic:!0};return this._materials[je.Main]?.setParameters(e),this._materials[je.Bottom]?.setParameters(e),!0}_getExtrusionSize(e){let t;return t=e.size&&this._drivenProperties.size?C(e.size,2)??0:this._getSymbolSize(),t/=this._context.renderCoordsHelper.unitInMeters,t}applyRendererDiff(e,t){return this._drivenPropertiesChanged(t)?G.RecreateSymbol:G.RecreateGraphics}async queryForSnapping(e,r,n,i){const o=this._getExtrusionSize(n)*this._context.renderCoordsHelper.unitInMeters/s(r),{objectId:a,target:l}=e,c=t(l);switch(c.z=(c.z??0)+o,e.type){case"edge":{const{start:s,end:r}=e,n=t(s),i=t(r);return n.z=(n.z??0)+o,i.z=(i.z??0)+o,[I(a,c,1/0,n,i)]}case"vertex":return[v(a,c,1/0),I(a,l,1/0,l,c)];default:return[]}}_getSymbolSize(){return this.symbolLayer.size??1}_createAs3DShape(e,t,s,a,c){const m=R(e.geometry);if(null==m)return null;if(0===m.rings.length||!m.rings.some((e=>e.length>0)))return this._logGeometryValidationWarnings(m.rings,"rings","ExtrudeSymbol3DLayer"),null;const h=N(m,this._context.elevationProvider,this._context.renderCoordsHelper,a);this._logGeometryCreationWarnings(h,m.rings,"rings","ExtrudeSymbol3DLayer");const p=D(m);if(null==p)return null;const g=new Array,d=new Array,u=b(),w=l(),v=f(),I=this._context.renderCoordsHelper.viewingMode===L.Global;I||this._context.renderCoordsHelper.worldUpAtPosition(null,v),y(m.spatialReference,[p.x,p.y,0],w,this._context.renderCoordsHelper.spatialReference);const C=l();o(C,w);const O=i();n(O,C);const{polygons:z,mapPositions:B,position:G}=h;for(const n of z){const e=n.count;if(this._context.clippingExtent&&(_(u),j(u,n.mapPositions),!x(u,this._context.clippingExtent)))continue;const i=r(n.mapPositions,n.holeIndices,3);if(0===i.length)continue;const o=i.length,a=6*e,l=S(a+o),m=S(o),h=P(3*a),p=P(3*a),f=P(3*a),y=P(a);te(G,B,i,n,h,f,p,y,l,m,this._getExtrusionSize(t),v,I),E(h,h,C);const b=this._context.stage.renderView.getObjectAndLayerIdColor({graphicUid:c,layerUid:this._context.layer.uid}),w=new xe(h,f,J(p),y);g.push(ee(this._materials[je.Main],l,l.length-m.length,w,s,b),ee(this._materials[je.Bottom],m,0,w,s,b)),d.push(w.heights)}if(0===g.length)return null;const U=new K({geometries:g,layerUid:this._context.layer.uid,graphicUid:c,isElevationSource:!0});U.transformation=w;const k=T(this.symbolLayer,{opacity:this._getLayerOpacity()}),V=null!=k?{baseMaterial:this._materials[je.Main],edgeMaterials:[k],properties:{mergeGeometries:!0,hasSlicePlane:this._context.slicePlaneEnabled}}:null,H=new A(this,U,g,null,null,((e,t,s,r,n)=>ge(e,t,s,r,n,d)),a,V);return H.alignedSampledElevation=h.sampledElevation,H.needsElevationUpdates=M(a.mode),H}}function ee(e,t,s,r,n,i){const o=w(t.length),a=[[Q.POSITION,new H(r.positions,t,3,!0)],[Q.NORMALCOMPRESSED,new H(r.normals,t,2,!0)],[Q.COLOR,new H(n,o,4,!0)]];return new q(e,a,r.elevation,W.Mesh,i,s)}function te(e,t,s,r,n,i,o,a,l,c,m,h,p){const g=s.length/3;let d=0,u=2*r.count;se(e,t,r.index,r.count,s,0,g,n,i,o,a,l,c,u,m,h,p);let f=2*r.count;u=0,ie(n,i,a,o,d,r.pathLengths[0],r.count,f,l,u,m),f+=4*r.pathLengths[0],u+=2*r.pathLengths[0],d+=r.pathLengths[0];for(let y=1;y<r.pathLengths.length;++y)ie(n,i,a,o,d,r.pathLengths[y],r.count,f,l,u,m),f+=4*r.pathLengths[y],u+=2*r.pathLengths[y],d+=r.pathLengths[y]}function se(e,t,s,r,n,i,o,a,l,h,p,g,d,u,f,y,b){c(ue,y);const _=f>0?1:-1;let j=3*s,x=0,P=3*x,S=r,w=3*S;for(let c=0;c<r;++c)b&&(ue[0]=e[j],ue[1]=e[j+1],ue[2]=e[j+2],m(ue,ue)),a[P]=e[j],a[P+1]=e[j+1],a[P+2]=e[j+2],l[P]=t[j],l[P+1]=t[j+1],l[P+2]=t[j+2],h[P]=-_*ue[0],h[P+1]=-_*ue[1],h[P+2]=-_*ue[2],p[x]=0,a[w]=e[j]+f*ue[0],a[w+1]=e[j+1]+f*ue[1],a[w+2]=e[j+2]+f*ue[2],l[w]=t[j],l[w+1]=t[j+1],l[w+2]=t[j+2],h[w]=_*ue[0],h[w+1]=_*ue[1],h[w+2]=_*ue[2],p[S]=f,P+=3,w+=3,j+=3,x+=1,S+=1;j=3*i,P=0,w=3*u;const E=f<0?be:ye,v=f<0?ye:be;for(let c=0;c<o;++c)d[P]=n[j+E[0]],d[P+1]=n[j+E[1]],d[P+2]=n[j+E[2]],g[w]=n[j+v[0]]+r,g[w+1]=n[j+v[1]]+r,g[w+2]=n[j+v[2]]+r,P+=3,w+=3,j+=3}function re(e,t,s,r,n,i,o){r[i]=r[o],o*=3,e[i*=3]=e[o],e[i+1]=e[o+1],e[i+2]=e[o+2],t[i]=t[o],t[i+1]=t[o+1],t[i+2]=t[o+2],s[i]=n[0],s[i+1]=n[1],s[i+2]=n[2]}const ne=f();function ie(e,t,s,r,n,i,o,a,l,c,m){let h=n,p=n+1,g=n+o,d=n+o+1,u=a,f=a+1,y=a+2*i,b=a+2*i+1;m<0&&(h=n+o+1,d=n),c*=3;for(let _=0;_<i;++_)_===i-1&&(m>0?(p=n,d=n+o):(p=n,h=n+o)),he(e,h,p,g,ne),re(e,t,r,s,ne,u,h),re(e,t,r,s,ne,f,p),re(e,t,r,s,ne,y,g),re(e,t,r,s,ne,b,d),l[c++]=u,l[c++]=y,l[c++]=b,l[c++]=u,l[c++]=b,l[c++]=f,h++,p++,g++,d++,u+=2,f+=2,y+=2,b+=2}const oe=f(),ae=f(),le=f(),ce=f(),me=f();function he(e,t,s,r,n){t*=3,s*=3,r*=3,h(oe,e[t++],e[t++],e[t++]),h(ae,e[s++],e[s++],e[s++]),h(le,e[r++],e[r++],e[r++]),p(ce,ae,oe),p(me,le,oe),g(n,me,ce),m(n,n)}const pe=f();function ge(e,t,s,r,n,i){const o=e.stageObject,c=o.geometries,m=c.length,p="absolute-height"!==t.mode;let g=0;const u=o.transformation,f=a(l(),u);for(let a=0;a<m;a+=2){const e=c[a];if(!Z(e))continue;const t=e.getMutableAttribute(Q.POSITION).data,l=i[a/2],m=new k(e.mapPositions),y=t.length/3;let b=0,_=!1,j=0;for(let i=0;i<y;i++){pe[0]=t[b],pe[1]=t[b+1],pe[2]=t[b+2],r(m,fe),p&&(j+=fe.sampledElevation),U.TESTS_DISABLE_OPTIMIZATIONS?(h(de,m.array[m.offset],m.array[m.offset+1],fe.z+l[b/3]),null!=s&&n.toRenderCoords(de,s,de),d(de,de,f)):(h(de,t[b],t[b+1],t[b+2]),d(de,de,u),n.setAltitude(de,fe.z+l[b/3]),d(de,de,f)),t[b]=de[0],t[b+1]=de[1],t[b+2]=de[2];const e=_e/n.unitInMeters;(Math.abs(pe[0]-t[b])>=e||Math.abs(pe[1]-t[b+1])>=e||Math.abs(pe[2]-t[b+2])>=e)&&(_=!0),m.offset+=3,b+=3}_&&(e.invalidateBoundingInfo(),o.geometryVertexAttributeUpdated(c[a],Q.POSITION),c[a+1].invalidateBoundingInfo(),o.geometryVertexAttributeUpdated(c[a+1],Q.POSITION)),g+=j/y}return g/m}const de=f(),ue=f(),fe=new O,ye=[0,2,1],be=[0,1,2],_e=.01;var je;!function(e){e[e.Main=0]="Main",e[e.Bottom=1]="Bottom"}(je||(je={}));class xe{constructor(e,t,s,r){this.positions=e,this.elevation=t,this.normals=s,this.heights=r}}export{$ as Graphics3DExtrudeSymbolLayer};
