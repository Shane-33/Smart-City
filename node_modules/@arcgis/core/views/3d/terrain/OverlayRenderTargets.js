/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import has from"../../../core/has.js";import{OverlayContent as e}from"./OverlayContent.js";import{OverlayFramebufferObject as r}from"./OverlayFramebufferObject.js";import{ColorFormat as t}from"../webgl-engine/core/FBOCache.js";import{ShaderOutput as o}from"../webgl-engine/core/shaderLibrary/ShaderOutput.js";class s{constructor(e,o,s,a=t.RGBA_MIPMAP){this.output=o,this.content=s,this.fbo=new r(e,a)}get valid(){return this.fbo.valid}}class a{constructor(r){this.targets=[new s(r,o.Color,e.Color),new s(r,o.Color,e.ColorNoRasterImage),new s(r,o.Highlight,e.Highlight,t.RGBA4),new s(r,o.Normal,e.WaterNormal),new s(r,o.Color,e.Occluded)],has("enable-feature:objectAndLayerId-rendering")&&this.targets.push(new s(r,o.ObjectAndLayerIdColor,e.ObjectAndLayerIdColor))}getTexture(e){return this.targets[e]?.fbo.texture}dispose(){for(const e of this.targets)e.fbo.dispose()}computeValidity(){return this.targets.reduce(((e,r,t)=>r.valid?e|=1<<t:e),0)}}export{a as OverlayRenderTargets,s as RenderTargetDescriptor};
