/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{rad2deg as t}from"../../../core/mathUtils.js";import{getMetersPerUnitForSR as e,getMetersPerCartesianUnitForSR as o}from"../../../core/unitUtils.js";import{s as r}from"../../../chunks/mat4.js";import{c as i}from"../../../chunks/vec3.js";import{isVec3 as s}from"../../../core/libs/gl-matrix-2/types/vec3.js";import{projectPointToVector as n}from"../../../geometry/projection/projectPointToVector.js";import{projectVectorToDehydratedPoint as a}from"../../../geometry/projection/projectVectorToDehydratedPoint.js";import{projectVectorToPoint as m}from"../../../geometry/projection/projectVectorToPoint.js";import{projectVectorToVector as c}from"../../../geometry/projection/projectVectorToVector.js";import{Axis as p}from"../../../geometry/support/Axis.js";import{create as l,setExtent as d,altitudeAt as h,setAltitudeAt as u,setAltitudeOfTransformation as y,normalAt as f,axisAt as j,elevate as g,intersectRayClosestSilhouette as S,intersectRay as _,createGlobal as w,createLocal as A}from"../../../geometry/support/coordinateSystem.js";import{intersectRay as P}from"../../../geometry/support/plane.js";import{angleAroundAxis as C}from"../../../geometry/support/vector.js";import{sv3d as R}from"../../../geometry/support/vectorStacks.js";import{isDehydratedPoint as M}from"../../../layers/graphics/dehydratedFeatureUtils.js";import{ViewingMode as v}from"../../ViewingMode.js";class U{constructor(t,e,o,r){this.viewingMode=t,this.spatialReference=e,this.unitInMeters=o,this._coordinateSystem=r,this._tmpCoordinateSystem=l(r)}set extent(t){t&&d(this._coordinateSystem,t,this._coordinateSystem)}getAltitude(t){return h(this._coordinateSystem,t)}setAltitude(t,e,o=t){return u(this._coordinateSystem,o,e,t)}setAltitudeOfTransformation(t,e){y(this._coordinateSystem,e,t,e)}worldUpAtPosition(t,e){return f(this._coordinateSystem,t,e)}worldBasisAtPosition(t,e,o){return j(this._coordinateSystem,t,e,o)}basisMatrixAtPosition(t,e){const o=this.worldBasisAtPosition(t,p.X,R.get()),i=this.worldBasisAtPosition(t,p.Y,R.get()),s=this.worldBasisAtPosition(t,p.Z,R.get());return r(e,o[0],o[1],o[2],0,i[0],i[1],i[2],0,s[0],s[1],s[2],0,0,0,0,1),e}headingAtPosition(e,o){const r=this.worldUpAtPosition(e,R.get()),i=this.worldBasisAtPosition(e,p.Y,R.get()),s=C(o,i,r);return t(s)}intersectManifoldClosestSilhouette(t,e,o){return g(this._coordinateSystem,e,this._tmpCoordinateSystem),S(this._tmpCoordinateSystem,t,o),o}intersectManifold(t,e,o){g(this._coordinateSystem,e,this._tmpCoordinateSystem);const r=R.get();return _(this._tmpCoordinateSystem,t,r)?i(o,r):null}intersectInfiniteManifold(t,e,o){if(this.viewingMode===v.Global)return this.intersectManifold(t,e,o);g(this._coordinateSystem,e,this._tmpCoordinateSystem);const r=this._tmpCoordinateSystem.value,s=R.get();return P(r.plane,t,s)?i(o,s):null}toRenderCoords(t,e,o){return M(t)?n(t,e,this.spatialReference):c(t,e,o,this.spatialReference)}fromRenderCoords(t,e,o=null){return M(e)?(null!=o&&(e.spatialReference=o),a(t,this.spatialReference,e)):s(e)?c(t,this.spatialReference,e,o)?e:null:m(t,this.spatialReference,e)}static create(t,o){switch(t){case v.Local:return new U(v.Local,o,e(o),A());case v.Global:return new U(v.Global,o,1,w(o))}}static renderUnitScaleFactor(t,e){return o(t)/o(e)}}export{U as RenderCoordsHelper};
