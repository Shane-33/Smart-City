/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import t from"../../../../core/Accessor.js";import r from"../../../../core/Evented.js";import{property as s}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/accessorSupport/ensureType.js";import"../../../../core/arrayUtils.js";import"../../../../core/has.js";import{subclass as o}from"../../../../core/accessorSupport/decorators/subclass.js";import{c as n}from"../../../../chunks/vec3f64.js";import{empty as i,expand as c,intersects as a}from"../../../../geometry/support/aaBoundingRect.js";import{TaskPriority as p,Task as d}from"../../../support/Scheduler.js";let u=class extends t{constructor(e){super(e),this._tileGeometryUpdateExtent=i(),this._tileGeometryUpdateSpatialReference=null,this.events=new r,this.updating=!1}initialize(){this.addHandles([this.surface.on("elevation-change",(e=>this._tileGeometryChanged(e))),this.scheduler.registerTask(p.SURFACE_GEOMETRY_UPDATES,this)])}get running(){return this.updating}runTask(){return this.updating?(this._tileGeometryUpdateSpatialReference&&this._centerIntersectsExtent(this._tileGeometryUpdateExtent,this._tileGeometryUpdateSpatialReference)&&this.events.emit("request-update",h),i(this._tileGeometryUpdateExtent),this._set("updating",!1),d.YIELD):d.YIELD}_tileGeometryChanged(e){this._tileGeometryUpdateSpatialReference=e.spatialReference,c(this._tileGeometryUpdateExtent,e.extent,this._tileGeometryUpdateExtent),this._set("updating",!0)}_furthestCenterOnSurface(){let e=this.centerOnSurfaces[0];for(let t=1;t<this.centerOnSurfaces.length;t++){const r=this.centerOnSurfaces[t];r.distance>e.distance&&(e=r)}return e}_centerIntersectsExtent(e,t){const r=this.state.contentCamera.eye,s=y,o=this._furthestCenterOnSurface();return this.renderCoordsHelper.fromRenderCoords(r,l,t),this.renderCoordsHelper.fromRenderCoords(o.renderLocation,m,t),l[0]<m[0]?(s[0]=l[0],s[2]=m[0]):(s[0]=m[0],s[2]=l[0]),l[1]<m[1]?(s[1]=l[1],s[3]=m[1]):(s[1]=m[1],s[3]=l[1]),a(s,e)}};e([s({constructOnly:!0})],u.prototype,"state",void 0),e([s({constructOnly:!0})],u.prototype,"centerOnSurfaces",void 0),e([s({constructOnly:!0})],u.prototype,"renderCoordsHelper",void 0),e([s({constructOnly:!0})],u.prototype,"scheduler",void 0),e([s({constructOnly:!0})],u.prototype,"surface",void 0),e([s({readOnly:!0})],u.prototype,"updating",void 0),u=e([o("esri.views.3d.support.SurfaceGeometryUpdates")],u);const h={},l=n(),m=n(),y=i();export{u as SurfaceGeometryUpdates};
