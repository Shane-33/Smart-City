/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import e from"../../../Graphic.js";import{nativeArrayMaxSize as r}from"../../../core/typedArrayUtil.js";import{WorkerHandle as s}from"../../../core/workers/WorkerHandle.js";import t from"../../../geometry/SpatialReference.js";import o from"../../../layers/support/Field.js";class a{constructor(e){this._controller=e,this._handle=new i((r=>e.schedule(r)))}destroy(){this._handle.destroy()}invoke(r,s){return r.buffer&&0!==r.buffer.byteLength?(r.options.sourceSpatialReference&&r.options.sourceSpatialReference instanceof t&&(r.options={...r.options,sourceSpatialReference:r.options.sourceSpatialReference.toJSON()}),this._handle.invoke(r,s).then((r=>{let s=0,a=0;const i=t.fromJSON(r.spatialReference);r.spatialReference=i;const l=async t=>{if(r.fields)for(;s<r.fields.length;)if(r.fields[s]=o.fromJSON(r.fields[s]),s++,t.madeProgress())return this._controller.reschedule((e=>l(e)));for(;a<r.features.length;){const s=r.features[a];if(++a,s.uid=e.generateUID(),null!=s.geometry&&(s.geometry.spatialReference=i,n(s.geometry),t.madeProgress()))return this._controller.reschedule((e=>l(e)))}return r};return this._controller.schedule((e=>l(e)))}))):Promise.resolve(null)}}function n(e){switch(e.type){case"polyline":e.paths.reduce(((e,r)=>e+r.length),0)<r&&(e.paths=e.hasZ||e.hasM?e.paths.map((e=>e.map((e=>[e[0],e[1],e[2]])))):e.paths.map((e=>e.map((e=>[e[0],e[1]])))));break;case"polygon":e.rings.reduce(((e,r)=>e+r.length),0)<r&&(e.rings=e.hasZ||e.hasM?e.rings.map((e=>e.map((e=>[e[0],e[1],e[2]])))):e.rings.map((e=>e.map((e=>[e[0],e[1]])))))}}class i extends s{constructor(e){super("PBFDecoderWorker","_parseFeatureQuery",{_parseFeatureQuery:e=>[e.buffer]},e)}}export{a as PBFDecoder};
