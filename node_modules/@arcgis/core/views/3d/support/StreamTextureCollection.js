/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{throwIfAborted as e,whenOrAbort as t}from"../../../core/promiseUtils.js";import{isSVG as r}from"../../../core/urlUtils.js";import{TextureCollection as s,TextureRequest as i}from"./TextureCollection.js";import{Texture as l}from"../webgl-engine/lib/Texture.js";import{TextureWrapMode as n}from"../../webgl/enums.js";class o extends s{constructor(e,t,r){super(t,r),this._streamDataRequester=e}async fromUrl(r,s,l){e(l);const n=null!=l?l.signal:null,o=this.makeUid(r,s);let a=this._textureRequests.get(o);if(!a){const e=new AbortController,t=this._streamDataRequester.request(r,"image",{uid:o,signal:e.signal});a=new i,a.abortController=e;const l=a;this._textureRequests.set(o,a),a.textureAsync=t.then((async e=>{const t=this._createTexture(r,e,s);return l.texture=t,l.abortController=null,await t.load(this._stage.renderView.renderingContext),this._stage.add(t),{uid:o,texture:t,release:()=>this._release(o)}}),(e=>{throw l.abortController=null,e}))}a.referenceCount++;try{return await t(a.textureAsync,n)}catch(h){throw this._release(o),h}}_createTexture(e,t,s){const i={width:t.width,height:t.height,wrap:{s:n.CLAMP_TO_EDGE,t:n.CLAMP_TO_EDGE},preMultiplyAlpha:!0,reloadable:!0};if(r(e)){if(s||0===t.width&&0===t.height){const e=t.width?t.height/t.width:1;s=s||64,e>1?(t.width=Math.round(s/e),t.height=s):(t.width=s,t.height=Math.round(s*e))}this._stage.renderView?.renderingContext.driverTest.svgPremultipliesAlpha.result&&(i.preMultiplyAlpha=!1)}return new l(t,i)}}export{o as StreamTextureCollection};
