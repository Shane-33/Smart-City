/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{f as e}from"../../../../chunks/vec2f32.js";import{newLayout as t}from"../../support/buffer/InterleavedLayout.js";import{ShaderOutput as r}from"../core/shaderLibrary/ShaderOutput.js";import i from"../lib/GLMaterial.js";import{Material as s,MaterialParameters as n}from"../lib/Material.js";import{RenderSlot as a}from"../lib/RenderSlot.js";import{VertexAttribute as o}from"../lib/VertexAttribute.js";import{writePosition as u,writeNormal as f,writeBufferVec4 as l}from"./internal/bufferWriterUtils.js";import{LineCalloutTechnique as c}from"../shaders/LineCalloutTechnique.js";import{LineCalloutTechniqueConfiguration as h}from"../shaders/LineCalloutTechniqueConfiguration.js";class d extends s{get uniqueMaterialIdentifier(){return this._uniqueMaterialIdentifier}constructor(e){super(e,new m),this._configuration=new h,this._uniqueMaterialIdentifier=d.uniqueMaterialIdentifier(this.parameters)}getPassParameters(){return this.parameters}getConfiguration(e,t){const r=t?.slot!==a.LINE_CALLOUTS;return this._configuration.occlusionTestEnabled=this.parameters.occlusionTest,this._configuration.hasVerticalOffset=null!=this.parameters.verticalOffset,this._configuration.hasScreenSizePerspective=null!=this.parameters.screenSizePerspective,this._configuration.depthHudEnabled=r,this._configuration.depthHudAlignStartEnabled=!!this.parameters.depthHUDAlignStart,this._configuration.screenCenterOffsetUnitsEnabled="screen"===this.parameters.centerOffsetUnits,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.multipassEnabled=t.multipassEnabled,this._configuration}intersect(){}produces(e,t){if(t===r.Color)switch(e){case a.LINE_CALLOUTS:case a.LINE_CALLOUTS_HUD_DEPTH:return!0}return!1}createGLMaterial(e){return new p(e)}createBufferWriter(){return new S}validateParameters(e){const t=d.uniqueMaterialIdentifier(e);t!==this._uniqueMaterialIdentifier&&(this._uniqueMaterialIdentifier=t)}static uniqueMaterialIdentifier(e){return JSON.stringify({horizontalScreenOffset:e.horizontalScreenOffset??0,centerOffsetUnits:e.centerOffsetUnits||"world"})}}class p extends i{beginSlot(e){return this.ensureTechnique(c,e)}}class m extends n{constructor(){super(...arguments),this.horizontalScreenOffset=0,this.color=[0,0,0,1],this.size=1,this.occlusionTest=!1,this.shaderPolygonOffset=1e-5,this.depthHUDAlignStart=!1,this.centerOffsetUnits="world",this.hasSlicePlane=!1}}const g=t().vec3f(o.POSITION).vec3f(o.NORMAL).vec2f(o.UV0).vec4f(o.AUXPOS1),O=[e(0,0),e(1,0),e(0,1),e(1,0),e(1,1),e(0,1)];class S{constructor(){this.vertexBufferLayout=g}elementCount(e){return 6*e.attributes.get(o.POSITION).indices.length}write(e,t,r,i,s){u(r.attributes.get(o.POSITION),e,i.position,s,6),f(r.attributes.get(o.NORMAL),t,i.normal,s,6),l(r.attributes.get(o.AUXPOS1),i.auxpos1,s,6);for(let n=0;n<O.length;++n)i.uv0.setVec(s+n,O[n])}}export{d as LineCalloutMaterial,m as Parameters};
