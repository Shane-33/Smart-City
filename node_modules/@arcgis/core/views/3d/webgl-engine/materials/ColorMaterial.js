/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import has from"../../../../core/has.js";import{Z as e}from"../../../../chunks/vec4f64.js";import{newLayout as r}from"../../support/buffer/InterleavedLayout.js";import{ShaderOutput as t}from"../core/shaderLibrary/ShaderOutput.js";import{CullFaceOptions as s}from"../lib/basicInterfaces.js";import a from"../lib/GLMaterial.js";import{OITPolygonOffsetLimit as i}from"../lib/OrderIndependentTransparency.js";import{RenderSlot as o}from"../lib/RenderSlot.js";import{VertexAttribute as n}from"../lib/VertexAttribute.js";import{DefaultBufferWriter as h}from"./DefaultBufferWriter.js";import{TriangleMaterial as c}from"./TriangleMaterial.js";import{VisualVariablePassParameters as l}from"./VisualVariablePassParameters.js";import{ColorMaterialTechnique as u}from"../shaders/ColorMaterialTechnique.js";import{ColorMaterialTechniqueConfiguration as p}from"../shaders/ColorMaterialTechniqueConfiguration.js";class f extends c{constructor(e){super(e,new d),this.supportsEdges=!0,this._configuration=new p}getConfiguration(e,r){return this._configuration.output=e,this._configuration.cullFace=this.parameters.cullFace,this._configuration.hasVertexColors=this.parameters.hasVertexColors&&!this.parameters.vvColor,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.transparent=this._isTransparent,this._configuration.polygonOffset=this.parameters.polygonOffset,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.hasOccludees=this.parameters.hasOccludees,this._configuration.transparencyPassType=r.transparencyPassType,this._configuration.enableOffset=r.camera.relativeElevation<i,this._configuration.multipassEnabled=r.multipassEnabled,this._configuration.cullAboveGround=r.multipassTerrain.cullAboveGround,this._configuration.vvColor=!!this.parameters.vvColor,this._configuration}produces(e,r){if(r===t.Color||r===t.Alpha||r===t.Highlight||r===t.Depth&&this.parameters.writeLinearDepth||r===t.ObjectAndLayerIdColor){if(e===o.DRAPED_MATERIAL)return!0;if(r===t.Highlight)return e===o.OPAQUE_MATERIAL;return e===(this._isTransparent?this.parameters.writeDepth?o.TRANSPARENT_MATERIAL:o.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL:o.OPAQUE_MATERIAL)}return!1}createGLMaterial(e){return new m(e)}createBufferWriter(){const e=r().vec3f(n.POSITION);return has("enable-feature:objectAndLayerId-rendering")&&e.vec4u8(n.OBJECTANDLAYERIDCOLOR),this.parameters.vvColor?e.f32(n.COLORFEATUREATTRIBUTE):e.vec4u8(n.COLOR),new h(e)}get _isTransparent(){return this.parameters.color[3]<1||this.parameters.forceTransparentMode}}class m extends a{_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.hasOccludees&&this._material.setParameters({hasOccludees:e.hasOccludees})}beginSlot(e){return this._output!==t.Color&&this._output!==t.Alpha||this._updateOccludeeState(e),this.ensureTechnique(u,e)}}class d extends l{constructor(){super(...arguments),this.color=e,this.forceTransparentMode=!1,this.writeDepth=!0,this.writeLinearDepth=!1,this.hasVertexColors=!1,this.polygonOffset=!1,this.hasSlicePlane=!1,this.cullFace=s.None,this.hasOccludees=!1}}export{f as ColorMaterial,d as Parameters};
