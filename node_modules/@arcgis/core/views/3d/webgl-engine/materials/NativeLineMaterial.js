/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import e from"../../../../core/Logger.js";import{clamp as t}from"../../../../core/mathUtils.js";import{createRenderScreenPointArray3 as r}from"../../../../core/screenUtils.js";import{j as s}from"../../../../chunks/vec2.js";import{s as o,f as i,j as a,i as n,g as c,c as u,l,o as m}from"../../../../chunks/vec3.js";import{c as f}from"../../../../chunks/vec3f64.js";import{O as h}from"../../../../chunks/vec4f64.js";import{PlaneIndex as p}from"../../../../geometry/support/frustum.js";import{create as d,distance2 as g,fromPoints as j,closestLineSegmentPoint as A}from"../../../../geometry/support/lineSegment.js";import{create as b,fromPoints as O,signedDistance as S,normal as _}from"../../../../geometry/support/plane.js";import{ShaderOutput as L}from"../core/shaderLibrary/ShaderOutput.js";import R from"../lib/GLMaterial.js";import{Material as y,MaterialParameters as E}from"../lib/Material.js";import{RenderSlot as N}from"../lib/RenderSlot.js";import{isTranslationMatrix as T}from"../lib/Util.js";import{VertexAttribute as M}from"../lib/VertexAttribute.js";import{DefaultBufferWriter as v}from"./DefaultBufferWriter.js";import{PositionColorLayout as x,PositionLayout as C}from"./DefaultLayouts.js";import{NativeLineTechnique as P}from"../shaders/NativeLineTechnique.js";import{NativeLineTechniqueConfiguration as w}from"../shaders/NativeLineTechniqueConfiguration.js";class I extends y{constructor(e){super(e,new U),this._configuration=new w}getConfiguration(e){return this._configuration.output=e,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.hasVertexColors=this.parameters.hasVertexColors,this._configuration.transparent=this.parameters.color[3]<1||this.parameters.width<1,this._configuration.hasOccludees=this.parameters.hasOccludees,this._configuration}intersect(t,r,f,h,d,b){if(!f.options.selectionMode||!t.visible)return;if(!T(r))return void e.getLogger("esri.views.3d.webgl-engine.materials.NativeLineMaterial").error("intersection assumes a translation-only matrix");const L=t.attributes.get(M.POSITION).data,R=f.camera,y=Z;s(y,f.point);const E=2;o(z[0],y[0]-E,y[1]+E,0),o(z[1],y[0]+E,y[1]+E,0),o(z[2],y[0]+E,y[1]-E,0),o(z[3],y[0]-E,y[1]-E,0);for(let e=0;e<4;e++)if(!R.unprojectFromRenderScreen(z[e],J[e]))return;O(R.eye,J[0],J[1],K),O(R.eye,J[1],J[2],Y),O(R.eye,J[2],J[3],$),O(R.eye,J[3],J[0],ee);let N=Number.MAX_VALUE,v=0;for(let e=0;e<L.length-5;e+=3){if(D[0]=L[e]+r[12],D[1]=L[e+1]+r[13],D[2]=L[e+2]+r[14],k[0]=L[e+3]+r[12],k[1]=L[e+4]+r[13],k[2]=L[e+5]+r[14],S(K,D)<0&&S(K,k)<0||S(Y,D)<0&&S(Y,k)<0||S($,D)<0&&S($,k)<0||S(ee,D)<0&&S(ee,k)<0)continue;if(R.projectToRenderScreen(D,W),R.projectToRenderScreen(k,X),W[2]<0&&X[2]>0){i(q,D,k);const e=R.frustum,t=-S(e[p.NEAR],D)/a(q,_(e[p.NEAR]));n(q,q,t),c(D,D,q),R.projectToRenderScreen(D,W)}else if(W[2]>0&&X[2]<0){i(q,k,D);const e=R.frustum,t=-S(e[p.NEAR],k)/a(q,_(e[p.NEAR]));n(q,q,t),c(k,k,q),R.projectToRenderScreen(k,X)}else if(W[2]<0&&X[2]<0)continue;W[2]=0,X[2]=0;const t=g(j(W,X,H),y);t<N&&(N=t,u(G,D),u(F,k),v=e/3)}const x=f.rayBegin,C=f.rayEnd;if(N<E*E){let e=Number.MAX_VALUE;if(A(j(G,F,H),j(x,C,Q),B)){i(B,B,x);const t=l(B);n(B,B,1/t),e=t/m(x,C)}b(e,B,v,!1)}}intersectDraped(e,r,s,o,i,a){if(!s.options.selectionMode)return;const n=e.attributes.get(M.POSITION).data,c=e.attributes.get(M.SIZE),u=c?c.data[0]:0,l=o[0],m=o[1],f=((u+1)/2+4)*e.screenToWorldRatio;let h=Number.MAX_VALUE,p=0;for(let d=0;d<n.length-5;d+=3){const e=n[d],r=n[d+1],s=l-e,o=m-r,i=n[d+3]-e,a=n[d+4]-r,c=t((i*s+a*o)/(i*i+a*a),0,1),u=i*c-s,f=a*c-o,g=u*u+f*f;g<h&&(h=g,p=d/3)}h<f*f&&i(a.dist,a.normal,p,!1)}produces(e,t){return!(t!==L.Color&&t!==L.Highlight&&t!==L.ObjectAndLayerIdColor||e!==N.OPAQUE_MATERIAL&&e!==N.DRAPED_MATERIAL)}createGLMaterial(e){return new V(e)}createBufferWriter(){const e=this.parameters.hasVertexColors?x:C;return new v(e)}}class V extends R{_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.hasOccludees&&this._material.setParameters({hasOccludees:e.hasOccludees})}beginSlot(e){return this._output===L.Color&&this._updateOccludeeState(e),this.ensureTechnique(P,e)}}class U extends E{constructor(){super(...arguments),this.color=h,this.hasVertexColors=!1,this.hasSlicePlane=!1,this.width=1,this.hasOccludees=!1}}const D=f(),k=f(),q=f(),B=f(),W=r(),X=r(),G=f(),F=f(),H=d(),Q=d(),Z=f(),z=[r(),r(),r(),r()],J=[f(),f(),f(),f()],K=b(),Y=b(),$=b(),ee=b();export{I as NativeLineMaterial,U as Parameters};
