/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{isArray as e,isUint32Array as t}from"../../../../../core/typedArrayUtil.js";import{WorkerHandle as r}from"../../../../../core/workers/WorkerHandle.js";import{unpackInterleavedBuffer as s}from"../../../support/buffer/workerHelper.js";import{extract as n}from"./edgeProcessing.js";class a extends r{constructor(e){super("EdgeProcessingWorker","extract",{extract:e=>[e.dataBuffer],extractComponentsEdgeLocations:e=>[e.dataBuffer],extractEdgeLocations:e=>[e.dataBuffer]},e)}async process(e,t,r){if(r)return n(e);const s=await this.invoke(new i(e),t);return this._unpackOutput(s)}async extractEdgeLocations(e,t){const r=await this.invokeMethod("extractEdgeLocations",new i(e),t);return s(r)}async extractComponentsEdgeLocations(e,t){const r=await this.invokeMethod("extractComponentsEdgeLocations",new i(e),t);return s(r)}_unpackOutput(e){return{regular:{instancesData:s(e.regular.instancesData),lodInfo:{lengths:new Float32Array(e.regular.lodInfo.lengths)}},silhouette:{instancesData:s(e.silhouette.instancesData),lodInfo:{lengths:new Float32Array(e.silhouette.lodInfo.lengths)}},averageEdgeLength:e.averageEdgeLength}}}class i{constructor(r){this.dataBuffer=r.data.buffer,this.writerSettings=r.writerSettings,this.skipDeduplicate=r.skipDeduplicate,this.indices=e(r.indices)?r.indices:r.indices.buffer,this.indicesType=e(r.indices)?"Array":t(r.indices)?"Uint32Array":"Uint16Array",this.indicesLength=r.indicesLength}}export{a as EdgeWorkerHandle,i as PackedInput};
