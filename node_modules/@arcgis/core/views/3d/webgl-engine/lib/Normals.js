/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{clamp as t}from"../../../../core/mathUtils.js";import{n as a}from"../../../../chunks/vec3.js";function n(t,a,n,s,o,h=2){const c=1/(Math.abs(n)+Math.abs(s)+Math.abs(o)),e=n*c,u=s*c,M=o<=0?(e>=0?1:-1)*(1-Math.abs(u)):e,b=o<=0?(u>=0?1:-1)*(1-Math.abs(e)):u,f=a*h;t[f]=r(M),t[f+1]=r(b)}function s(t){const a=t.length/3,s=new Int16Array(2*a);let o=0;for(let r=0;r<a;++r)n(s,r,t[o++],t[o++],t[o++]);return s}function o(t,n,s,o=2){const r=s*o,c=h(n[r]),e=h(n[r+1]),u=1-Math.abs(c)-Math.abs(e);t[2]=u,u<0?(t[0]=(c>=0?1:-1)*(1-Math.abs(e)),t[1]=(e>=0?1:-1)*(1-Math.abs(c))):(t[0]=c,t[1]=e),a(t,t)}function r(a){return t(Math.round(32767*a),-32767,32767)}function h(a){return t(a/32767,-1,1)}export{n as compressNormal,s as compressNormals,h as decodeInt16,o as decompressNormal,r as encodeInt16};
