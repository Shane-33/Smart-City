/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../../chunks/tslib.es6.js";import e from"../../../../../core/Accessor.js";import{ReallocGrowthFactor as s}from"../../../../../core/arrayUtils.js";import i from"../../../../../core/Evented.js";import{property as a}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/accessorSupport/ensureType.js";import"../../../../../core/has.js";import{subclass as r}from"../../../../../core/accessorSupport/decorators/subclass.js";import{f as o,d as n,t as l}from"../../../../../chunks/mat3.js";import{a as h}from"../../../../../chunks/mat3f64.js";import{m as c}from"../../../../../chunks/mat4.js";import{a as m}from"../../../../../chunks/mat4f64.js";import{s as f}from"../../../../../chunks/vec3.js";import{c as g}from"../../../../../chunks/vec3f64.js";import{BufferViewMat4f64 as d,BufferViewVec3f64 as T,BufferViewMat3f as u,BufferViewVec2f as _,BufferViewVec4f64 as p,BufferViewVec4f as L,BufferViewVec4u8 as A,BufferViewUint8 as E}from"../../../../../geometry/support/buffer/BufferView.js";import{scaleFromMatrix as O}from"../../../support/mathUtils.js";import{newLayout as v}from"../../../support/buffer/InterleavedLayout.js";import{assert as I}from"../Util.js";import{VertexAttribute as F}from"../VertexAttribute.js";import{initialCapacity as S}from"./RenderInstanceData.js";var M;function C(t){let e=v().mat4f64(F.LOCALTRANSFORM).mat4f64(F.GLOBALTRANSFORM).vec4f64(F.BOUNDINGSPHERE).vec3f64(F.MODELORIGIN).mat3f(F.INSTANCEMODEL).mat3f(F.INSTANCEMODELNORMAL).vec2f(F.MODELSCALEFACTORS);return t.includes(F.FEATUREATTRIBUTE)&&(e=e.vec4f(F.FEATUREATTRIBUTE)),t.includes(F.COLOR)&&(e=e.vec4u8(F.COLOR)),t.includes(F.OBJECTANDLAYERIDCOLOR)&&(e=e.vec4u8(F.OBJECTANDLAYERIDCOLOR)),e=e.u8(F.STATE).u8(F.LODLEVEL),e}!function(t){t[t.ALLOCATED=1]="ALLOCATED",t[t.DEFAULT_ACTIVE=2]="DEFAULT_ACTIVE",t[t.VISIBLE=4]="VISIBLE",t[t.HIGHLIGHT=8]="HIGHLIGHT",t[t.HIGHLIGHT_ACTIVE=16]="HIGHLIGHT_ACTIVE",t[t.REMOVE=32]="REMOVE",t[t.TRANSFORM_CHANGED=64]="TRANSFORM_CHANGED",t[t.ACTIVE=18]="ACTIVE"}(M||(M={}));class R{constructor(t){this.localTransform=t.getField(F.LOCALTRANSFORM,d),this.globalTransform=t.getField(F.GLOBALTRANSFORM,d),this.modelOrigin=t.getField(F.MODELORIGIN,T),this.model=t.getField(F.INSTANCEMODEL,u),this.modelNormal=t.getField(F.INSTANCEMODELNORMAL,u),this.modelScaleFactors=t.getField(F.MODELSCALEFACTORS,_),this.boundingSphere=t.getField(F.BOUNDINGSPHERE,p),this.featureAttribute=t.getField(F.FEATUREATTRIBUTE,L),this.color=t.getField(F.COLOR,A),this.objectAndLayerIdColor=t.getField(F.OBJECTANDLAYERIDCOLOR,A),this.state=t.getField(F.STATE,E),this.lodLevel=t.getField(F.LODLEVEL,E)}}let y=class extends e{constructor(t,e){super(t),this.events=new i,this._capacity=0,this._size=0,this._next=0,this._layout=C(e),this._capacity=S,this._buffer=this._layout.createBuffer(this._capacity),this._view=new R(this._buffer)}get capacity(){return this._capacity}get size(){return this._size}get view(){return this._view}addInstance(){this._size+1>this._capacity&&this._grow();const t=this._findSlot();return this._view.state.set(t,M.ALLOCATED),this._size++,this.events.emit("instances-changed"),t}removeInstance(t){const e=this._view.state;I(t>=0&&t<this._capacity&&0!=(e.get(t)&M.ALLOCATED),"invalid instance handle"),this._getStateFlag(t,M.ACTIVE)?this._setStateFlags(t,M.REMOVE):this.freeInstance(t),this.events.emit("instances-changed")}freeInstance(t){const e=this._view.state;I(t>=0&&t<this._capacity&&0!=(e.get(t)&M.ALLOCATED),"invalid instance handle"),e.set(t,0),this._size--}setLocalTransform(t,e,s=!0){this._view.localTransform.setMat(t,e),s&&this.updateModelTransform(t)}getLocalTransform(t,e){this._view.localTransform.getMat(t,e)}setGlobalTransform(t,e,s=!0){this._view.globalTransform.setMat(t,e),s&&this.updateModelTransform(t)}getGlobalTransform(t,e){this._view.globalTransform.getMat(t,e)}updateModelTransform(t){const e=this._view,s=w,i=D;e.localTransform.getMat(t,N),e.globalTransform.getMat(t,V);const a=c(V,V,N);f(s,a[12],a[13],a[14]),e.modelOrigin.setVec(t,s),o(i,a),e.model.setMat(t,i);const r=O(w,a);r.sort(),e.modelScaleFactors.set(t,0,r[1]),e.modelScaleFactors.set(t,1,r[2]),n(i,i),l(i,i),e.modelNormal.setMat(t,i),this._setStateFlags(t,M.TRANSFORM_CHANGED),this.events.emit("instance-transform-changed",{index:t})}getModelTransform(t,e){const s=this._view;s.model.getMat(t,D),s.modelOrigin.getVec(t,w),e[0]=D[0],e[1]=D[1],e[2]=D[2],e[3]=0,e[4]=D[3],e[5]=D[4],e[6]=D[5],e[7]=0,e[8]=D[6],e[9]=D[7],e[10]=D[8],e[11]=0,e[12]=w[0],e[13]=w[1],e[14]=w[2],e[15]=1}applyShaderTransformation(t,e){null!=this.shaderTransformation&&this.shaderTransformation.applyTransform(this,t,e)}getCombinedModelTransform(t,e){return this.getModelTransform(t,e),null!=this.shaderTransformation&&this.shaderTransformation.applyTransform(this,t,e),e}getCombinedLocalTransform(t,e){this._view.localTransform.getMat(t,e),null!=this.shaderTransformation&&this.shaderTransformation.applyTransform(this,t,e)}getCombinedMaxScaleFactor(t){let e=this._view.modelScaleFactors.get(t,1);return null!=this.shaderTransformation&&(this.shaderTransformation.scaleFactor(w,this,t),e*=Math.max(w[0],w[1],w[2])),e}getCombinedMedianScaleFactor(t){let e=this._view.modelScaleFactors.get(t,0);return null!=this.shaderTransformation&&(this.shaderTransformation.scaleFactor(w,this,t),e*=b(w[0],w[1],w[2])),e}getModel(t,e){this._view.model.getMat(t,e)}setFeatureAttribute(t,e){this._view.featureAttribute.setVec(t,e)}getFeatureAttribute(t,e){this._view.featureAttribute.getVec(t,e)}setColor(t,e){this._view.color.setVec(t,e)}setObjectAndLayerIdColor(t,e){this._view.objectAndLayerIdColor.setVec(t,e)}setVisible(t,e){e!==this.getVisible(t)&&(this._setStateFlag(t,M.VISIBLE,e),this.events.emit("instance-visibility-changed",{index:t}))}getVisible(t){return this._getStateFlag(t,M.VISIBLE)}setHighlight(t,e){e!==this.getHighlight(t)&&(this._setStateFlag(t,M.HIGHLIGHT,e),this.events.emit("instance-highlight-changed"))}getHighlight(t){return this._getStateFlag(t,M.HIGHLIGHT)}getState(t){return this._view.state.get(t)}getLodLevel(t){return this._view.lodLevel.get(t)}countFlags(t){let e=0;for(let s=0;s<this._capacity;++s){this.getState(s)&t&&++e}return e}_setStateFlags(t,e){const s=this._view.state;e=s.get(t)|e,s.set(t,e)}_clearStateFlags(t,e){const s=this._view.state;e=s.get(t)&~e,s.set(t,e)}_setStateFlag(t,e,s){s?this._setStateFlags(t,e):this._clearStateFlags(t,e)}_getStateFlag(t,e){return!!(this._view.state.get(t)&e)}_grow(){this._capacity=Math.max(S,Math.floor(this._capacity*s)),this._buffer=this._layout.createBuffer(this._capacity).copyFrom(this._buffer),this._view=new R(this._buffer)}_findSlot(){const t=this._view.state;let e=this._next;for(;t.get(e)&M.ALLOCATED;)e=e+1===this._capacity?0:e+1;return this._next=e+1===this._capacity?0:e+1,e}};function b(t,e,s){return Math.max(Math.min(t,e),Math.min(Math.max(t,e),s))}t([a({constructOnly:!0})],y.prototype,"shaderTransformation",void 0),t([a()],y.prototype,"_size",void 0),t([a({readOnly:!0})],y.prototype,"size",null),y=t([r("esri.views.3d.webgl-engine.lib.lodRendering.InstanceData")],y);const w=g(),D=h(),N=m(),V=m();export{y as InstanceData,R as InstanceDataView,M as StateFlags};
