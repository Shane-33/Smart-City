/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import r from"../../../../core/Accessor.js";import t from"../../../../core/PooledArray.js";import{isPromiseLike as n,createAbortError as s}from"../../../../core/promiseUtils.js";import{property as o}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/accessorSupport/ensureType.js";import"../../../../core/arrayUtils.js";import"../../../../core/has.js";import{subclass as i}from"../../../../core/accessorSupport/decorators/subclass.js";import{ShaderOutput as l}from"../core/shaderLibrary/ShaderOutput.js";import{Decorations as u}from"../lib/basicInterfaces.js";import{DepthRange as d,union as a}from"../lib/depthRange.js";import{RenderOccludedFlag as c}from"../lib/Material.js";import{RenderSlot as p}from"../lib/RenderSlot.js";let h=class extends r{constructor(e){super({}),this._context=e,this._renderPlugins=new t,this._slots=new Array;for(let r=0;r<p.MAX_SLOTS;++r)this._slots[r]=[]}normalizeCtorArgs(){return{}}add(e,r){const t=()=>{if(r?.aborted)throw e.uninitializeRenderContext(),s();this._renderPlugins.push(e),e.produces.forEach(((r,t)=>{this._slots[t].push(e)})),this._context.requestRender(),this.notifyChange("updating")},o=e.initializeRenderContext(this._context,r);if(n(o))return o.then(t);t()}remove(e){if(null!=this._renderPlugins.removeUnordered(e)){for(let r=0;r<this._slots.length;++r)this._slots[r]=this._slots[r].filter((r=>r!==e));e.uninitializeRenderContext(),this._context.requestRender(),this.notifyChange("updating")}}prepareRender(){this._renderPlugins.forAll((e=>{e.prepareRender&&e.prepareRender(this._context.renderContext)}))}updateAnimation(e){let r=!1;return this._renderPlugins.forAll((t=>{t.updateAnimation&&(r=t.updateAnimation(e)||r)})),r}renderFeatureChanged(){this._renderPlugins.forAll((e=>{e.renderFeatureChanged&&e.renderFeatureChanged()}))}prepare(e){this._context.renderContext.bindParameters.slot=e,this._slots[e].forEach((r=>{const t=r.produces.get(e);t&&t(l.Color)&&(m(r)&&r.prepareTechnique(this._context.renderContext),g(r)&&r.prepareTechniques(this._context.renderContext))}))}_getRenderables(e){this._context.renderContext.bindParameters.slot=e;const r=new Map;return this._slots[e].forEach((t=>{const n=t.produces.get(e);if(n&&n(l.Color)&&(!t.isDecoration||this._context.renderContext.bindParameters.decorations!==u.OFF))if(m(t)){const e=t.prepareTechnique(this._context.renderContext);null!=e&&r.set(t,e)}else if(g(t)){const e=t.prepareTechniques(this._context.renderContext);null!=e&&r.set(t,e)}else r.set(t,null)})),r}render(e,r=null,t=null){return this._getRenderables(e).forEach(((e,n)=>t=n.renderNode(this._context.renderContext,e,r,t))),t}renderComposition(e,r){const t=this._getRenderables(e);let n=null;return t.forEach(((e,t)=>{const s=t.renderNode(this._context.renderContext,e,r,null);n?.release(),n=s,r.composite=n})),n}queryDepthRange(e){const r=new d;return this._renderPlugins.forAll((t=>{const n=t.queryDepthRange?.(e);a(r,n)})),r}get updating(){return this._renderPlugins.some((e=>e.running))}produces(e,r=l.Color){return this._slots[e].some((t=>{const n=t.produces.get(e);return!!n&&n(r)}))}consumes(e){return this._renderPlugins.some((r=>r.consumes().required.includes(e)))}get hasDecorations(){return this._renderPlugins.some((e=>e.isDecoration))}get renderOccludedFlags(){return this._renderPlugins.reduce(((e,r)=>e|r.renderOccludedFlags),c.None)}get usedMemory(){return this._renderPlugins.reduce(((e,r)=>e+(r.usedMemory??0)),0)}};function m(e){return"prepareTechnique"in e}function g(e){return"prepareTechniques"in e}e([o({readOnly:!0})],h.prototype,"updating",null),h=e([i("esri.views.3d.webgl-engine.lib.RenderPluginManager")],h);export{h as RenderPluginManager};
