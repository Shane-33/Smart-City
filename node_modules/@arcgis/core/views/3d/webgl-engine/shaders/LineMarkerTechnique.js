/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{ShaderOutput as e}from"../core/shaderLibrary/ShaderOutput.js";import{ReloadableShaderModule as t}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as i}from"../core/shaderTechnique/ShaderTechnique.js";import{blendingDefault as r,oitBlending as n,oitDepthTest as l,oitDepthWrite as s}from"../lib/OrderIndependentTransparency.js";import{Program as o}from"../lib/Program.js";import{stencilWriteMaskOn as c,stencilToolMaskBaseParams as a,stencilBaseAllZerosParams as p,depthCompareAlways as u,stencilToolTransparentOccluderParams as d,stencilWriteMaskOff as h,stencilToolMaskOccluderParams as T,depthCompareLess as m}from"../lib/StencilUtils.js";import{TransparencyPassType as P}from"../lib/TransparencyPassType.js";import{VertexAttribute as f}from"../lib/VertexAttribute.js";import{L as g}from"../../../../chunks/LineMarker.glsl.js";import{makePipelineState as O,defaultDepthWriteParams as b,defaultColorWriteParams as S}from"../../../webgl/renderState.js";const W=new Map([[f.POSITION,0],[f.UV0,1],[f.AUXPOS1,2],[f.NORMAL,3],[f.COLOR,4],[f.COLORFEATUREATTRIBUTE,4],[f.SIZE,5],[f.SIZEFEATUREATTRIBUTE,5],[f.OPACITYFEATUREATTRIBUTE,6]]);class E extends i{initializeProgram(e){return new o(e.rctx,E.shader.get().build(this.configuration),W)}_makePipelineState(t,i){const o=this.configuration,u=t===P.NONE;return O({blending:o.output===e.Color||o.output===e.Alpha?u?r:n(t):null,depthTest:{func:l(t)},depthWrite:u?o.writeDepth?b:null:s(t),colorWrite:S,stencilWrite:o.hasOccludees?c:null,stencilTest:o.hasOccludees?i?a:p:null,polygonOffset:{factor:0,units:-10}})}initializePipeline(){return this.configuration.occluder&&(this._occluderPipelineTransparent=O({blending:r,depthTest:u,depthWrite:null,colorWrite:S,stencilWrite:null,stencilTest:d}),this._occluderPipelineOpaque=O({blending:r,depthTest:u,depthWrite:null,colorWrite:S,stencilWrite:h,stencilTest:T}),this._occluderPipelineMaskWrite=O({blending:null,depthTest:m,depthWrite:null,colorWrite:null,stencilWrite:c,stencilTest:a})),this._occludeePipelineState=this._makePipelineState(this.configuration.transparencyPassType,!0),this._makePipelineState(this.configuration.transparencyPassType,!1)}getPipeline(e,t,i){return e?this._occludeePipelineState:this.configuration.occluder?i?this._occluderPipelineTransparent:t?this._occluderPipelineOpaque:this._occluderPipelineMaskWrite:super.getPipeline()}}E.shader=new t(g,(()=>import("./LineMarker.glsl.js")));export{E as LineMarkerTechnique,W as vertexAttributeLocations};
