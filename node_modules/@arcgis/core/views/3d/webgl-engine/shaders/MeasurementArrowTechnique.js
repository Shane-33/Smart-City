/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{ReloadableShaderModule as r}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as t}from"../core/shaderTechnique/ShaderTechnique.js";import{parameter as o}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as n}from"../lib/DefaultVertexAttributeLocations.js";import{blendingDefault as s,oitBlending as i}from"../lib/OrderIndependentTransparency.js";import{Program as a}from"../lib/Program.js";import{TransparencyPassType as p}from"../lib/TransparencyPassType.js";import{DefaultTechniqueConfiguration as l}from"../materials/DefaultTechniqueConfiguration.js";import{M as u}from"../../../../chunks/MeasurementArrow.glsl.js";import{CompareFunction as c,PrimitiveType as m}from"../../../webgl/enums.js";import{makePipelineState as f,defaultDepthWriteParams as d,defaultColorWriteParams as h}from"../../../webgl/renderState.js";class g extends t{constructor(e,r,t){super(e,r,t)}initializeProgram(e){return new a(e.rctx,g.shader.get().build(this.configuration),n)}_setPipelineState(e){const r=e===p.NONE,t=this.configuration;return f({blending:t.transparent?r?s:i(e):null,polygonOffset:this.configuration.polygonOffsetEnabled?{factor:0,units:-4}:null,depthTest:{func:c.LESS},depthWrite:d,colorWrite:h})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}get primitiveType(){return m.TRIANGLE_STRIP}}g.shader=new r(u,(()=>import("./MeasurementArrow.glsl.js")));class y extends l{constructor(){super(...arguments),this.polygonOffsetEnabled=!1,this.transparent=!1,this.transparencyPassType=p.NONE}}e([o()],y.prototype,"polygonOffsetEnabled",void 0),e([o()],y.prototype,"transparent",void 0),e([o({count:p.COUNT})],y.prototype,"transparencyPassType",void 0);export{g as MeasurementArrowTechnique,y as MeasurementArrowTechniqueConfiguration};
