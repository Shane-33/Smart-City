/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import r from"../../core/Error.js";import{destroyMaybe as t}from"../../core/maybe.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import"../../core/arrayUtils.js";import"../../core/has.js";import{subclass as s}from"../../core/accessorSupport/decorators/subclass.js";import{combinedViewLayerTimeExtentProperty as p}from"../../layers/support/commonProperties.js";import{ExportWMSImageParameters as a}from"../../layers/support/ExportWMSImageParameters.js";const i=i=>{let m=class extends i{initialize(){this.exportImageParameters=new a({layer:this.layer})}destroy(){this.exportImageParameters=t(this.exportImageParameters)}get exportImageVersion(){return this.exportImageParameters?.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}fetchPopupFeatures(e){const{layer:t}=this;if(!e)return Promise.reject(new r("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:t}));const{popupEnabled:o}=t;if(!o)return Promise.reject(new r("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:o}));const s=this.createFetchPopupFeaturesQuery(e);if(!s)return Promise.resolve([]);const{extent:p,width:a,height:i,x:m,y:n}=s;if(!(p&&a&&i))throw new r("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:p,width:a,height:i});return t.fetchFeatureInfo(p,a,i,m,n)}};return e([o()],m.prototype,"exportImageParameters",void 0),e([o({readOnly:!0})],m.prototype,"exportImageVersion",null),e([o()],m.prototype,"layer",void 0),e([o(p)],m.prototype,"timeExtent",void 0),m=e([s("esri.layers.mixins.WMSLayerView")],m),m};export{i as default};
