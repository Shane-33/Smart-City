/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{pt2px as t}from"../../../../../../core/screenUtils.js";import{premultiplyAlphaRGBAArray as e,premultiplyAlphaRGBA as l}from"../../color.js";import{bitsetGenericLockColor as o,bitsetFillRandomPatternOffset as r,bitsetGenericConsiderAlphaOnly as i,bitsetFillHasUnresolvedReplacementColor as s,spritePadding as a,maxSizeForU16Compression as n,compressionFactorForU16 as m,bitsetFillHasPatternHeightPrecisionFactor as c,bitsetFillHasPatternWidthPrecisionFactor as f,minMaxZoomPrecisionFactor as h,pictureFillColor as d}from"../../definitions.js";import{degToByte as u}from"../../GeometryUtils.js";import{i1616to32 as p,i8888to32 as y}from"../../number.js";import{FillMaterialKey as x}from"../../materialKey/MaterialKey.js";import{getMinMaxZoom as M,defaultMinZoom as j,defaultMaxZoom as w}from"./util.js";import g from"./WGLBaseFillTemplate.js";import F from"./WGLMeshTemplate.js";class K extends(g(F)){constructor(t,e,l,o,r,i,s,a,n,m,c,f,d,u,M,j){super(),this._effects=u||void 0;const w=x.load(t);e&&(w.sdf=e.sdf,w.pattern=!0,w.textureBinding=e.textureBinding),this.fillColor=l,this.tl=o,this.br=r,this.aux21=p(i,s),this.aux22=p(a,n),this.aux3=y(m,c,f,0),this._bitset=d,this._minMaxZoom=p(Math.round(M*h),Math.round(j*h)),this._materialKey=w.data}static fromCIMFill(e,h,d){const y=e.color,x=y&&l(y)||0,j=e.materialKey,[w,g]=M(e.scaleInfo,d);let F=(e.colorLocked?o:0)|(e.applyRandomOffset?r:0)|(e.sampleAlphaOnly?i:0)|(e.hasUnresolvedReplacementColor?s:0);if(!h)return new K(j,null,x,0,0,0,0,0,0,0,0,0,F,e.effects,w,g);const{rect:_,width:b,height:L}=h,C=e.scaleX||1,T=_.x+a,A=_.y+a,B=T+b,G=A+L,I=t(e.height);let R=C*I;"CIMHatchFill"===e.cim.type&&(R*=b/L);let S=I;S<=0&&(S=G-A),S<n&&(S*=m,F|=c),S=Math.round(S);let U=R;U<=0&&(U=B-T),U<n&&(U*=m,F|=f),U=Math.round(U);const v=t(e.offsetX||0),O=t(-e.offsetY||0),W=p(T,A),X=p(B,G);return new K(j,h,x,W,X,U,S,v,O,m,m,u(e.angle),F,e.effects,w,g)}static fromSimpleFill(t,l,r=!1){const{color:i}=t,s=i&&"esriSFSNull"!==t.style&&e(i)||0;let h=r?o:0;const d=t.materialKey;let u;if(l){const{rect:t,width:e,height:o,pixelRatio:r}=l,i=t.x+a,y=t.y+a,x=i+e,M=y+o,g=p(i,y),F=p(x,M);let _=e/r;_<n&&(_*=m,h|=f),_=Math.round(_);let b=o/r;b<n&&(b*=m,h|=c),b=Math.round(b),u=new K(d,l,s,g,F,_,b,0,0,m,m,0,h,null,j,w)}else u=new K(d,null,s,0,0,0,0,0,0,0,0,0,h,null,j,w);return u._maybeAddLineTemplate(t),u}static fromPictureFill(e,l,r=!1){const i=d,{rect:s,width:h,height:u}=l,y=s.x+a,x=s.y+a,M=y+h,g=x+u,F=p(y,x),_=p(M,g);let b=r?o:0,L=t(e.width);L<n&&(L*=m,b|=f),L=Math.round(L);let C=t(e.height);C<n&&(C*=m,b|=c),C=Math.round(C);const T=t(e.xoffset),A=t(-e.yoffset),B=e.materialKey,G=new K(B,l,i,F,_,L,C,T,A,m*e.xscale,m*e.yscale,0,b,null,j,w);return G._maybeAddLineTemplate(e),G}}export{K as default};
