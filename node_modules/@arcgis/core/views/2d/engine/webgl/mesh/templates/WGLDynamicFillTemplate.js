/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{pt2px as t}from"../../../../../../core/screenUtils.js";import{isFeatureValueFn as e}from"../../../../../../symbols/cim/utils.js";import{premultiplyAlphaRGBA as s}from"../../color.js";import{bitsetGenericLockColor as i,bitsetFillRandomPatternOffset as o,bitsetGenericConsiderAlphaOnly as r,bitsetFillHasUnresolvedReplacementColor as a,spritePadding as l,maxSizeForU16Compression as h,compressionFactorForU16 as n,bitsetFillHasPatternHeightPrecisionFactor as c,bitsetFillHasPatternWidthPrecisionFactor as f,minMaxZoomPrecisionFactor as m}from"../../definitions.js";import{degToByte as p}from"../../GeometryUtils.js";import{i1616to32 as _,i8888to32 as y}from"../../number.js";import{FillMaterialKey as d}from"../../materialKey/MaterialKey.js";import{getMinMaxZoom as u}from"./util.js";import M from"./WGLBaseFillTemplate.js";import g from"./WGLDynamicMeshTemplate.js";import{ok as x}from"../../util/Result.js";class j extends(M(g)){constructor(l,h,n){if(super(l),this._minMaxZoom=_(Math.round(h*m),Math.round(n*m)),e(l.color)){const t=(t,e,i)=>{const o=l.color(t,e,i);return o&&s(o)||0};this._dynamicPropertyMap.set("fillColor",t)}else{const t=l.color;this.fillColor=t&&s(t)||0}const c="CIMMarkerPlacementInsidePolygon"===l.cim.placement?.type&&l.cim.placement.shiftOddRows?2:1,f=l.height;if(e(f)){const t=(t,e,s)=>f(t,e,s)*c;this._dynamicPropertyMap.set("_height",t)}else this._height=(f||0)*c;const y=l.offsetX;if(e(y)){const e=(e,s,i)=>t(y(e,s,i));this._dynamicPropertyMap.set("_offsetX",e)}else this._offsetX=t(y||0);const d=l.offsetY;if(e(d)){const e=(e,s,i)=>t(-d(e,s,i));this._dynamicPropertyMap.set("_offsetY",e)}else this._offsetY=t(-d||0);const u=l.scaleX;e(u)?this._dynamicPropertyMap.set("_scaleX",u):this._scaleX=u||1;const M=l.angle;if(e(M)){const t=(t,e,s)=>p(M(t,e,s));this._dynamicPropertyMap.set("_angle",t)}else this._angle=p(M)||0;if(null!=l.effects){const t=l.effects;e(t)?this._dynamicPropertyMap.set("_effects",t):this._effects=t}this._cimFillLayer=l,this._bitset=(l.colorLocked?i:0)|(l.applyRandomOffset?o:0)|(l.sampleAlphaOnly?r:0)|(l.hasUnresolvedReplacementColor?a:0),this._fillMaterialKey=l.materialKey}static fromCIMFill(t,e){const[s,i]=u(t.scaleInfo,e);return new j(t,s,i)}bindFeature(e,s,i){const o=e.readLegacyFeature();this._dynamicPropertyMap.forEach(((t,e)=>{this[e]=t(o,s,i)}));const r=d.load(this._fillMaterialKey),a=this._materialCache,m=(0,this._cimFillLayer.materialHash)(o,s,i),p=a.get(m);let u=null;if(p&&x(p.spriteMosaicItem)&&(u=p.spriteMosaicItem),u){const{rect:e,width:s,height:i}=u,o=e.x+l,a=e.y+l,m=o+s,p=a+i;let d=t(this._height);d<=0&&(d=p-a),d<h&&(d*=n,this._bitset|=c),d=Math.round(d);let M=t(this._height/i*s);M<=0&&(M=m-o),M<h&&(M*=n,this._bitset|=f),M=Math.round(M);const g=this._scaleX,x=1;this.tl=_(o,a),this.br=_(m,p),this.aux21=_(M,d),this.aux22=_(this._offsetX,this._offsetY),this.aux3=y(g*n,x*n,this._angle,0),r.sdf=u.sdf,r.pattern=!0,r.textureBinding=u.textureBinding}else this.tl=0,this.br=0,this.aux21=0,this.aux22=0,this.aux3=0,r.sdf=!1,r.pattern=!1,r.textureBinding=0;this._materialKey=r.data}}export{j as default};
