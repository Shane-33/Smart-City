/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{pt2px as t}from"../../../../../../core/screenUtils.js";import{c as e}from"../../../../../../chunks/mat2df32.js";import{c as o}from"../../../../../../chunks/vec2f32.js";import{Alignment as i,ExtremityPlacement as r}from"../../../../../../symbols/cim/enums.js";import{premultiplyAlphaRGBA as s,premultiplyAlphaRGBAArray as a}from"../../color.js";import{bitsetMarkerAlignmentMap as n,bitsetMarkerAlignmentScreen as l,bitsetGenericLockColor as h,bitsetMarkerOutlineAllowColorOverride as m,bitsetMarkerScaleSymbolsProportionally as c,minMaxZoomPrecisionFactor as u,pictureFillColor as d}from"../../definitions.js";import{WGLSymbologyType as f}from"../../enums.js";import{i1616to32 as M,i8888to32 as S}from"../../number.js";import{MarkerMaterialKey as x}from"../../materialKey/MaterialKey.js";import{getMinMaxZoom as p,defaultMinZoom as y,defaultMaxZoom as V}from"./util.js";import _ from"./WGLBaseMarkerTemplate.js";import g from"./WGLMeshTemplate.js";class z extends(_(g)){constructor(t,r,s,a,d,p,y,V,_,g,z,b,k,w,B,j,C,P,v,E,T,A,L,R){super(),this.angle=a,this.height=y,this.width=p,this.xOffset=r*v,this.yOffset=s*v,this._markerPlacement=E||void 0,this._effects=T||void 0,this._anchorX=j,this._anchorY=C,this._minMaxZoom=M(Math.round(A*u),Math.round(L*u));const K=(w===i.MAP?n:l)|(z?h:0)|(k?m:0)|(b?c:0),W=B&&B.sdf,X=x.load(t);X.sdf=W,X.pattern=!0,X.textureBinding=B.textureBinding,this._materialKey=X.data,this._fillColor=d,this._outlineColor=_,this._sizeOutlineWidth=S(Math.round(Math.min(Math.sqrt(128*p),255)),Math.round(Math.min(Math.sqrt(128*y),255)),Math.round(Math.min(Math.sqrt(128*g),255)),Math.round(Math.min(Math.sqrt(128*V),255))),X.symbologyType===f.PIE_CHART?(p*=P*v,y*=P*v,this._computedWidth=p,this._computedHeight=y,this._texUpperLeft=M(0,1),this._texUpperRight=M(1,1),this._texBottomLeft=M(0,0),this._texBottomRight=M(1,0)):this._computeSize(p,y,P,g,v,B,X.hasSizeVV(),R);const q=Math.round(64*P);this._bitestAndDistRatio=M(K,q);const Y=o(),H=e();this._applyTransformation(H,Y)}static fromCIMMarker(e,o,r){const a=o&&o.width||1,n=o&&o.height||1,l=e.size,h=a/n*e.scaleX,m=e.scaleSymbolsProportionally&&e.frameHeight?l/e.frameHeight:1,c=s(e.color),u=s(e.outlineColor),d=t(l),f=d*h,M=t(e.offsetX||0),S=t(e.offsetY||0),x=t(e.outlineWidth||0)*m,y=e.alignment||i.SCREEN,V=t(e.referenceSize),[_,g]=p(e.scaleInfo,r);let b=e.rotation||0;e.rotateClockwise||(b=-b);let k=0,w=0;const B=e.anchorPoint;B&&(e.isAbsoluteAnchorPoint?l&&(k=B.x/(l*h),w=B.y/l):(k=B.x,w=B.y));const j=new z(e.materialKey,M,S,b,c,f,d,V,u,x,e.colorLocked,e.scaleSymbolsProportionally,!1,y,o,k,w,e.sizeRatio,e.scaleFactor??1,e.markerPlacement,e.effects,_,g,!0);return j._vertexBoundsScaleX=e.maxVVSize?e.maxVVSize/f:1,j._vertexBoundsScaleY=e.maxVVSize?e.maxVVSize/d:1,j}static fromPictureMarker(e,o){const r=Math.round(t(e.width)),s=Math.round(t(e.height)),a=d,n=Math.round(t(e.xoffset||0)),l=Math.round(t(e.yoffset||0)),h=new z(e.materialKey,n,l,e.angle,a,r,s,s,0,0,!1,!1,!1,i.SCREEN,o,0,0,1,1,null,null,y,V,!1);return h._vertexBoundsScaleX=e.maxVVSize?e.maxVVSize/e.width:1,h._vertexBoundsScaleY=e.maxVVSize?e.maxVVSize/e.height:1,h}static fromSimpleMarker(e,o){const r=e.style,s=a(e.color),n=Math.round(t(e.size));let l=n;"esriSMSTriangle"===r&&(l*=o.height/o.width);const h=Math.round(t(e.xoffset||0)),m=Math.round(t(e.yoffset||0)),c=e.outline,u=0|(c?.color&&a(c.color)),d=0|(c?.width&&Math.round(t(c.width))),f=new z(e.materialKey,h,m,e.angle??0,s,n,l,l,u,d,!1,!1,"esriSMSCross"===r||"esriSMSX"===r,i.SCREEN,o,0,0,2,1,null,null,y,V,!1);return f.boundsType="esriSMSCircle"===r?"circle":"square",f._vertexBoundsScaleX=e.maxVVSize?e.maxVVSize/e.size:1,f._vertexBoundsScaleY=e.maxVVSize?e.maxVVSize/e.size:1,f}static fromLineSymbolMarker(e,o){const s=a(e.color),n=6,l=Math.round(t(n*e.lineWidth)),h=l,m="cross"===e.style||"x"===e.style;let c;switch(e.placement){case"begin-end":c=r.Both;break;case"begin":c=r.JustBegin;break;case"end":c=r.JustEnd;break;default:c=r.None}const u={type:"CIMMarkerPlacementAtExtremities",angleToLine:!0,offset:0,extremityPlacement:c,offsetAlongLine:0},d=new z(e.materialKey,0,0,0,s,l,h,h/n,s,m?Math.round(t(e.lineWidth)):0,!1,!1,m,i.MAP,o,0,0,2,1,u,null,y,V,!1);return d.boundsType="circle"===e.style?"circle":"square",d}}export{z as default};
