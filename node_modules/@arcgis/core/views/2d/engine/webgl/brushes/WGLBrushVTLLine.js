/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{TranslateAnchor as e}from"../../vectorTiles/style/StyleDefinition.js";import{vtlTextureBindingUnitSprites as t}from"../definitions.js";import{WGLDrawPhase as i}from"../enums.js";import{u32to4Xu8 as n}from"../number.js";import a from"./WGLBrush.js";import{TextureSamplingMode as r,CompareFunction as o,PrimitiveType as s,DataType as l}from"../../../../webgl/enums.js";class f extends a{constructor(){super(...arguments),this._programOptions={id:!1,pattern:!1,sdf:!1}}dispose(){}drawMany(a,f){const{context:u,displayLevel:m,state:d,drawPhase:c,painter:p,pixelRatio:g,spriteMosaic:y,styleLayerUID:E,requestRender:v,allowDelayedRender:M}=a;if(!f.some((e=>e.layerData.get(E)?.lineIndexCount??!1)))return;const _=a.styleLayer,U=_.lineMaterial,I=p.vectorTilesMaterialManager,P=_.getPaintValue("line-translate",m),T=_.getPaintValue("line-translate-anchor",m),x=_.getPaintProperty("line-pattern"),D=void 0!==x,S=D&&x.isDataDriven;let L,N;if(D&&!S){const e=x.getValue(m);L=y.getMosaicItemPosition(e)}let R=!1;if(!D){const e=_.getPaintProperty("line-dasharray");if(N=void 0!==e,R=N&&e.isDataDriven,N&&!R){const t=e.getValue(m),i=_.getDashKey(t,_.getLayoutValue("line-cap",m));L=y.getMosaicItemPosition(i)}}const V=1/g,h=c===i.HITTEST,w=this._programOptions;w.id=h,w.pattern=D,w.sdf=N;const A=I.getMaterialProgram(u,U,w);if(M&&null!=v&&!A.compiled)return void v();if(u.useProgram(A),A.setUniformMatrix3fv("u_displayViewMat3",d.displayViewMat3),A.setUniformMatrix3fv("u_displayMat3",T===e.VIEWPORT?d.displayMat3:d.displayViewMat3),A.setUniform2fv("u_lineTranslation",P),A.setUniform1f("u_depth",_.z),A.setUniform1f("u_antialiasing",V),h){const e=n(E+1);A.setUniform4fv("u_id",e)}if(L&&null!=L){const{page:e}=L,i=y.getPageSize(e);null!=i&&(y.bind(u,r.LINEAR,e,t),A.setUniform2fv("u_mosaicSize",i),A.setUniform1i("u_texture",t))}let j=-1;for(const e of f){if(!e.layerData.has(E))continue;e.key.level!==j&&(j=e.key.level,U.setDataUniforms(A,m,_,j,y));const i=2**(m-j)/g;A.setUniform1f("u_zoomFactor",i);const n=e.layerData.get(E);if(!n.lineIndexCount)continue;n.prepareForRendering(u);const a=n.vao;if(null!=a){if(u.bindVAO(a),A.setUniformMatrix3fv("u_dvsMat3",e.transforms.dvs),u.setStencilFunction(o.EQUAL,e.stencilRef,255),S||R){const e=n.patternMap;if(!e)continue;for(const[i,n]of e){const e=y.getPageSize(i);null!=e&&(y.bind(u,r.LINEAR,i,t),A.setUniform2fv("u_mosaicSize",e),A.setUniform1i("u_texture",t),u.drawElements(s.TRIANGLES,n[1],l.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n[0]))}}else u.drawElements(s.TRIANGLES,n.lineIndexCount,l.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n.lineIndexStart);e.triangleCount+=n.lineIndexCount/3}}}}export{f as WGLBrushVTLLine};
