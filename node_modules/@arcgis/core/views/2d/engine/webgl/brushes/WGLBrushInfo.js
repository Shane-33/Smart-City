/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{f as t}from"../../../../../chunks/vec4f32.js";import{Pos2b as e}from"../DefaultVertexAttributeLayouts.js";import r from"./WGLBrush.js";import{background as i}from"../shaders/BackgroundPrograms.js";import{tileInfo as s}from"../shaders/TileInfoPrograms.js";import{BufferObject as o}from"../../../../webgl/BufferObject.js";import{BlendFactor as n,PrimitiveType as a,Usage as l,TextureWrapMode as u,TextureSamplingMode as m}from"../../../../webgl/enums.js";import{createProgram as f}from"../../../../webgl/ProgramTemplate.js";import{Texture as _}from"../../../../webgl/Texture.js";import{TextureDescriptor as c}from"../../../../webgl/TextureDescriptor.js";import{VertexArrayObject as g}from"../../../../webgl/VertexArrayObject.js";import d from"../../../../webgl/capabilities/isWebGL2Context.js";const h=300,b=32;class p extends r{constructor(){super(...arguments),this._color=t(1,0,0,1)}dispose(){this._outlineProgram?.dispose(),this._outlineProgram=null,this._tileInfoProgram?.dispose(),this._tileInfoProgram=null,this._outlineVertexArrayObject?.dispose(),this._outlineVertexArrayObject=null,this._tileInfoVertexArrayObject?.dispose(),this._tileInfoVertexArrayObject=null,this._canvas=null}prepareState({context:t}){t.setBlendingEnabled(!0),t.setBlendFunctionSeparate(n.ONE,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!1)}draw(t,e){const{context:r,requestRender:i,allowDelayedRender:s}=t;if(!e.isReady)return;if(this._loadWGLResources(r),s&&null!=i&&(!this._outlineProgram.compiled||!this._tileInfoProgram.compiled))return void i();r.bindVAO(this._outlineVertexArrayObject),r.useProgram(this._outlineProgram),this._outlineProgram.setUniformMatrix3fv("u_dvsMat3",e.transforms.dvs),this._outlineProgram.setUniform2f("u_coord_range",e.rangeX,e.rangeY),this._outlineProgram.setUniform1f("u_depth",0),this._outlineProgram.setUniform4fv("u_color",this._color),r.drawArrays(a.LINE_STRIP,0,4);const o=this._getTexture(r,e);o?(r.bindVAO(this._tileInfoVertexArrayObject),r.useProgram(this._tileInfoProgram),r.bindTexture(o,0),this._tileInfoProgram.setUniformMatrix3fv("u_dvsMat3",e.transforms.dvs),this._tileInfoProgram.setUniform1f("u_depth",0),this._tileInfoProgram.setUniform2f("u_coord_ratio",e.rangeX/e.width,e.rangeY/e.height),this._tileInfoProgram.setUniform2f("u_delta",8,8),this._tileInfoProgram.setUniform2f("u_dimensions",o.descriptor.width,o.descriptor.height),r.drawArrays(a.TRIANGLE_STRIP,0,4),r.bindVAO()):r.bindVAO()}_loadWGLResources(t){if(this._outlineProgram&&this._tileInfoProgram)return;const r=f(t,i),n=f(t,s),a=new Int8Array([0,0,1,0,1,1,0,1]),u=o.createVertex(t,l.STATIC_DRAW,a),m=new g(t,i.attributes,e,{geometry:u}),_=new Int8Array([0,0,1,0,0,1,1,1]),c=o.createVertex(t,l.STATIC_DRAW,_),d=new g(t,s.attributes,e,{geometry:c});this._outlineProgram=r,this._tileInfoProgram=n,this._outlineVertexArrayObject=m,this._tileInfoVertexArrayObject=d}_getTexture(t,e){if(e.texture&&e.triangleCountReportedInDebug===e.triangleCount)return e.texture;e.triangleCountReportedInDebug=e.triangleCount,this._canvas||(this._canvas=document.createElement("canvas"),this._canvas.setAttribute("id","tileCanvas2d"),this._canvas.setAttribute("width",`${h}`),this._canvas.setAttribute("height",`${b}`),this._canvas.setAttribute("style","display:none"));const r=e.triangleCount;let i=e.key.id;e.triangleCount>0&&(i+=`, ${r}`);const s=this._canvas,o=s.getContext("2d");o.font="24px sans-serif",o.textAlign="left",o.textBaseline="top",o.clearRect(0,0,h,b),r>1e5?(o.fillStyle="red",o.fillRect(0,0,h,b),o.fillStyle="black"):(o.clearRect(0,0,h,b),o.fillStyle="blue"),o.fillText(i,0,0);const n=new c;return n.wrapMode=u.CLAMP_TO_EDGE,n.samplingMode=m.NEAREST,n.isImmutable=d(t.gl),e.texture=new _(t,n,s),e.texture}}export{p as default};
