/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import o from"../../../../../../core/Logger.js";import{textureBindingHighlight1 as i}from"../../definitions.js";import{highlightSizing as t,shadeTextureSize as e,sigma as l}from"./parameters.js";import{TextureWrapMode as r}from"../../../../../webgl/enums.js";import{Texture as n}from"../../../../../webgl/Texture.js";import{TextureDescriptor as h}from"../../../../../webgl/TextureDescriptor.js";const s=o.getLogger("esri.views.2d.engine.webgl.painter.highlight.HighlightGradient");function a(o,i){i.fillColor[0]=o.color.r/255,i.fillColor[1]=o.color.g/255,i.fillColor[2]=o.color.b/255,i.fillColor[3]=o.color.a,o.haloColor?(i.outlineColor[0]=o.haloColor.r/255,i.outlineColor[1]=o.haloColor.g/255,i.outlineColor[2]=o.haloColor.b/255,i.outlineColor[3]=o.haloColor.a):(i.outlineColor[0]=i.fillColor[0],i.outlineColor[1]=i.fillColor[1],i.outlineColor[2]=i.fillColor[2],i.outlineColor[3]=i.fillColor[3]),i.fillColor[3]*=o.fillOpacity,i.outlineColor[3]*=o.haloOpacity,i.fillColor[0]*=i.fillColor[3],i.fillColor[1]*=i.fillColor[3],i.fillColor[2]*=i.fillColor[3],i.outlineColor[0]*=i.outlineColor[3],i.outlineColor[1]*=i.outlineColor[3],i.outlineColor[2]*=i.outlineColor[3],i.outlineWidth=t.outlineWidth,i.outerHaloWidth=t.outerHaloWidth,i.innerHaloWidth=t.innerHaloWidth,i.outlinePosition=t.outlinePosition}const u=[0,0,0,0];class d{constructor(){this._convertedHighlightOptions={fillColor:[.2*.75,.6*.75,.675,.75],outlineColor:[.2*.9,.54,.81,.9],outlinePosition:t.outlinePosition,outlineWidth:t.outlineWidth,innerHaloWidth:t.innerHaloWidth,outerHaloWidth:t.outerHaloWidth},this._shadeTexChanged=!0,this._texelData=new Uint8Array(4*e),this._minMaxDistance=[0,0]}setHighlightOptions(o){const i=this._convertedHighlightOptions;a(o,i);const t=i.outlinePosition-i.outlineWidth/2-i.outerHaloWidth,r=i.outlinePosition-i.outlineWidth/2,n=i.outlinePosition+i.outlineWidth/2,h=i.outlinePosition+i.outlineWidth/2+i.innerHaloWidth,d=Math.sqrt(Math.PI/2)*l,C=Math.abs(t)>d?Math.round(10*(Math.abs(t)-d))/10:0,f=Math.abs(h)>d?Math.round(10*(Math.abs(h)-d))/10:0;let g;C&&!f?s.error("The outer rim of the highlight is "+C+"px away from the edge of the feature; consider reducing some width values or shifting the outline position towards positive values (inwards)."):!C&&f?s.error("The inner rim of the highlight is "+f+"px away from the edge of the feature; consider reducing some width values or shifting the outline position towards negative values (outwards)."):C&&f&&s.error("The highlight is "+Math.max(C,f)+"px away from the edge of the feature; consider reducing some width values.");const c=[void 0,void 0,void 0,void 0];function m(o,i,t){c[0]=(1-t)*o[0]+t*i[0],c[1]=(1-t)*o[1]+t*i[1],c[2]=(1-t)*o[2]+t*i[2],c[3]=(1-t)*o[3]+t*i[3]}const{_texelData:p}=this;for(let l=0;l<e;++l)g=t+l/(e-1)*(h-t),g<t?(c[0]=0,c[1]=0,c[2]=0,c[3]=0):g<r?m(u,i.outlineColor,(g-t)/(r-t)):g<n?[c[0],c[1],c[2],c[3]]=i.outlineColor:g<h?m(i.outlineColor,i.fillColor,(g-n)/(h-n)):[c[0],c[1],c[2],c[3]]=i.fillColor,p[4*l]=255*c[0],p[4*l+1]=255*c[1],p[4*l+2]=255*c[2],p[4*l+3]=255*c[3];this._minMaxDistance[0]=t,this._minMaxDistance[1]=h,this._shadeTexChanged=!0}applyHighlightOptions(o,t){if(!this._shadeTex){const i=new h;i.wrapMode=r.CLAMP_TO_EDGE,i.width=e,i.height=1,this._shadeTex=new n(o,i)}this._shadeTexChanged&&(this._shadeTex.updateData(0,0,0,e,1,this._texelData),this._shadeTexChanged=!1),o.bindTexture(this._shadeTex,i),t.setUniform2fv("u_minMaxDistance",this._minMaxDistance)}destroy(){this._shadeTex?.dispose(),this._shadeTex=null}}export{d as default};
