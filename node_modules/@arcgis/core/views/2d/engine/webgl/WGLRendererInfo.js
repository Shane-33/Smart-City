/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{pt2px as e}from"../../../../core/screenUtils.js";import{getMetersPerUnitForSR as t}from"../../../../core/unitUtils.js";import{meterIn as i}from"../../../../renderers/support/lengthUtils.js";import{isDefined as s,isNumber as a}from"./Utils.js";import{Technique as l}from"./techniques/Technique.js";import{getTechniqueFromRenderer as r}from"./techniques/utils.js";import{getWebGLCapabilities as o}from"../../../webgl/capabilities.js";function n(e,t){const i=t.length;if(e<t[0].value||1===i)return t[0].size;for(let s=1;s<i;s++)if(e<t[s].value){const i=(e-t[s-1].value)/(t[s].value-t[s-1].value);return t[s-1].size+i*(t[s].size-t[s-1].size)}return t[i-1].size}class v{constructor(){this.symbolLevels=[],this.vvColorValues=new Float32Array(8),this.vvColors=new Float32Array(32),this.vvOpacityValues=new Float32Array(8),this.vvOpacities=new Float32Array(8),this.vvSizeMinMaxValue=new Float32Array(4),this.outsideLabelsVisible=!1,this._vvMaterialParameters={vvSizeEnabled:!1,vvColorEnabled:!1,vvRotationEnabled:!1,vvRotationType:"geographic",vvOpacityEnabled:!1},this._technique=l}getSizeVVFieldStops(e){const t=this._vvSizeFieldStops;if(t)switch(t.type){case"static":return t;case"level-dependent":return t.levels[e]??(()=>{let i=1/0,s=0;for(const o in t.levels){const t=parseFloat(o),a=Math.abs(e-t);a<i&&(i=a,s=t)}if(i===1/0)return{sizes:new Float32Array([0,0,0,0,0,0]),values:new Float32Array([0,0,0,0,0,0])};const a=2**((e-s)/2),l=t.levels[s],r=new Float32Array(l.values);return r[2]*=a,r[3]*=a,{sizes:l.sizes,values:r}})();default:return}}get vvMaterialParameters(){return this._vvMaterialParameters}update(e){null!=this._vvInfo&&this._updateVisualVariables(this._vvInfo.vvRanges,e)}setInfo(e,t,i){this._updateEffects(i),this._vvInfo=t,this._technique=r(e),this.rendererSchema=this._technique.createOrUpdateRendererSchema(this.rendererSchema,e)}getVariation(){return{...this._technique.getVariation(this.rendererSchema),outsideLabelsVisible:this.outsideLabelsVisible,supportsTextureFloat:o("2d").supportsTextureFloat}}getVariationHash(){return this._technique.getVariationHash(this.rendererSchema)<<1|(this.outsideLabelsVisible?1:0)}_updateEffects(e){this.outsideLabelsVisible=null!=e&&e.excludedLabelsVisible}_updateVisualVariables(l,r){const o=this._vvMaterialParameters;if(o.vvOpacityEnabled=!1,o.vvSizeEnabled=!1,o.vvColorEnabled=!1,o.vvRotationEnabled=!1,!l)return;const v=l.size;if(v){if(o.vvSizeEnabled=!0,v.minMaxValue){const t=v.minMaxValue;let i,l;if(s(t.minSize)&&s(t.maxSize))if(a(t.minSize)&&a(t.maxSize))i=e(t.minSize),l=e(t.maxSize);else{const s=r.scale;i=e(n(s,t.minSize.stops)),l=e(n(s,t.maxSize.stops))}this.vvSizeMinMaxValue.set([t.minDataValue,t.maxDataValue,i,l])}if(v.scaleStops&&(this.vvSizeScaleStopsValue=e(n(r.scale,v.scaleStops.stops))),v.unitValue){const e=t(r.spatialReference)/i[v.unitValue.unit];this.vvSizeUnitValueToPixelsRatio=e/r.resolution}v.fieldStops&&(this._vvSizeFieldStops=v.fieldStops)}const u=l.color;u&&(o.vvColorEnabled=!0,this.vvColorValues.set(u.values),this.vvColors.set(u.colors));const c=l.opacity;c&&(o.vvOpacityEnabled=!0,this.vvOpacityValues.set(c.values),this.vvOpacities.set(c.opacities));const h=l.rotation;h&&(o.vvRotationEnabled=!0,o.vvRotationType=h.type)}}export{v as WGLRendererInfo};
