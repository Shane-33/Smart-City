/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{disposeMaybe as t}from"../../../../core/maybe.js";import{estimateSize as e}from"../../../../core/typedArrayUtil.js";import{BucketType as r}from"./enums.js";import{deserializeSymbols as n}from"./decluttering/util.js";import{BufferObject as s}from"../../../webgl/BufferObject.js";import{Usage as i}from"../../../webgl/enums.js";import{VertexArrayObject as a}from"../../../webgl/VertexArrayObject.js";class o{constructor(t,e){this.layerUIDs=[],this.isDestroyed=!1,this._data=t;let r=1;const n=new Uint32Array(t);this.layerUIDs=[];const s=n[r++];for(let i=0;i<s;i++)this.layerUIDs[i]=n[r++];this.bufferDataOffset=r,e&&(this.layer=e.getStyleLayerByUID(this.layerUIDs[0]))}get isPreparedForRendering(){return null==this._data}get offset(){return this.bufferDataOffset}get data(){return this._data}destroy(){this.isDestroyed||(this.doDestroy(),this._data=null,this.isDestroyed=!0)}prepareForRendering(t){null!=this._data&&(this.doPrepareForRendering(t,this._data,this.bufferDataOffset),this._data=null)}}class h extends o{constructor(t,e){super(t,e),this.type=r.LINE,this.lineIndexStart=0,this.lineIndexCount=0;const n=new Uint32Array(t);let s=this.bufferDataOffset;this.lineIndexStart=n[s++],this.lineIndexCount=n[s++];const i=n[s++];if(i>0){this.patternMap=new Map;for(let t=0;t<i;t++){const t=n[s++],e=n[s++],r=n[s++];this.patternMap.set(t,[e,r])}}this.bufferDataOffset=s}get memoryUsed(){return(this.data?.byteLength??0)+(this.vao?.usedMemory??0)}hasData(){return this.lineIndexCount>0}triangleCount(){return this.lineIndexCount/3}doDestroy(){this.vao=t(this.vao)}doPrepareForRendering(t,e,r){const n=new Uint32Array(e),o=new Int32Array(n.buffer),h=n[r++],f=s.createVertex(t,i.STATIC_DRAW,new Int32Array(o.buffer,4*r,h));r+=h;const c=n[r++],l=s.createIndex(t,i.STATIC_DRAW,new Uint32Array(n.buffer,4*r,c));r+=c;const u=this.layer.lineMaterial;this.vao=new a(t,u.getAttributeLocations(),u.getLayoutInfo(),{geometry:f},l)}}class f extends o{constructor(t,e){super(t,e),this.type=r.FILL,this.fillIndexStart=0,this.fillIndexCount=0,this.outlineIndexStart=0,this.outlineIndexCount=0;const n=new Uint32Array(t);let s=this.bufferDataOffset;this.fillIndexStart=n[s++],this.fillIndexCount=n[s++],this.outlineIndexStart=n[s++],this.outlineIndexCount=n[s++];const i=n[s++];if(i>0){this.patternMap=new Map;for(let t=0;t<i;t++){const t=n[s++],e=n[s++],r=n[s++];this.patternMap.set(t,[e,r])}}this.bufferDataOffset=s}get memoryUsed(){return(this.data?.byteLength??0)+(this.fillVAO?.usedMemory??0)+(this.outlineVAO?.usedMemory??0)}hasData(){return this.fillIndexCount>0||this.outlineIndexCount>0}triangleCount(){return(this.fillIndexCount+this.outlineIndexCount)/3}doDestroy(){this.fillVAO=t(this.fillVAO),this.outlineVAO=t(this.outlineVAO)}doPrepareForRendering(t,e,r){const n=new Uint32Array(e),o=new Int32Array(n.buffer),h=n[r++],f=s.createVertex(t,i.STATIC_DRAW,new Int32Array(o.buffer,4*r,h));r+=h;const c=n[r++],l=s.createIndex(t,i.STATIC_DRAW,new Uint32Array(n.buffer,4*r,c));r+=c;const u=n[r++],y=s.createVertex(t,i.STATIC_DRAW,new Int32Array(o.buffer,4*r,u));r+=u;const d=n[r++],A=s.createIndex(t,i.STATIC_DRAW,new Uint32Array(n.buffer,4*r,d));r+=d;const I=this.layer,g=I.fillMaterial,p=I.outlineMaterial;this.fillVAO=new a(t,g.getAttributeLocations(),g.getLayoutInfo(),{geometry:f},l),this.outlineVAO=new a(t,p.getAttributeLocations(),p.getLayoutInfo(),{geometry:y},A)}}class c extends o{constructor(t,e,s){super(t,e),this.type=r.SYMBOL,this.iconPerPageElementsMap=new Map,this.glyphPerPageElementsMap=new Map,this.symbolInstances=[],this.isIconSDF=!1,this.opacityChanged=!1,this.lastOpacityUpdate=0,this.symbols=[];const i=new Uint32Array(t),a=new Int32Array(t),o=new Float32Array(t);let h=this.bufferDataOffset;this.isIconSDF=!!i[h++];const f=i[h++];for(let r=0;r<f;r++){const t=i[h++],e=i[h++],r=i[h++];this.iconPerPageElementsMap.set(t,[e,r])}const c=i[h++];for(let r=0;r<c;r++){const t=i[h++],e=i[h++],r=i[h++];this.glyphPerPageElementsMap.set(t,[e,r])}const l=i[h++],u=i[h++];this.iconOpacity=new Int32Array(l),this.textOpacity=new Int32Array(u),h=n(i,a,o,h,this.symbols,s),this.bufferDataOffset=h}get memoryUsed(){return(this.data?.byteLength??0)+(this.iconVAO?.usedMemory??0)+(this.textVAO?.usedMemory??0)+e(this.iconOpacity)+e(this.textOpacity)}hasData(){return this.iconPerPageElementsMap.size>0||this.glyphPerPageElementsMap.size>0}triangleCount(){let t=0;for(const[e,r]of this.iconPerPageElementsMap)t+=r[1];for(const[e,r]of this.glyphPerPageElementsMap)t+=r[1];return t/3}doDestroy(){this.iconVAO=t(this.iconVAO),this.textVAO=t(this.textVAO)}updateOpacityInfo(){if(!this.opacityChanged)return;this.opacityChanged=!1;const t=this.iconOpacity,e=this.iconVAO.vertexBuffers.opacity;t.length>0&&t.byteLength===e.byteLength&&e.setSubData(t,0,0,t.length);const r=this.textOpacity,n=this.textVAO.vertexBuffers.opacity;r.length>0&&r.byteLength===n.byteLength&&n.setSubData(r,0,0,r.length)}doPrepareForRendering(t,e,r){const n=new Uint32Array(e),o=new Int32Array(n.buffer),h=n[r++],f=s.createVertex(t,i.STATIC_DRAW,new Int32Array(o.buffer,4*r,h));r+=h;const c=n[r++],l=s.createIndex(t,i.STATIC_DRAW,new Uint32Array(n.buffer,4*r,c));r+=c;const u=n[r++],y=s.createVertex(t,i.STATIC_DRAW,new Int32Array(o.buffer,4*r,u));r+=u;const d=n[r++],A=s.createIndex(t,i.STATIC_DRAW,new Uint32Array(n.buffer,4*r,d));r+=d;const I=s.createVertex(t,i.STATIC_DRAW,this.iconOpacity.buffer),g=s.createVertex(t,i.STATIC_DRAW,this.textOpacity.buffer),p=this.layer,x=p.iconMaterial,b=p.textMaterial;this.iconVAO=new a(t,x.getAttributeLocations(),x.getLayoutInfo(),{geometry:f,opacity:I},l),this.textVAO=new a(t,b.getAttributeLocations(),b.getLayoutInfo(),{geometry:y,opacity:g},A)}}class l extends o{constructor(t,e){super(t,e),this.type=r.CIRCLE,this.circleIndexStart=0,this.circleIndexCount=0;const n=new Uint32Array(t);let s=this.bufferDataOffset;this.circleIndexStart=n[s++],this.circleIndexCount=n[s++],this.bufferDataOffset=s}get memoryUsed(){return(this.data?.byteLength??0)+(this.vao?.usedMemory??0)}hasData(){return this.circleIndexCount>0}triangleCount(){return this.circleIndexCount/3}doDestroy(){this.vao=t(this.vao)}doPrepareForRendering(t,e,r){const n=new Uint32Array(e),o=new Int32Array(n.buffer),h=n[r++],f=s.createVertex(t,i.STATIC_DRAW,new Int32Array(o.buffer,4*r,h));r+=h;const c=n[r++],l=s.createIndex(t,i.STATIC_DRAW,new Uint32Array(n.buffer,4*r,c));r+=c;const u=this.layer.circleMaterial;this.vao=new a(t,u.getAttributeLocations(),u.getLayoutInfo(),{geometry:f},l)}}export{l as CircleRenderBucket,f as FillRenderBucket,h as LineRenderBucket,o as RenderBucketBase,c as SymbolRenderBucket};
