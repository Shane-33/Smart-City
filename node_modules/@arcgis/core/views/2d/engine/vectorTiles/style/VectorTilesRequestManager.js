/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import t from"../../../../../request.js";import{clone as r}from"../../../../../core/lang.js";import{getOrCreateMapValue as e}from"../../../../../core/MapUtils.js";import{onAbort as o,isAborted as s}from"../../../../../core/promiseUtils.js";import{urlToObject as i,addQueryParameters as n}from"../../../../../core/urlUtils.js";class l{constructor(t){this._tileUrl=t,this._promise=null,this._abortController=null,this._abortOptions=[]}getData(t){null===this._promise&&(this._abortController=new AbortController,this._promise=this._makeRequest(this._tileUrl,this._abortController.signal));const e=this._abortOptions;return e.push(t),o(t,(()=>{e.every((t=>s(t)))&&this._abortController.abort()})),this._promise.then((t=>r(t)))}async _makeRequest(r,e){const{data:o}=await t(r,{responseType:"array-buffer",signal:e});return o}}const a=new Map;function c(t,r,e,o,s){const l=i(t),a=l.query;if(a)for(const[i,n]of Object.entries(a))switch(n){case"{x}":a[i]=o.toString();break;case"{y}":a[i]=e.toString();break;case"{z}":a[i]=r.toString()}const c=l.path;return p(n(c.replaceAll(/\{z\}/gi,r.toString()).replaceAll(/\{y\}/gi,e.toString()).replaceAll(/\{x\}/gi,o.toString()),{...l.query}),s)}function p(t,r){return e(a,t,(()=>new l(t))).getData(r).then((r=>(a.delete(t),r))).catch((r=>{throw a.delete(t),r}))}export{c as request};
