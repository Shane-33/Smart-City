/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import e from"../../Color.js";import s from"../../core/Accessor.js";import{createTask as o}from"../../core/asyncUtils.js";import{multiplyOpacity as r,getContrast as i,BrightnessThreshold as n}from"../../core/colorUtils.js";import{makeHandle as l}from"../../core/handleUtils.js";import{throwIfAborted as a}from"../../core/promiseUtils.js";import{formatLength as c}from"../../core/quantityFormatUtils.js";import{watch as p,on as h}from"../../core/reactiveUtils.js";import{createScreenPointArray as d}from"../../core/screenUtils.js";import{property as m}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import"../../core/arrayUtils.js";import"../../core/has.js";import{subclass as u}from"../../core/accessorSupport/decorators/subclass.js";import{k as b,s as f,e as g,a as x,l as _,i as y}from"../../chunks/vec2.js";import{a as v}from"../../chunks/vec2f64.js";import{G as j}from"../../chunks/vec3.js";import{isClockwise as I}from"../../geometry/support/coordsUtils.js";import{fetchMessageBundle as U}from"../../intl/messages.js";import{getGeometryEffectiveElevationMode as L}from"../../support/elevationInfoUtils.js";import{getDefaultUnitForView as C}from"../../support/getDefaultUnitForView.js";import k from"../overlay/TextOverlayItem.js";import{autoDirectDistanceByElevationMode as S}from"../support/automaticLengthMeasurementUtils.js";const w=3025,D={default:15,far:25};let O=class extends s{constructor(t){super(t),this.context=null,this.stagedVertex=null,this.visible=!0,this.edgeDistance="default",this._messagesUnits=null,this._labelInfos=[],this._nextLabelIndex=0}initialize(){const t=o((async t=>{const e=await U("esri/core/t9n/Units");a(t),this._messagesUnits=e}));this.addHandles([p((()=>[null!=this.context&&this.getCameraOrExtent(this.context),this.visible,this._edgeDistancePixels,this.stagedVertex,this._messagesUnits]),(()=>this._update())),...["vertex-add","vertex-update","vertex-remove"].map((t=>h((()=>this.context?.editGeometryOperations),t,(()=>this._update())))),l((()=>t.abort())),p((()=>this._colors),(t=>this._updateStyle(t)))])}destroy(){for(this._nextLabelIndex=0;this._labelInfos.length;)this._destroyLabel(this._labelInfos.pop())}get updating(){return null==this._messagesUnits}get test(){return{labelContents:this._labelInfos.slice(0,this._nextLabelIndex).map((t=>t.label.text))}}get _edgeDistancePixels(){return D[this.edgeDistance]}get _colors(){const t=this.context?.view.effectiveTheme.textColor??e.fromArray([255,255,255]);return{textColor:t,backgroundColor:r(i(t,n.Low),.6)}}_update(){if(this.destroyed)return;this._nextLabelIndex=0;const t=this.context;if(null==t)return void this._destroyUnusedLabels();const{components:e,geometry:s,coordinateHelper:o}=t.editGeometryOperations.data;if(!s)return void this._destroyUnusedLabels();const r=e.length;for(let i=0;i<r;++i){const n=[];if(e[i].iterateVertices((t=>{n.push(o.toXYZ(t.pos))})),0===i&&null!=this.stagedVertex&&n.push(o.toXYZ(this.stagedVertex)),n.length<2)continue;const l=n[0],a=n[n.length-1];"polygon"===s.type&&n.length>2&&!j(l,a)&&n.push(l);const c=1===r&&!I(n);let p=G,h=A;this.toScreenPointArray(t,l,p);for(let e=1;e<n.length;++e){const s=n[e-1],o=n[e];this.toScreenPointArray(t,o,h),this._addLabel(t,s,p,o,h,c),[p,h]=[h,p]}}this._destroyUnusedLabels()}_updateStyle({textColor:t,backgroundColor:e}){const s=this._nextLabelIndex,o=this._labelInfos;for(let r=0;r<s;++r){const{label:s}=o[r];s.textColor=t,s.backgroundColor=e}}_addLabel(t,e,s,o,r,i){const{label:n}=this._getOrCreateLabel(t);if(!this.visible||b(s,r)<w)return void(n.visible=!1);const l=null!=t.graphicState?t.graphicState.isDraped?"on-the-ground":"absolute-height":L(t.editGeometryOperations.data.geometry,t.elevationInfo),{spatialReference:a}=t.editGeometryOperations.data,p=S(e,o,a,l),h=this._messagesUnits,d=C(t.view);n.text=null!=h&&null!=p?c(h,p,d):"",n.visible=!0;const m=r[0]-s[0],u=r[1]-s[1];i?f(V,-u,m):f(V,u,-m),g(V,V),x(V,V,this._edgeDistancePixels),_(P,s,r,.5),y(P,P,V),n.position=[P[0],P[1]],Math.abs(V[0])>Math.abs(V[1])?n.anchor=V[0]>0?"left":"right":n.anchor=-V[1]<0?"top":"bottom"}_getOrCreateLabel(t){const e=this._labelInfos.length>this._nextLabelIndex,{textColor:s,backgroundColor:o}=this._colors;if(e){const t=this._labelInfos[this._nextLabelIndex++],{label:e}=t;return e.textColor=s,e.backgroundColor=o,t}const r=new k({anchor:"center",fontSize:10,textColor:s,backgroundColor:o});t.view.overlay?.items.add(r);const i={label:r};return this._labelInfos.push(i),this._nextLabelIndex=this._labelInfos.length,i}_destroyUnusedLabels(){for(;this._labelInfos.length>this._nextLabelIndex;)this._destroyLabel(this._labelInfos.pop())}_destroyLabel({label:t}){this.context?.view.overlay?.items.remove(t),t.destroy()}};t([m()],O.prototype,"context",void 0),t([m()],O.prototype,"stagedVertex",void 0),t([m()],O.prototype,"visible",void 0),t([m()],O.prototype,"edgeDistance",void 0),t([m()],O.prototype,"updating",null),t([m()],O.prototype,"_messagesUnits",void 0),t([m()],O.prototype,"_edgeDistancePixels",null),t([m()],O.prototype,"_colors",null),O=t([u("esri.views.interactive")],O);const V=v(),P=v(),G=d(),A=d();export{O as SegmentLabels};
