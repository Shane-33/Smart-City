/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../chunks/tslib.es6.js";import{zeroMeters as o,createLength as r,toUnit as e}from"../../../../core/quantityUtils.js";import{property as s}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/accessorSupport/ensureType.js";import"../../../../core/arrayUtils.js";import"../../../../core/has.js";import{subclass as i}from"../../../../core/accessorSupport/decorators/subclass.js";import{TooltipField as a}from"./TooltipField.js";let c=class extends a{constructor(t){super(t),this.mode="absolute-height"}normalizeCtorArgs(t){const s=t=>t.inputUnitInfos.verticalLength.unit;return{actual:o,createQuantity:(t,o)=>r(t,s(o)),toInputUnits:(t,o)=>e(t,s(o)),format:(t,o)=>o.formatters.verticalLength(t),suffix:t=>t.inputUnitInfos.verticalLength.abbreviation,title:t=>t.messages.sketch.elevation,...t}}};t([s()],c.prototype,"mode",void 0),c=t([i("esri.views.interactive.tooltip.fields.TooltipFieldElevation")],c);export{c as TooltipFieldElevation};
