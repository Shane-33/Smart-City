/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import e from"../../Graphic.js";import o from"../../core/Evented.js";import{makeHandle as i}from"../../core/handleUtils.js";import{destroyMaybe as r}from"../../core/maybe.js";import{memoize as n}from"../../core/memoize.js";import{createLength as l,zeroMeters as a,zeroSquareMeters as s,zeroDegrees as p}from"../../core/quantityUtils.js";import{watch as c,syncAndInitial as h}from"../../core/reactiveUtils.js";import{getMetersPerVerticalUnitForSR as u}from"../../core/unitUtils.js";import{property as d}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import"../../core/arrayUtils.js";import"../../core/has.js";import{subclass as m}from"../../core/accessorSupport/decorators/subclass.js";import y from"../../layers/GraphicsLayer.js";import{getConvertedElevation as g}from"../../support/elevationInfoUtils.js";import{createSquare as v,createRectangle as f,createCircle as _,createEllipse as w,createPolygon as O,createPolyline as x,createMultipoint as G}from"./support/createUtils.js";import{getDrawHelpMessage as V}from"./support/helpMessageUtils.js";import{createViewAlignedCoordinateSystem as T}from"./support/surfaceCoordinateSystems.js";import{InteractiveToolBase as b}from"../interactive/InteractiveToolBase.js";import{tooltipKeys as C}from"../interactive/keybindings.js";import I from"../interactive/sketch/SketchLabelOptions.js";import j from"../interactive/sketch/SketchTooltipOptions.js";import{intersectAll as S,getDistanceConstraint as U,getOrientationConstraint as k,getElevationConstraint as M}from"../interactive/tooltip/constraintUtils.js";import{DrawPointTooltipInfo as P,DrawPolylineTooltipInfo as z,DrawPolygonTooltipInfo as D,DrawMeshTooltipInfo as E,DrawRectangleTooltipInfo as H,DrawCircleTooltipInfo as A}from"../interactive/tooltip/DrawTooltipInfos.js";import{Tooltip as R}from"../interactive/tooltip/Tooltip.js";import{orientationBetweenPoints as L}from"../support/angularMeasurementUtils.js";import{autoAreaByElevationMode as Z}from"../support/automaticAreaMeasurementUtils.js";import{autoLengthByElevationMode as F,autoDirectDistanceByElevationModeBetweenPoints as N,autoHorizontalDistanceByElevationModeBetweenPoints as q}from"../support/automaticLengthMeasurementUtils.js";import{autorun as B}from"../../core/accessorSupport/trackingUtils.js";class J{constructor(){this.regularVertices=null,this.activeVertex=null,this.full=null,this.outline=null,this.circle=null,this.rectangle=null}}let K=class extends(o.EventedMixin(b)){constructor(t){super(t),this._graphic=null,this._createOperationGeometry=null,this.defaultZ=0,this.geometryType=null,this.hasZ=!0,this.labelOptions=new I,this.geometryToPlace=null,this.mode=null,this.snappingManager=null,this.snapToScene=!1,this.tooltip=null,this.tooltipOptions=new j,this._getPointConstraint=n((t=>t)),this._getPolylineOrPolygonConstraint=n(((t,e,o)=>S([t,e,o]))),this._getDistanceConstraint=n(U),this._getOrientationConstraint=n(k),this._getElevationConstraint=n(M)}initialize(){this.internalGraphicsLayer=new y({listMode:"hide",internal:!0}),this.view.map.layers.add(this.internalGraphicsLayer),this.drawOperation=this.makeDrawOperation();const t=this.tooltipOptions,e=this.view.type;this.tooltipInfos={point:new P({tooltipOptions:t,viewType:e}),polyline:new z({tooltipOptions:t,viewType:e}),polygon:new D({tooltipOptions:t,viewType:e}),mesh:new E({tooltipOptions:t,viewType:e}),rectangle:new H({tooltipOptions:t}),circle:new A({tooltipOptions:t})},this.addHandles([this.drawOperation.on("vertex-add",(t=>this.onVertexAdd(t))),this.drawOperation.on("vertex-remove",(t=>this.onVertexRemove(t))),this.drawOperation.on("vertex-update",(t=>this.onVertexUpdate(t))),this.drawOperation.on("cursor-update",(t=>this.onCursorUpdate(t))),this.drawOperation.on("complete",(t=>this.onComplete(t))),c((()=>this.cursor),(t=>{this.drawOperation.cursor=t}),h),c((()=>this.tooltipOptions.enabled),(t=>{this.tooltip=t?new R({view:this.view,info:this._tooltipInfo}):r(this.tooltip)}),h),B((()=>this._updateTooltipInfo()))]),this.finishToolCreation()}destroy(){this.drawOperation=r(this.drawOperation),this.tooltip=r(this.tooltip),this._destroyAllVisualisations(),this.view.map.remove(this.internalGraphicsLayer),this.internalGraphicsLayer=r(this.internalGraphicsLayer),this._set("view",null)}get _defaultElevation(){return l(this.defaultZ,"meters")}get canRedo(){return this.drawOperation.canRedo}get canUndo(){return this.drawOperation.canUndo}set centered(t){this._set("centered",t),this._updateGraphic()}get cursor(){return this._get("cursor")}set cursor(t){this._set("cursor",t)}set enabled(t){this.drawOperation.interactive=t,this._set("enabled",t)}set forceUniformSize(t){this._set("forceUniformSize",t),this._updateGraphic()}get graphic(){return this._graphic}set graphicSymbol(t){this._set("graphicSymbol",t),null!=this._graphic&&(this._graphic.symbol=t)}get updating(){return this.drawOperation?.updating??!1}completeCreateOperation(){this.drawOperation.complete()}onInputEvent(t){const e=this._tooltipInfo;if("key-down"===t.type&&t.key===C.enterInputMode&&null!=e&&e.editableFields.length>0&&this.tooltipOptions.inputEnabled)return e.enterInputMode(),void t.stopPropagation();this.drawOperation.onInputEvent(t)}redo(){this.drawOperation.redo()}reset(){}undo(){this.drawOperation.undo()}_destroyAllVisualisations(){this.removeHandles(W.outline),this.removeHandles(W.regularVertices),this.removeHandles(W.activeVertex),this.removeHandles(Q)}_createOrUpdateGraphic(t){if(null!=this._graphic)return this.updateGraphicGeometry(this._graphic,t),this._graphic;const o=this._graphic=new e({...this.graphicProperties,symbol:this.graphicSymbol});return this.updateGraphicGeometry(o,t),this.internalGraphicsLayer.add(o),this.addHandles(this.initializeGraphic(o)),this.notifyChange("graphic"),this.addHandles(i((()=>{this.internalGraphicsLayer.remove(o),r(o),this._graphic===o&&(this._graphic=null)})),Q),o}updateGraphicGeometry(t,e){t.geometry=e}_getCreateOperationGeometry(t={operationComplete:!1}){const{drawOperation:e}=this;if(null==e||0===e.numVertices)return null;const{coordinateHelper:o,view:i}=e,r=e.stagedVertex,n=e.committedVertices,l=n.slice(),a=null!=r;a&&l.push(o.pointToArray(r));const s=a?o.pointToArray(r):n.splice(-1)[0],p=l.length,c=i.spatialReference,h="3d"===i.type&&"global"===i.viewingMode,u=new J;switch(this.geometryType){case"point":case"mesh":u.regularVertices=n,u.activeVertex=s,u.full=o.arrayToPoint(l[0]);break;case"multipoint":u.regularVertices=n,u.activeVertex=s,p>0&&(u.full=G(l,c));break;case"polyline":u.regularVertices=n,u.activeVertex=s,p>0&&(u.full=x([l],c,h));break;case"polygon":u.regularVertices=n,u.activeVertex=s,p>0&&(u.full=O([l],c,h,!0));break;case"circle":if(p>0){const e=T(i,l[0]);if(1===p&&t.operationComplete){const t=l[0],o=e.makeMapPoint(t[0]+Y*i.resolution,t[1]);u.circle=_([t,o],e,!0),u.full=null!=u.circle?u.circle.geometry:null}else 2===p&&(this.forceUniformSize?(u.circle=_(l,e,this.centered),u.full=null!=u.circle?u.circle.geometry:null):(u.rectangle=w(l,e,this.centered),u.full=u.rectangle.geometry))}break;case"rectangle":if(p>0){const e=T(i,l[0]);if(1===p&&t.operationComplete){const t=l[0],o=e.makeMapPoint(t[0]+Y*i.resolution,t[1]);u.rectangle=v([t,o],e,!0),u.full=u.rectangle.geometry}else 2===p&&(u.rectangle=this.forceUniformSize?v(l,e,this.centered):f(l,e,this.centered),u.full=u.rectangle.geometry)}break;default:return null}switch(this.geometryType){case"point":case"multipoint":break;case"polyline":u.outline=p>1?x([l],c,h):null;break;case"polygon":u.outline=p>1?O([l],c,h):null;break;case"circle":case"rectangle":u.outline="polygon"===u.full?.type?O(u.full.rings,c,h):null}return u}initializeGraphic(t){return i()}onComplete(t){this._updateGraphic();let e=null;if(this.drawOperation.isCompleted){const t=this._getCreateOperationGeometry({operationComplete:!0});null!=t&&(e=this._createOrUpdateGraphic(t.full).clone())}this._createOperationGeometry=null,this.emit("complete",{graphic:e,...t})}onCursorUpdate(t){this._updateGraphic(),this.emit("cursor-update",t)}onDeactivate(){this.drawOperation.isCompleted||this.drawOperation.cancel()}onVertexAdd(t){this._updateGraphic(),this._clearConstraints(),this.emit("vertex-add",t)}onVertexRemove(t){this._updateGraphic(),this._clearConstraints(),this.emit("vertex-remove",t)}onVertexUpdate(t){this._updateGraphic(),this.emit("vertex-update",t)}_updateGraphic(){const t=this._getCreateOperationGeometry();this._createOperationGeometry=t,null!=t?(null!=t.outline?this.addHandles(this.onOutlineChanged(t.outline),W.outline):this.removeHandles(W.outline),null!=t.regularVertices?this.addHandles(this.onRegularVerticesChanged(t.regularVertices),W.regularVertices):this.removeHandles(W.regularVertices),null!=t.activeVertex?this.addHandles(this.onActiveVertexChanged(t.activeVertex),W.activeVertex):this.removeHandles(W.activeVertex),null!=t.full?this._createOrUpdateGraphic(t.full):this.removeHandles(Q)):this._destroyAllVisualisations()}get _tooltipInfo(){const{drawOperation:t,graphic:e,view:o}=this;if(!t)return null;const i=this.tooltipInfos,r=e?.geometry?.type;switch(this.geometryType){case"point":return"2d"===o.type&&0===this.defaultZ?null:"point"===r?i.point:null;case"polyline":return"polyline"===r?i.polyline:null;case"polygon":return"polygon"===r?i.polygon:null;case"rectangle":return"polygon"===r?i.rectangle:null;case"circle":return"polygon"===r?i.circle:null;case"mesh":return"mesh"===r?i.mesh:null;default:return null}}_updateTooltipInfo(){const{_tooltipInfo:t,tooltip:e}=this;if(t&&e){switch(t.type){case"draw-point":this._updateDrawPointTooltipInfo(t);break;case"draw-polyline":this._updateDrawPolylineTooltipInfo(t);break;case"draw-polygon":this._updateDrawPolygonTooltipInfo(t);break;case"draw-rectangle":this._updateDrawRectangleTooltipInfo(t);break;case"draw-circle":this._updateDrawCircleTooltipInfo(t);break;case"draw-mesh":this.updateDrawMeshTooltipInfo(t)}e.info=t}}_updateDrawPointTooltipInfo(t){const{drawOperation:e,graphic:o,view:i,tooltipOptions:r}=this,{elevationInfo:n,stagedVertex:l}=e;if(t.tooltipOptions=r,t.viewType=i.type,t.helpMessage=V("point",o?.geometry),this.updateElevation(t.elevation),!l)return void(e.constraint=void 0);const a=e.coordinateHelper.spatialReference;e.constraint=this._getPointConstraint(this._getElevationConstraint(t.elevation.committed,a,i,n))}_updateDrawPolylineTooltipInfo(t){const e=this._createOperationGeometry,o=null!=e?e.full:null;if("polyline"!==o?.type)return;const{drawOperation:i,tooltipOptions:r,view:n}=this,{lastVertex:l,stagedVertex:s}=i;this._updatePolylineOrPolygonCommon(t,s);const p=F(o,this._elevationMode);t.totalLength.actual=p??a,t.totalLength.hidden=null==length||!l,t.tooltipOptions=r,t.viewType=n.type,t.helpMessage=V("polyline",o),this.updateElevation(t.elevation)}_updateDrawPolygonTooltipInfo(t){const e=this._createOperationGeometry,o=null!=e?e.full:null;if("polygon"!==o?.type)return;const{drawOperation:i,tooltipOptions:r,view:n}=this,{lastVertex:l}=i;let a=i.stagedVertex;"polygon"===o?.type&&l&&!a&&(a=o.getPoint(0,o.rings[0].length-1)),this._updatePolylineOrPolygonCommon(t,a);const p=Z(o,this._elevationMode);t.area.actual=p??s,t.area.hidden=null==p&&!l,t.tooltipOptions=r,t.viewType=n.type,t.helpMessage=V("polygon",o),this.updateElevation(t.elevation)}_updatePolylineOrPolygonCommon(t,e){const{view:o,drawOperation:i}=this,{elevationInfo:r,lastVertex:n}=i;if(!n||!e)return t.distance.hidden=!0,t.orientation.hidden=!0,void(i.constraint=void 0);const l=N(n,e,this._elevationMode);t.distance.actual=l??a,t.distance.hidden=!1;const s=L(n,e);t.orientation.actual=s??p,t.orientation.hidden=!1;const c=i.coordinateHelper.spatialReference;i.constraint=this._getPolylineOrPolygonConstraint(this._getDistanceConstraint(n,t.distance.committed,o,r),this._getOrientationConstraint(n,t.orientation.committed,o,r),this._getElevationConstraint(t.elevation.committed,c,o,r))}updateDrawMeshTooltipInfo(t){}_updateDrawRectangleTooltipInfo(t){t.tooltipOptions=this.tooltipOptions,t.xSize=this._xSize??a,t.ySize=this._ySize??a,t.area=this._fullGeometryArea??s}_updateDrawCircleTooltipInfo(t){const{forceUniformSize:e}=this;t.tooltipOptions=this.tooltipOptions,t.radius=e?this._circleRadius??a:null,t.xSize=e?null:this._xSize??a,t.ySize=e?null:this._ySize??a,t.area=this._fullGeometryArea??s}get _circleRadius(){const t=this._createOperationGeometry;return null!=t?.circle?.center&&null!=t.circle.edge?q(t.circle.center,t.circle.edge,this._elevationMode):null}get _xSize(){const t=this._createOperationGeometry?.rectangle?.midpoints;return null!=t?q(t.left,t.right,this._elevationMode):null}get _ySize(){const t=this._createOperationGeometry?.rectangle?.midpoints;return null!=t?q(t.top,t.bottom,this._elevationMode):null}get _fullGeometryArea(){const t=this._createOperationGeometry?.full;return"polygon"!==t?.type?null:Z(t,this._elevationMode)}updateElevation(t){t.actual=this._vertexTooltipElevation}get _vertexTooltipElevation(){const{tooltipOptions:t,view:e,drawOperation:o}=this;if(null==o)return this._defaultElevation;const i=o.stagedVertex??o.lastVertex;if(null==i||"2d"===e.type)return this._defaultElevation;const r={mode:t.elevation.mode,offset:0},n=(g(e,i,o.elevationInfo,r)??0)*u(i.spatialReference);return l(n,"meters")}get _elevationMode(){return this.drawOperation.isDraped?"on-the-ground":"absolute-height"}_clearConstraints(){for(const[,t]of Object.entries(this.tooltipInfos))t.unlockAllFields()}};t([d()],K.prototype,"_createOperationGeometry",void 0),t([d()],K.prototype,"_defaultElevation",null),t([d({value:!0})],K.prototype,"centered",null),t([d()],K.prototype,"cursor",null),t([d({nonNullable:!0})],K.prototype,"defaultZ",void 0),t([d()],K.prototype,"drawOperation",void 0),t([d({value:!0})],K.prototype,"enabled",null),t([d({value:!0})],K.prototype,"forceUniformSize",null),t([d({constructOnly:!0})],K.prototype,"geometryType",void 0),t([d()],K.prototype,"graphic",null),t([d({constructOnly:!0})],K.prototype,"graphicProperties",void 0),t([d()],K.prototype,"graphicSymbol",null),t([d({constructOnly:!0})],K.prototype,"hasZ",void 0),t([d({constructOnly:!0,type:I})],K.prototype,"labelOptions",void 0),t([d({constructOnly:!0})],K.prototype,"geometryToPlace",void 0),t([d({constructOnly:!0})],K.prototype,"mode",void 0),t([d()],K.prototype,"snappingManager",void 0),t([d()],K.prototype,"snapToScene",void 0),t([d()],K.prototype,"tooltip",void 0),t([d()],K.prototype,"tooltipInfos",void 0),t([d({constructOnly:!0,type:j})],K.prototype,"tooltipOptions",void 0),t([d({readOnly:!0})],K.prototype,"type",void 0),t([d({readOnly:!0})],K.prototype,"updating",null),t([d({constructOnly:!0,nonNullable:!0})],K.prototype,"view",void 0),t([d()],K.prototype,"_tooltipInfo",null),t([d()],K.prototype,"_circleRadius",null),t([d()],K.prototype,"_xSize",null),t([d()],K.prototype,"_ySize",null),t([d()],K.prototype,"_fullGeometryArea",null),t([d()],K.prototype,"_vertexTooltipElevation",null),t([d()],K.prototype,"_elevationMode",null),K=t([m("esri.views.draw.DrawGraphicTool")],K);const Q="create-operation-graphic",W={outline:"outline-visual",regularVertices:"regular-vertices-visual",activeVertex:"active-vertex-visual"};function X(t){switch(t){case"point":case"polyline":case"polygon":case"multipoint":return t;case"circle":case"rectangle":return"segment";case"mesh":return"point"}}const Y=48;export{J as CreateOperationGeometry,K as DrawGraphicTool,X as geometryTypeToDrawOperationGeometryType};
