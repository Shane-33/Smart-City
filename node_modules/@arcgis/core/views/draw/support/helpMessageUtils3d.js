/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{getMetersPerUnitForSR as e,getMetersPerVerticalUnitForSR as t}from"../../../core/unitUtils.js";import{s as o}from"../../../chunks/vec3.js";import{c as r}from"../../../chunks/vec3f64.js";import{getGraphicEffectiveElevationInfo as n,zValueInAbsoluteHeightMode as s}from"../../../support/elevationInfoUtils.js";function i(r,i){const f=r?.geometry;if(!r||"mesh"!==f?.type||!i)return;const{renderCoordsHelper:h,elevationProvider:p}=i,{camera:l}=i.state,{extent:d}=f,{center:v,spatialReference:x}=d,g=e(x),j=t(x),z=e(h.spatialReference),y=d.width*g,C=d.height*j,R=(d.zmax??0)*j,U=R-(d.zmin??0)*j,k=Math.max(y,C,U)/z,{x:w,y:P}=v,S=v.z??0;o(u,w,P,S),h.toRenderCoords(u,x,u);const T=k/l.computeScreenPixelSizeAt(u);if(T>l.width*c)return"meshTooClose";if(T<m)return"meshTooFar";const b=n(r),{absoluteZ:A}=s(w,P,R,x,i,b);return A<(p.getElevation(w,P,S,x,"ground")??0)*j+U*a?"meshUnderground":"mesh"}const m=20,c=1,a=.1,u=r();export{i as getDrawMeshHelpMessage};
