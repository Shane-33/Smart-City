/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{createScreenPointArray as e}from"../../core/screenUtils.js";import{makeDehydratedPoint as t}from"../../layers/graphics/dehydratedPoint.js";import{clonePoint as s}from"../../layers/graphics/hydratedFeatures.js";import{getConvertedElevation as i,getZForElevationMode as n}from"../../support/elevationInfoUtils.js";class r{constructor(e,t,s,i=null){this._elevationInfo=e,this.defaultZ=t,this._view=s,this._excludeGraphics=i}screenToMap(t){if(null!=this.defaultZ)return this._view.sceneIntersectionHelper.intersectElevationFromScreen(e(t.x,t.y),this._elevationInfo,this.defaultZ,this._excludeGraphics);const s=this._view.sceneIntersectionHelper.intersectElevationFromScreen(e(t.x,t.y),this._elevationInfo,0,this._excludeGraphics);return null!=s&&(s.z=void 0),s}mapToScreen(e){const s=t(e.x,e.y,i(this._view,e,this._elevationInfo),e.spatialReference);return this._view.toScreen(s)}constrainZ(e){const{defaultZ:t}=this;return null!=t&&e.z!==t&&((e=s(e)).z=t),e}}class o{constructor(e,t,s=[]){this.view=e,this.elevationInfo=t,this.exclude=s}screenToMap(e){const t=this.view.toMap(e,{exclude:this.exclude});return null!=t&&(t.z=n(t,this.view,this.elevationInfo)),t}mapToScreen(e){let s=e;return null!=this.elevationInfo&&(s=t(e.x,e.y,i(this.view,e,this.elevationInfo),e.spatialReference)),this.view.toScreen(s)}constrainZ(e){return e}}class c{constructor(e,t=!1,s=0){this.view=e,this.hasZ=t,this.defaultZ=s,this.mapToScreen=t=>e.toScreen(t),this.screenToMap=t?t=>{const i=e.toMap(t);return i.z=s,i}:t=>e.toMap(t)}constrainZ(e){const{defaultZ:t}=this;return this.hasZ&&e.z!==t&&((e=s(e)).z=t),e}}export{r as ElevationDrawSurface,c as MapDrawSurface,o as SceneDrawSurface};
