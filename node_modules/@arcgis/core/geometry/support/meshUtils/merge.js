/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import e from"../../../core/Logger.js";import{G as t,g as n,i as r}from"../../../chunks/vec3.js";import{c as o}from"../../../chunks/vec3f64.js";import i from"../MeshComponent.js";import s from"../MeshTransform.js";import{MeshVertexAttributes as l}from"../MeshVertexAttributes.js";import{georeferenceApplyTransform as a,ungeoreference as c}from"./georeference.js";const f=e.getLogger("esri.geometry.support.triangleMeshMerge");function u(e,t){if(0===e.length)return f.error("merge()","Must specify one more geometries to merge"),null;const n=e[0].spatialReference;for(const c of e){if(!c.spatialReference.equals(n))return f.error("merge()","Geometries must all be in the same spatial reference"),null;if(!c.loaded)return f.error("merge()","Geometries must all be loaded before merging"),null}const r=p(e);if(null==r)return null;const o=w(e),i=[],s={position:0,uv:0,normal:0,tangent:0,color:0},l=new Map,a=new Map;for(const c of e){const e=m(c,r);if(t&&t.reuseMaterials&&c.components)for(const t of c.components)t.material&&l.set(t.material,t.material);h(c,s,l,a,i),x("position",e,o,s,0),x("normal",e,o,s,0),x("tangent",e,o,s,0),x("uv",c.vertexAttributes,o,s,0),x("color",c.vertexAttributes,o,s,255)}return{vertexAttributes:o,components:i,vertexSpace:r.vertexSpace,transform:r.transform,spatialReference:n}}function p(e){let i=null,l=null,a=!0,c=!0,u=null;const p=o();let m=0;for(const r of e){const{vertexSpace:e,transform:o}=r;if(null==l&&(l=e,l.isRelative&&(u=l.origin)),l.type!==e.type)return f.error("merge()",`Inconsistent mesh vertex space for provided geometries. One was ${l.type} while another is ${e.type}. Unable to merge geometries.`),null;if(null==i||null!=o&&o.equals(i)||(a=!1),null!=o&&null==i&&(i=o),e.isRelative){const{origin:r}=e;u&&!t(r,u)&&(c=!1),m++,n(p,p,e.origin)}}if(null==l)throw new Error;const g=l.clone();if(!g.isRelative)return{transform:null,vertexSpace:g,rebake:!1};if(c&&a)return{transform:i?.clone(),vertexSpace:g,rebake:!1};const v=r(p,p,1/m);return g.origin=v,{transform:new s,vertexSpace:g,rebake:!0}}function m(e,t){if(!t.rebake)return e.vertexAttributes;const n=e.vertexSpace,r=t.vertexSpace;if(n.type!==r.type)throw new Error;const o=a(e.vertexAttributes,n,e.transform,e.spatialReference);return c(o,r.getOriginPoint(e.spatialReference),{geographic:!r.isGeoreferenced})}function g(e,t){return t.normal>0&&!e.vertexAttributes.normal}function v(e,t,n){g(e,t)&&"source"===n.shading&&(n.shading="flat")}function h(e,t,n,r,o){if(e.components)for(const i of e.components){const s=i.cloneWithDeduplication(n,r),l=t.position/3;if(s.faces)for(let e=0;e<s.faces.length;e++)s.faces[e]+=l;else{s.faces=new Uint32Array(e.vertexAttributes.position.length/3);for(let e=0;e<s.faces.length;e++)s.faces[e]=e+l}v(e,t,s),o.push(s)}else if(e.vertexAttributes&&e.vertexAttributes.position){const n=e.vertexAttributes.position.length/3,r=new Uint32Array(n),s=t.position/3;for(let e=0;e<n;e++)r[e]=e+s;const l=new i({faces:r});v(e,t,l),o.push(l)}}function x(e,t,n,r,o){if(!t)return;const i=t.position;if(!i)return;const s=t[e],l=n[e];if(null==s){let t=r[e];const n=y[e];if(null!=l){for(let e=0;e<i.length;e+=3)for(let r=0;r<n;r++)l[t++]=o;r[e]=t}}else null!=l&&null!=s&&(b(s,0,l,r[e],s.length),r[e]+=s.length)}function b(e,t,n,r,o){for(let i=0;i<o;i++)n[r++]=e[t++];return n}function A(e){let t=!1,n=!1,r=!1,o=!1;for(const i of e){const e=i.vertexAttributes;if(e?.position&&(e.uv&&(t=!0),e.normal&&(n=!0),e.tangent&&(o=!0),e.color&&(r=!0),n&&t&&r&&o))break}return{normal:n,uv:t,color:r,tangent:o}}function w(e){let t=0,n=0,r=0,o=0,i=0;const s=A(e);for(const l of e){const e=l.vertexAttributes;e?.position&&(t+=e.position.length,s.uv&&(n+=e.position.length/y.position*y.uv),s.normal&&(r+=e.position.length/y.position*y.normal),s.color&&(o+=e.position.length/y.position*y.color),s.tangent&&(i+=e.position.length/y.position*y.tangent))}return new l({position:new Float64Array(t),uv:n?new Float32Array(n):null,normal:r?new Float32Array(r):null,tangent:i?new Float32Array(i):null,color:o?new Uint8Array(o):null})}const y={position:3,normal:3,tangent:4,uv:2,color:4};export{u as merge};
