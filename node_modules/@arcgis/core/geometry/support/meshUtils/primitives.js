/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{a as t}from"../../../chunks/mat3f64.js";import{t as e,n}from"../../../chunks/vec3.js";import{c as r}from"../../../chunks/vec3f64.js";import o from"../MeshComponent.js";import{MeshVertexAttributes as s}from"../MeshVertexAttributes.js";import{georeferenceByTransform as a}from"./georeference.js";function i(){const{faceDescriptions:t,faceVertexOffsets:e,uvScales:n}=y,r=4*t.length,o=new Float64Array(3*r),s=new Float32Array(3*r),a=new Float32Array(2*r),i=new Uint32Array(2*t.length*3);let l=0,c=0,f=0,u=0;for(let h=0;h<t.length;h++){const r=t[h],p=l/3;for(const t of e)i[u++]=p+t;const w=r.corners;for(let t=0;t<4;t++){const e=w[t];let i=0;a[f++]=.25*n[t][0]+r.uvOrigin[0],a[f++]=r.uvOrigin[1]-.25*n[t][1];for(let t=0;t<3;t++)0!==r.axis[t]?(o[l++]=.5*r.axis[t],s[c++]=r.axis[t]):(o[l++]=.5*e[i++],s[c++]=0)}}return{position:o,normal:s,uv:a,faces:i}}function l(t,e){const n=t.components[0],r=n.faces,s=d[e],a=6*s,i=new Array(6),l=new Array(r.length-6);let c=0,f=0;for(let o=0;o<r.length;o++)o>=a&&o<a+6?i[c++]=r[o]:l[f++]=r[o];if(null!=t.vertexAttributes.uv){const e=new Float32Array(t.vertexAttributes.uv),n=4*s*2,r=[0,1,1,1,1,0,0,0];for(let t=0;t<r.length;t++)e[n+t]=r[t];t.vertexAttributes.uv=e}return t.components=[new o({faces:i,material:n.material}),new o({faces:l})],t}function c(t=0){const e=Math.round(8*2**t),n=2*e,r=(e-1)*(n+1)+2*n,o=new Float64Array(3*r),s=new Float32Array(3*r),a=new Float32Array(2*r),i=new Uint32Array(3*((e-1)*n*2));let l=0,c=0,f=0,u=0;for(let h=0;h<=e;h++){const t=h/e*Math.PI+.5*Math.PI,r=Math.cos(t),p=Math.sin(t);M[2]=p;const w=0===h||h===e,m=w?n-1:n;for(let v=0;v<=m;v++){const t=v/m*2*Math.PI;M[0]=-Math.sin(t)*r,M[1]=Math.cos(t)*r;for(let e=0;e<3;e++)o[l]=.5*M[e],s[l]=M[e],++l;a[c++]=(v+(w?.5:0))/n,a[c++]=h/e,0!==h&&v!==n&&(h!==e&&(i[f++]=u,i[f++]=u+1,i[f++]=u-n),1!==h&&(i[f++]=u,i[f++]=u-n,i[f++]=u-n-1)),u++}}return{position:o,normal:s,uv:a,faces:i}}function f(t=0){const e=5,n=Math.round(16*2**t),r=(e-1)*(n+1)+2*n,o=new Float64Array(3*r),s=new Float32Array(3*r),a=new Float32Array(2*r),i=new Uint32Array(3*(4*n));let l=0,c=0,f=0,u=0,h=0;for(let p=0;p<=e;p++){const t=0===p||p===e,r=p<=1||p>=e-1,w=2===p||4===p,m=t?n-1:n;for(let v=0;v<=m;v++){const g=v/m*2*Math.PI,A=t?0:.5;M[0]=A*Math.sin(g),M[1]=A*-Math.cos(g),M[2]=p<=2?.5:-.5;for(let t=0;t<3;t++)o[l++]=M[t],s[c++]=r?2===t?p<=1?1:-1:0:2===t?0:M[t]/A;a[f++]=(v+(t?.5:0))/n,a[f++]=p<=1?1*p/3:p<=3?1*(p-2)/3+1/3:1*(p-4)/3+2/3,w||0===p||v===n||(p!==e&&(i[u++]=h,i[u++]=h+1,i[u++]=h-n),1!==p&&(i[u++]=h,i[u++]=h-n,i[u++]=h-n-1)),h++}}return{position:o,normal:s,uv:a,faces:i}}function u(t,e){const n="number"==typeof e?e:null!=e?e.width:1,r="number"==typeof e?e:null!=e?e.height:1;switch(t){case"up":case"down":return{width:n,depth:r};case"north":case"south":return{width:n,height:r};case"east":case"west":return{depth:n,height:r}}}function h(t){const e=v.facingAxisOrderSwap[t],n=v.position,r=v.normal,o=new Float64Array(n.length),s=new Float32Array(r.length);let a=0;for(let i=0;i<4;i++){const t=a;for(let i=0;i<3;i++){const l=e[i],c=Math.abs(l)-1,f=l>=0?1:-1;o[a]=n[t+c]*f,s[a]=r[t+c]*f,a++}}return{position:o,normal:s,uv:new Float32Array(v.uv),faces:new Uint32Array(v.faces),isPlane:!0}}const p=1,w=2,m=3,v={position:[-.5,-.5,0,.5,-.5,0,.5,.5,0,-.5,.5,0],normal:[0,0,1,0,0,1,0,0,1,0,0,1],uv:[0,1,1,1,1,0,0,0],faces:[0,1,2,0,2,3],facingAxisOrderSwap:{east:[m,p,w],west:[-m,-p,w],north:[-p,m,w],south:[p,-m,w],up:[p,w,m],down:[p,-w,-m]}};function g(t,e,n){t.isPlane||A(t),x(t,n?.size);const{vertexAttributes:r,vertexSpace:i,transform:l}=a(t,e,n);return{vertexAttributes:new s({...r,uv:t.uv}),vertexSpace:i,transform:l,components:[new o({faces:t.faces,material:n?.material||null})],spatialReference:e.spatialReference}}function A(t){for(let e=0;e<t.position.length;e+=3)t.position[e+2]+=.5}function x(t,r){if(null==r)return;const o="number"==typeof r?[r,r,r]:[null!=r.width?r.width:1,null!=r.depth?r.depth:1,null!=r.height?r.height:1];F[0]=o[0],F[4]=o[1],F[8]=o[2];for(let n=0;n<t.position.length;n+=3){for(let e=0;e<3;e++)M[e]=t.position[n+e];e(M,M,F);for(let e=0;e<3;e++)t.position[n+e]=M[e]}if(o[0]!==o[1]||o[1]!==o[2]){F[0]=1/o[0],F[4]=1/o[1],F[8]=1/o[2];for(let r=0;r<t.normal.length;r+=3){for(let e=0;e<3;e++)M[e]=t.normal[r+e];e(M,M,F),n(M,M);for(let e=0;e<3;e++)t.normal[r+e]=M[e]}}}const y={faceDescriptions:[{axis:[0,-1,0],uvOrigin:[0,.625],corners:[[-1,-1],[1,-1],[1,1],[-1,1]]},{axis:[1,0,0],uvOrigin:[.25,.625],corners:[[-1,-1],[1,-1],[1,1],[-1,1]]},{axis:[0,1,0],uvOrigin:[.5,.625],corners:[[1,-1],[-1,-1],[-1,1],[1,1]]},{axis:[-1,0,0],uvOrigin:[.75,.625],corners:[[1,-1],[-1,-1],[-1,1],[1,1]]},{axis:[0,0,1],uvOrigin:[0,.375],corners:[[-1,-1],[1,-1],[1,1],[-1,1]]},{axis:[0,0,-1],uvOrigin:[0,.875],corners:[[-1,1],[1,1],[1,-1],[-1,-1]]}],uvScales:[[0,0],[1,0],[1,1],[0,1]],faceVertexOffsets:[0,1,2,0,2,3]},d={south:0,east:1,north:2,west:3,up:4,down:5},M=r(),F=t();export{d as boxFaceOrder,u as convertPlaneSizeParameter,g as convertUnitGeometry,i as createUnitSizeBox,f as createUnitSizeCylinder,h as createUnitSizePlane,c as createUnitSizeSphere,l as extractSingleFaceOfBox};
