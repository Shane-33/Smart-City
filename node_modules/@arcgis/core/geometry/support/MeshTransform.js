/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{JSONSupport as o}from"../../core/JSONSupport.js";import{property as r}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import"../../core/arrayUtils.js";import"../../core/has.js";import{subclass as s}from"../../core/accessorSupport/decorators/subclass.js";import{f as a,i as e,e as i}from"../../chunks/mat4.js";import{a as n}from"../../chunks/mat4f64.js";import{s as l}from"../../chunks/quat.js";import{a as p}from"../../chunks/quatf64.js";import{e as c}from"../../chunks/vec3.js";import{c as u,e as m,f as h,g as f}from"../../chunks/vec3f64.js";import{up as j,fromAxisAndAngle as x,axis as y,angle as g,angleRad as A}from"./axisAngleDegrees.js";var v;let b=v=class extends o{constructor(t){super(t),this.translation=u(),this.rotationAxis=m(j),this.rotationAngle=0,this.scale=h(1,1,1)}get rotation(){return x(this.rotationAxis,this.rotationAngle)}set rotation(t){this.rotationAxis=f(y(t)),this.rotationAngle=g(t)}get localMatrix(){const t=n();return l(M,y(this.rotation),A(this.rotation)),a(t,M,this.translation,this.scale),t}get localMatrixInverse(){return e(n(),this.localMatrix)}applyLocal(t,o){return c(o,t,this.localMatrix)}applyLocalInverse(t,o){return c(o,t,this.localMatrixInverse)}equals(t){return this===t||null!=t&&i(this.localMatrix,t.localMatrix)}clone(){const t={translation:f(this.translation),rotationAxis:f(this.rotationAxis),rotationAngle:this.rotationAngle,scale:f(this.scale)};return new v(t)}};t([r({type:[Number],nonNullable:!0,json:{write:!0}})],b.prototype,"translation",void 0),t([r({type:[Number],nonNullable:!0,json:{write:!0}})],b.prototype,"rotationAxis",void 0),t([r({type:Number,nonNullable:!0,json:{write:!0}})],b.prototype,"rotationAngle",void 0),t([r({type:[Number],nonNullable:!0,json:{write:!0}})],b.prototype,"scale",void 0),t([r()],b.prototype,"rotation",null),t([r()],b.prototype,"localMatrix",null),t([r()],b.prototype,"localMatrixInverse",null),b=v=t([s("esri.geometry.support.MeshTransform")],b);const M=p(),N=b;export{N as default};
