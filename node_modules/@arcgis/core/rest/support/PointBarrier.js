/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../Graphic.js";import r from"../../PopupTemplate.js";import{symbolTypes as o}from"../../symbols.js";import{ClonableMixin as s}from"../../core/Clonable.js";import{JSONSupport as i}from"../../core/JSONSupport.js";import{property as a}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import"../../core/arrayUtils.js";import"../../core/has.js";import{reader as l}from"../../core/accessorSupport/decorators/reader.js";import{subclass as p}from"../../core/accessorSupport/decorators/subclass.js";import{writer as d}from"../../core/accessorSupport/decorators/writer.js";import u from"../../geometry/Point.js";import{getPrefixedProperties as n,setPrefixedProperties as m,toKebabImpedanceAttributes as c,fromKebabImpedanceAttributes as b}from"../route/utils.js";import{barrierTypeJsonMap as y,curbApproachJsonMap as h,fullEdgeJsonMap as f,statusJsonMap as j,sideOfEdgeJsonMap as g}from"./networkEnums.js";var T;let S=T=class extends(s(i)){constructor(e){super(e),this.addedCost=null,this.barrierType=null,this.costs=null,this.curbApproach=null,this.fullEdge=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sideOfEdge=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.type="point-barrier"}readCosts(e,t){return n(t.attributes,"Attr_")}writeCosts(e,t){m(e,t,"Attr_")}static fromGraphic(e){return new T({addedCost:e.attributes.AddedCost??null,barrierType:null!=e.attributes.BarrierType?y.fromJSON(e.attributes.BarrierType):null,costs:null!=e.attributes.Costs?c(JSON.parse(e.attributes.Costs)):null,curbApproach:null!=e.attributes.CurbApproach?h.fromJSON(e.attributes.CurbApproach):null,fullEdge:null!=e.attributes.FullEdge?f.fromJSON(e.attributes.FullEdge):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,status:null!=e.attributes.Status?j.fromJSON(e.attributes.Status):null,symbol:e.symbol})}toGraphic(){const e={ObjectID:this.objectId,AddedCost:this.addedCost,BarrierType:null!=this.barrierType?y.toJSON(this.barrierType):null,Costs:null!=this.costs?JSON.stringify(b(this.costs)):null,CurbApproach:null!=this.curbApproach?h.toJSON(this.curbApproach):null,FullEdge:null!=this.fullEdge?f.toJSON(this.fullEdge):null,Name:this.name,Status:null!=this.status?j.toJSON(this.status):null};return new t({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};S.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AddedCost",alias:"Added Cost",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"FullEdge",alias:"Full Edge",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAIntYesNo",codedValues:[{name:"No",code:0},{name:"Yes",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}}],S.popupInfo={title:"Point Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AddedCost",label:"Added Cost",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},e([a()],S.prototype,"addedCost",void 0),e([a({type:y.apiValues,json:{name:"attributes.BarrierType",read:{reader:y.read},write:{writer:y.write}}})],S.prototype,"barrierType",void 0),e([a()],S.prototype,"costs",void 0),e([l("costs",["attributes"])],S.prototype,"readCosts",null),e([d("costs")],S.prototype,"writeCosts",null),e([a({constructOnly:!0,type:h.apiValues,json:{read:{source:"attributes.CurbApproach",reader:h.read}}})],S.prototype,"curbApproach",void 0),e([a({type:f.apiValues,json:{name:"attributes.FullEdge",read:{reader:f.read},write:{writer:f.write}}})],S.prototype,"fullEdge",void 0),e([a({type:u,json:{write:!0}})],S.prototype,"geometry",void 0),e([a({json:{name:"attributes.Name"}})],S.prototype,"name",void 0),e([a({json:{name:"attributes.ObjectID"}})],S.prototype,"objectId",void 0),e([a({type:r})],S.prototype,"popupTemplate",void 0),e([a({type:g.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:g.read}}})],S.prototype,"sideOfEdge",void 0),e([a({json:{read:{source:"attributes.SourceID"}}})],S.prototype,"sourceId",void 0),e([a({json:{read:{source:"attributes.SourceOID"}}})],S.prototype,"sourceOid",void 0),e([a({type:j.apiValues,json:{read:{source:"attributes.Status",reader:j.read}}})],S.prototype,"status",void 0),e([a({types:o})],S.prototype,"symbol",void 0),e([a({readOnly:!0,json:{read:!1}})],S.prototype,"type",void 0),S=T=e([p("esri.rest.support.PointBarrier")],S);const C=S;export{C as default};
