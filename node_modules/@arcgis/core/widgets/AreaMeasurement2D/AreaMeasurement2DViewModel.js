/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import{watch as t,initial as i,whenOnce as s}from"../../core/reactiveUtils.js";import{measurementAreaUnits as r}from"../../core/unitUtils.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import"../../core/arrayUtils.js";import"../../core/has.js";import{subclass as n}from"../../core/accessorSupport/decorators/subclass.js";import{load as l}from"../../geometry/projection.js";import{defaultUnitPropertyMetadata as a}from"../../properties/defaultUnit.js";import{isSupported as u,isProjectionEngineRequired as p,AreaMeasurement2DTool as c}from"./AreaMeasurement2DTool.js";import{InteractiveToolViewModel as d}from"../support/InteractiveToolViewModel.js";let h=class extends d{constructor(e){super(e),this.supportedViewType="2d",this.unsupportedErrorMessage="AreaMeasurement2DViewModel is only supported in 2D views.",this.geodesicDistanceThreshold=1e5}initialize(){this.addHandles([t((()=>this.view?.spatialReference),(()=>this.clear())),t((()=>this.unit),(e=>{null!=this.tool&&(this.tool.unit=e)}),i),t((()=>this.geodesicDistanceThreshold),(e=>{null!=this.tool&&(this.tool.geodesicDistanceThreshold=e)}),i)])}get measurement(){return null!=this.tool?this.tool.measurement:null}get measurementLabel(){return null!=this.tool?this.tool.measurementLabel:null}get state(){return this.disabled||null==this.view||!u(this.view.spatialReference)?"disabled":this.tool?.measurement?this.tool.active?"measuring":"measured":"ready"}get unit(){return this._validateUnit(this.defaultUnit)}set unit(e){this._overrideIfSome("unit",this._validateUnit(e))}get unitOptions(){return r}set unitOptions(e){this._overrideIfSome("unitOptions",this._validateUnits(e))}async start(){const e=this.view;null!=e&&(await s((()=>e.ready)),p(e.spatialReference)&&await l()),this.createTool({interactive:!0})}clear(){this.removeTool()}constructTool(){return new c({view:this.view,visible:this.visible,geodesicDistanceThreshold:this.geodesicDistanceThreshold,unit:this.unit})}_validateUnit(e){const{unitOptions:t,defaultUnit:i}=this;return null!=e&&t.includes(e)?e:t.includes(i)?i:t.length>0?t[0]:i}_validateUnits(e){if(null==e)return[];const t=e.filter((e=>r.includes(e)));return 0===t.length?r.slice():t}};e([o(a)],h.prototype,"defaultUnit",void 0),e([o({type:Number})],h.prototype,"geodesicDistanceThreshold",void 0),e([o({readOnly:!0})],h.prototype,"measurement",null),e([o({readOnly:!0})],h.prototype,"measurementLabel",null),e([o({readOnly:!0})],h.prototype,"state",null),e([o({type:String})],h.prototype,"unit",null),e([o({type:[String]})],h.prototype,"unitOptions",null),h=e([n("esri.widgets.AreaMeasurement2D.AreaMeasurement2DViewModel")],h);const m=h;export{m as default};
