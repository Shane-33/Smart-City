/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../geometry.js";import t from"../../Graphic.js";import"../../symbols.js";import{isSome as i}from"../../core/arrayUtils.js";import s from"../../core/Error.js";import r from"../../core/Logger.js";import o from"../../core/ReactiveSet.js";import{watch as a,when as n,sync as l}from"../../core/reactiveUtils.js";import{property as u}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import"../../core/has.js";import{subclass as h}from"../../core/accessorSupport/decorators/subclass.js";import{geographicToWebMercator as c}from"../../geometry/support/webMercatorUtils.js";import d from"../../layers/Layer.js";import{fallbackObjectIDAttribute as p}from"../../layers/LayerConstants.js";import{getDisplayedSymbol as g}from"../../symbols/support/symbolUtils.js";import{highlightsSupported as f}from"../../views/support/layerViewUtils.js";import m from"../Feature/FeatureViewModel.js";import{ActionsCollection as y,zoomToFeature as w,zoomToClusteredFeatures as F,browseClusteredFeatures as v}from"../Popup/actions.js";import{triggerAction as _,isClusterFeature as b,removeClusteredFeaturesForBrowsing as C,displayClusterExtent as P,browseAggregateFeatures as E,getPointFromGeometry as M,getSelectedTarget as V}from"../Popup/actionUtils.js";import A from"../support/AnchorElementViewModel.js";import{GoToMixin as L}from"../support/GoTo.js";import j from"../../symbols/SimpleFillSymbol.js";import O from"../../geometry/Point.js";const I=()=>[w.clone()],S=()=>[F.clone(),v.clone()];let T=class extends(L(A)){constructor(e){super(e),this._pendingPromises=new o,this._fetchFeaturesController=null,this._highlightSelectedFeaturePromise=null,this._highlightActiveFeaturePromise=null,this._selectedClusterFeature=null,this.actions=new y,this.activeFeature=null,this.autoCloseEnabled=!1,this.autoOpenEnabled=!0,this.browseClusterEnabled=!1,this.content=null,this.defaultPopupTemplateEnabled=!1,this.featurePage=null,this.featuresPerPage=20,this.featureMenuOpen=!1,this.featureViewModelAbilities=null,this.featureViewModels=[],this.highlightEnabled=!0,this.includeDefaultActions=!0,this.selectedClusterBoundaryFeature=new t({symbol:new j({outline:{width:1.5,color:"cyan"},style:"none"})}),this.title=null,this.updateLocationEnabled=!1,this.view=null,this.visible=!1,this.zoomFactor=4,this.zoomToLocation=null}initialize(){this.addHandles([this.on("view-change",(()=>this._autoClose())),a((()=>[this.highlightEnabled,this.selectedFeature,this.visible,this.view]),(()=>this._highlightSelectedFeature())),a((()=>[this.highlightEnabled,this.activeFeature,this.visible,this.view]),(()=>this._highlightActiveFeature())),a((()=>this.view?.animation?.state),(e=>this._animationStateChange(e))),a((()=>this.location),(e=>this._locationChange(e))),a((()=>this.selectedFeature),(e=>this._selectedFeatureChange(e))),a((()=>[this.selectedFeatureIndex,this.featureCount,this.featuresPerPage]),(()=>this._selectedFeatureIndexChange())),a((()=>[this.featurePage,this.selectedFeatureIndex,this.featureCount,this.featuresPerPage,this.featureViewModels]),(()=>this._setGraphicOnFeatureViewModels())),a((()=>this.featureViewModels),(()=>this._featureViewModelsChange())),this.on("trigger-action",(e=>_({event:e,viewModel:this,view:this.view}))),n((()=>!this.waitingForResult),(()=>this._waitingForResultChange()),l),a((()=>[this.features,this.view?.map,this.view?.spatialReference]),(()=>this._updateFeatureVMs())),a((()=>this.view?.scale),(()=>this._viewScaleChange())),n((()=>!this.visible),(()=>this.browseClusterEnabled=!1)),a((()=>this.browseClusterEnabled),(e=>e?this.enableClusterBrowsing():this.disableClusterBrowsing()))])}destroy(){this._cancelFetchingFeatures(),this._pendingPromises.clear(),this.browseClusterEnabled=!1,this.view=null}get active(){return!(!this.visible||this.waitingForResult)}get allActions(){const e=this._get("allActions")||new y;e.removeAll();const{actions:t,defaultActions:i,defaultPopupTemplateEnabled:s,includeDefaultActions:r,selectedFeature:o}=this,a=r?i.concat(t):t,n=o&&("function"==typeof o.getEffectivePopupTemplate&&o.getEffectivePopupTemplate(s)||o.popupTemplate),l=n?.actions,u=n?.overwriteActions?l:l?.concat(a)??a;return u?.filter(Boolean).forEach((t=>e.add(t))),e}get defaultActions(){const e=this._get("defaultActions")||new y;return e.removeAll(),e.addMany(b(this.selectedFeature)?S():I()),e}get featureCount(){return this.features.length}set features(e){const t=e||[];this._set("features",t);const{pendingPromisesCount:i,promiseCount:s,selectedFeatureIndex:r}=this,o=s&&t.length;o&&i&&-1===r?this.selectedFeatureIndex=0:o&&-1!==r||(this.selectedFeatureIndex=t.length?0:-1)}set location(e){let t=e;const i=this.view?.spatialReference?.isWebMercator,s=e?.spatialReference?.isWGS84;s&&i&&(t=c(e)),this._set("location",t)}get pendingPromisesCount(){return this._pendingPromises.size}get promiseCount(){return this.promises.length}get promises(){return this._get("promises")||[]}set promises(e){this._pendingPromises.clear(),this.features=[],Array.isArray(e)&&e.length?(this._set("promises",e),(e=e.slice(0)).forEach((e=>{this._pendingPromises.add(e);const t=t=>{this._pendingPromises.has(e)&&this._updateFeatures(t),this._updatePendingPromises(e)},i=()=>this._updatePendingPromises(e);e.then(t,i)}))):this._set("promises",[])}get selectedFeature(){const{features:e,selectedFeatureIndex:t}=this;if(-1===t)return null;return e[t]||null}get selectedFeatureIndex(){const e=this._get("selectedFeatureIndex");return"number"==typeof e?e:-1}set selectedFeatureIndex(e){const{featureCount:t}=this;e=isNaN(e)||e<-1||!t?-1:(e+t)%t,this.activeFeature=null,this._set("selectedFeatureIndex",e)}get selectedFeatureViewModel(){return this.featureViewModels[this.selectedFeatureIndex]||null}get state(){return this.view?.ready?"ready":"disabled"}get waitingForContents(){return this.featureViewModels.some((e=>e.waitingForContent))}get waitingForResult(){return!(!(!!this._fetchFeaturesController||this.pendingPromisesCount>0)||0!==this.featureCount)}centerAtLocation(){const{view:e}=this,t=V(this);return t&&e?this.callGoTo({target:{target:t,scale:e.scale}}):Promise.reject(new s("center-at-location:invalid-target-or-view","Cannot center at a location without a target and view.",{target:t,view:e}))}zoomTo(e){return this.callGoTo(e)}clear(){this.set({promises:[],features:[],content:null,title:null,location:null,activeFeature:null})}fetchFeatures(e,t){const{view:i}=this;if(!i||!e)throw new s("fetch-features:invalid-screenpoint-or-view","Cannot fetch features without a screenPoint and view.",{screenPoint:e,view:i});return i.fetchPopupFeatures(e,{event:t?.event,defaultPopupTemplateEnabled:this.defaultPopupTemplateEnabled,signal:t?.signal})}open(e){const t={updateLocationEnabled:!1,promises:[],fetchFeatures:!1,...e,visible:!0},{fetchFeatures:i}=t;delete t.fetchFeatures,i&&this._setFetchFeaturesPromises(t.location);const s=["actionsMenuOpen","collapsed"];for(const r of s)delete t[r];this.set(t)}triggerAction(e){const t=this.allActions.at(e);t&&!t.disabled&&this.emit("trigger-action",{action:t})}next(){return this.selectedFeatureIndex++,this}previous(){return this.selectedFeatureIndex--,this}disableClusterBrowsing(){C(this),this._clearBrowsedClusterGraphics()}async enableClusterBrowsing(){const{view:e,selectedFeature:t}=this;"2d"===e?.type?b(t)?(await P(this),await E(this)):r.getLogger(this).warn("enableClusterBrowsing:invalid-selectedFeature: Selected feature must represent an aggregate/cluster graphic.",t):r.getLogger(this).warn("enableClusterBrowsing:invalid-view: View must be 2d MapView.",t)}handleViewClick(e){this.autoOpenEnabled&&this._fetchFeaturesAndOpen(e)}_animationStateChange(e){this.zoomToLocation||(w.disabled="waiting-for-target"===e)}_clearBrowsedClusterGraphics(){const e=[this.selectedClusterBoundaryFeature,this._selectedClusterFeature].filter(i);this.view?.graphics?.removeMany(e),this._selectedClusterFeature=null,this.selectedClusterBoundaryFeature.geometry=null}_viewScaleChange(){if(b(this.selectedFeature))return this.browseClusterEnabled=!1,this.visible=!1,void this.clear();this.browseClusterEnabled&&(this.features=this.selectedFeature?[this.selectedFeature]:[])}_locationChange(e){const{selectedFeature:t,updateLocationEnabled:i}=this;i&&e&&(!t||t.geometry)&&this.centerAtLocation()}_selectedFeatureIndexChange(){this.featurePage=this.featureCount>1?Math.floor(this.selectedFeatureIndex/this.featuresPerPage)+1:null}_featureViewModelsChange(){this.featurePage=this.featureCount>1?1:null}_setGraphicOnFeatureViewModels(){const{features:e,featureCount:t,featurePage:i,featuresPerPage:s,featureViewModels:r}=this;if(null===i)return;const o=((i-1)*s+t)%t,a=o+s;r.slice(o,a).forEach(((t,i)=>{t&&(t.graphic??=e[o+i])}))}async _selectedFeatureChange(e){const{location:t,updateLocationEnabled:i,view:s}=this;if(e&&s){if(this.browseClusterEnabled){if(this._selectedClusterFeature&&(s.graphics.remove(this._selectedClusterFeature),this._selectedClusterFeature=null),b(e))return;return e.symbol=await g(e),this._selectedClusterFeature=e,void s.graphics.add(this._selectedClusterFeature)}if(!i&&t||!e.geometry){if(i&&!e.geometry){await this.centerAtLocation();const e=s.center?.clone();e&&(this.location=e)}}else this.location=M(e.geometry)}}_waitingForResultChange(){!this.featureCount&&this.promises&&(this.visible=!1)}async _setFetchFeaturesPromises(e){const{clientOnlyGraphics:t,promisesPerLayerView:i}=await this._fetchFeaturesWithController(this._getScreenPoint(e||this.location)),s=Promise.resolve(t),r=i.map((e=>e.promise));this.promises=[s,...r]}_destroyFeatureVMs(){this.featureViewModels.forEach((e=>e&&!e.destroyed&&e.destroy())),this._set("featureViewModels",[])}_updateFeatureVMs(){const{selectedFeature:e,features:t,featureViewModels:i,view:s}=this;if(b(e)||(this.browseClusterEnabled=!1),this._destroyFeatureVMs(),!t?.length)return;const r=i.slice(0),o=[];t.forEach(((t,i)=>{if(!t)return;let a=null;if(r.some(((e,i)=>(e&&e.graphic===t&&(a=e,r.splice(i,1)),!!a))),a)o[i]=a;else{const r=new m({abilities:this.featureViewModelAbilities,defaultPopupTemplateEnabled:this.defaultPopupTemplateEnabled,spatialReference:s?.spatialReference,graphic:t===e?t:null,map:s?.map,view:s});o[i]=r}})),r.forEach((e=>e&&!e.destroyed&&e.destroy())),this._set("featureViewModels",o)}_getScreenPoint(e){const{view:t}=this;return t&&e&&"function"==typeof t.toScreen?t.toScreen(e):null}_cancelFetchingFeatures(){const e=this._fetchFeaturesController;e&&e.abort(),this._fetchFeaturesController=null}_fetchFeaturesWithController(e,t){this._cancelFetchingFeatures();const i=new AbortController,{signal:s}=i;this._fetchFeaturesController=i;const r=this.fetchFeatures(e,{signal:s,event:t});return r.catch((()=>{})).then((()=>{this._fetchFeaturesController=null})),r}async _fetchFeaturesAndOpen(e){const{screenPoint:t,mapPoint:i}=e,{view:s}=this,{clientOnlyGraphics:r,promisesPerLayerView:o,location:a}=await this._fetchFeaturesWithController(t,e),n=[Promise.resolve(r),...o.map((e=>e.promise))];s?.popup&&"open"in s.popup&&s.popup.open({location:a||i,promises:n})}_updatePendingPromises(e){e&&this._pendingPromises.has(e)&&this._pendingPromises.delete(e)}_autoClose(){this.autoCloseEnabled&&(this.visible=!1)}async _getLayerView(e,t){return await e.when(),e.whenLayerView(t)}_getHighlightLayer(e){const{layer:t,sourceLayer:i}=e;return i&&"layer"in i&&i.layer?i.layer:"map-notes"===i?.type||"subtype-group"===i?.type?i:t}_getHighlightTarget(e,t){const i="imagery"===t.type?void 0:"objectIdField"in t?t.objectIdField||p:null,s=e.attributes;return s&&i&&s[i]||e}_mapIncludesLayer(e){return!!this.view?.map?.allLayers?.includes(e)}async _highlightActiveFeature(){const e="highlight-active-feature";this.removeHandles(e);const{highlightEnabled:t,view:i,activeFeature:s,visible:r}=this;if(!(s&&i&&t&&r))return;const o=this._getHighlightLayer(s);if(!(o&&o instanceof d&&this._mapIncludesLayer(o)))return;const a=this._getLayerView(i,o);this._highlightActiveFeaturePromise=a;const n=await a;if(!(n&&f(n)&&this._highlightActiveFeaturePromise===a&&this.activeFeature&&this.highlightEnabled))return;const l=n.highlight(this._getHighlightTarget(s,o));this.addHandles(l,e)}async _highlightSelectedFeature(){const e="highlight-selected-feature";this.removeHandles(e);const{selectedFeature:t,highlightEnabled:i,view:s,visible:r}=this;if(!(t&&s&&i&&r))return;const o=this._getHighlightLayer(t);if(!(o&&o instanceof d&&this._mapIncludesLayer(o)))return;const a=this._getLayerView(s,o);this._highlightSelectedFeaturePromise=a;const n=await a;if(!(n&&f(n)&&this._highlightSelectedFeaturePromise===a&&this.selectedFeature&&this.highlightEnabled&&this.visible))return;const l=n.highlight(this._getHighlightTarget(t,o));this.addHandles(l,e)}_updateFeatures(e){const{features:t}=this;if(!e?.length)return;if(!t.length)return void(this.features=e);const i=e.filter((e=>!t.includes(e)));this.features=t.concat(i)}};e([u()],T.prototype,"_fetchFeaturesController",void 0),e([u({type:y})],T.prototype,"actions",void 0),e([u({readOnly:!0})],T.prototype,"active",null),e([u()],T.prototype,"activeFeature",void 0),e([u({readOnly:!0})],T.prototype,"allActions",null),e([u()],T.prototype,"autoCloseEnabled",void 0),e([u()],T.prototype,"autoOpenEnabled",void 0),e([u()],T.prototype,"browseClusterEnabled",void 0),e([u()],T.prototype,"content",void 0),e([u({type:y,readOnly:!0})],T.prototype,"defaultActions",null),e([u({type:Boolean})],T.prototype,"defaultPopupTemplateEnabled",void 0),e([u({readOnly:!0})],T.prototype,"featureCount",null),e([u()],T.prototype,"featurePage",void 0),e([u({value:[]})],T.prototype,"features",null),e([u()],T.prototype,"featuresPerPage",void 0),e([u()],T.prototype,"featureMenuOpen",void 0),e([u()],T.prototype,"featureViewModelAbilities",void 0),e([u({readOnly:!0})],T.prototype,"featureViewModels",void 0),e([u()],T.prototype,"highlightEnabled",void 0),e([u()],T.prototype,"includeDefaultActions",void 0),e([u({type:O})],T.prototype,"location",null),e([u({readOnly:!0})],T.prototype,"pendingPromisesCount",null),e([u({readOnly:!0})],T.prototype,"promiseCount",null),e([u()],T.prototype,"promises",null),e([u({readOnly:!0})],T.prototype,"selectedClusterBoundaryFeature",void 0),e([u({value:null,readOnly:!0})],T.prototype,"selectedFeature",null),e([u({value:-1})],T.prototype,"selectedFeatureIndex",null),e([u({readOnly:!0})],T.prototype,"selectedFeatureViewModel",null),e([u({readOnly:!0})],T.prototype,"state",null),e([u()],T.prototype,"title",void 0),e([u()],T.prototype,"updateLocationEnabled",void 0),e([u()],T.prototype,"view",void 0),e([u()],T.prototype,"visible",void 0),e([u({readOnly:!0})],T.prototype,"waitingForContents",null),e([u({readOnly:!0})],T.prototype,"waitingForResult",null),e([u()],T.prototype,"zoomFactor",void 0),e([u()],T.prototype,"zoomToLocation",void 0),e([u()],T.prototype,"centerAtLocation",null),T=e([h("esri.widgets.Features.FeaturesViewModel")],T);const x=T;export{x as default};
