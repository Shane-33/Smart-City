/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import{watch as t}from"../../core/reactiveUtils.js";import{property as a}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import"../../core/arrayUtils.js";import"../../core/has.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import{getEffectiveLayerCapabilities as o,getEffectiveEditingEnabled as r}from"../../layers/support/layerUtils.js";import{getDrawHelpMessage as s}from"../../views/draw/support/helpMessageUtils.js";import n from"./CreateWorkflowData.js";import{Edits as d}from"./Edits.js";import l from"./Workflow.js";import{shouldShowAttachmentsForCreateWorkflow as c,createWorkflowSteps as w,avoidFeatureTemplateSelectionWithOnlyOneItem as u,setUpFeatureAdd as p,findLayerInfo as f,prepareAttachmentsForCreateWorkflow as m,getVisualVariableAttributes as h,startUpdatingFeature as g,visualVariableInteractiveUpdate as y,updateGraphicSymbolWhenRequired as v}from"./workflowUtils.js";var M;let V=M=class extends l{constructor(e){super(e),this.type="create"}get shouldShowAttachments(){return!(!this.data?.creationInfo||!this.data.viewModel)&&c(this.data)}get shouldAllowAttachmentEditing(){return this.shouldShowAttachments}get hasPendingEdits(){return!0}get helpMessage(){if("editing-new-feature"!==this.stepId)return;const{creationInfo:e,viewModel:t}=this.data,a=e.layer.geometryType,i=t.sketchViewModel.createGraphic?.geometry;return"mesh"!==a?s(a,i):void 0}get reliesOnOwnerAdminPrivileges(){const{layer:e}=this.data.creationInfo,t=e.capabilities?.operations.supportsAdd,a=o(e)?.operations.supportsAdd;return r(e)&&!e.editingEnabled||!!a&&!t}static create(e,t,a){const i=new M({data:new n({edits:new d,viewModel:e}),onCommit:async e=>{await a(e.creationInfo.layer,{addFeatures:[e.edits.feature]})}});return i._set("steps",this._createWorkflowSteps(i,t)),i}static _createWorkflowSteps(e,a="awaiting-feature-creation-info"){const{data:i}=e,o=new Map,r=w(["awaiting-feature-creation-info","awaiting-feature-to-create","editing-new-feature","adding-attachment","editing-attachment"],a,{"awaiting-feature-creation-info":()=>({id:"awaiting-feature-creation-info",async setUp(){i.creationInfo=null,i.edits.feature=null,i.viewModel.featureTemplatesViewModel.select(null),e.addHandles(i.viewModel.featureTemplatesViewModel.on("select",(({item:e})=>{e&&(i.creationInfo=e,i.viewModel.activeWorkflow?.next())})),this.id)},async tearDown(){e.removeHandles(this.id)}}),"awaiting-feature-to-create":()=>({id:"awaiting-feature-to-create",async setUp(){e.addHandles(await p(i.viewModel.sketchViewModel,i.creationInfo,(e=>{i.edits.feature=e,i.viewModel.activeWorkflow?.next()}),o),this.id)},async tearDown(){e.removeHandles(this.id)}}),"editing-new-feature":()=>({id:"editing-new-feature",async setUp(){const a=i.edits.feature,r=a.sourceLayer,s=i.viewModel,n=s.sketchViewModel,d=f(s.layerInfos,r),l=d?.formTemplate,{spatialReference:c}=s.view;s.featureFormViewModel.set({arcadeEditType:"INSERT",feature:a,formTemplate:l,spatialReference:c}),n.allowDeleteKey=!1,m(s.attachmentsViewModel);const w=h(a);await g({graphic:a,sketchViewModel:n,sourceLayer:r,visualVariables:w,webStyleCache:o});const u=n.on("update",(async e=>{const t=e.graphics[0];if("complete"===e.state)return g({graphic:t,sketchViewModel:n,sourceLayer:r,visualVariables:w,webStyleCache:o});await y(n.view,t,e,w,o);const a=t.attributes;if(null!=w.rotation){const{field:e}=w.rotation;s.featureFormViewModel.setValue(e,a[e])}if(null!=w.size){const{field:e}=w.size;s.featureFormViewModel.setValue(e,a[e])}}));e.addHandles([i.viewModel.featureFormViewModel.on("value-change",(async()=>{i.edits.updateAttributes(i.viewModel.featureFormViewModel.getValues()),a.attributes=i.edits.feature.attributes,"3d"===n.view.type&&await v(a,o)})),u,t((()=>i.viewModel.attachmentsViewModel.mode),(e=>{"add"===e&&i.viewModel.activeWorkflow.go("adding-attachment"),"edit"===e&&i.viewModel.activeWorkflow.go("editing-attachment")}))],this.id)},async tearDown(t){t.canceled&&i.viewModel.sketchViewModel.layer.removeAll(),e.removeHandles(this.id)}}),"adding-attachment":()=>({id:"adding-attachment",parent:"editing-new-feature",async setUp(){},async tearDown(){i.viewModel.attachmentsViewModel.mode="view"}}),"editing-attachment":()=>({id:"editing-attachment",parent:"editing-new-feature",async setUp(){},async tearDown(){i.viewModel.attachmentsViewModel.mode="view"}})});return u(i,r)}};e([a()],V.prototype,"shouldShowAttachments",null),e([a()],V.prototype,"shouldAllowAttachmentEditing",null),e([a()],V.prototype,"hasPendingEdits",null),e([a()],V.prototype,"helpMessage",null),e([a()],V.prototype,"reliesOnOwnerAdminPrivileges",null),V=M=e([i("esri.widgets.Editor.CreateWorkflow")],V);const k=V;export{k as default};
