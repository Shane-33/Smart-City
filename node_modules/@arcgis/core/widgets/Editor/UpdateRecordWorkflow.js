/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../core/Error.js";import{abortHandle as r,makeHandle as i}from"../../core/handleUtils.js";import{isAborted as a}from"../../core/promiseUtils.js";import{watch as s}from"../../core/reactiveUtils.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import"../../core/arrayUtils.js";import"../../core/has.js";import{subclass as l}from"../../core/accessorSupport/decorators/subclass.js";import{getEffectiveLayerCapabilities as n,getEffectiveEditingEnabled as d}from"../../layers/support/layerUtils.js";import{sceneLayerEditingEnabled as c,i3sPatchingEnabled as p}from"../../support/featureFlags.js";import u from"../../views/draw/support/HighlightHelper.js";import h from"./UpdateRecordWorkflowData.js";import m from"./Workflow.js";import{fetchFullFeature as f}from"./workflowUtils.js";var g;const w={exit:Symbol()},y="esri.widgets.Editor.UpdateRecordWorkflow";let b=g=class extends m{constructor(e){super(e),this._highlightHelper=null,this.fullFeature=null,this.type="update-table-record"}initialize(){const{data:e}=this,{edits:s}=e,{view:o}=e.viewModel,l=s.feature,n=new AbortController;this.addHandles(r(n)),this._updatingHandles.addPromise(f(l,e.viewModel.view.spatialReference,n.signal).then((e=>{a(n)||this._onFullFeatureLoaded(e)}),(e=>this.cancel({force:!0,error:new t("editor:failed-to-fetch-full-feature","Failed to retrieve all information for this feature. The update cannot proceed.",{detail:{error:e}})})))),o&&(this._highlightHelper=new u({view:o}),this.addHandles(i((()=>this._highlightHelper?.removeAll()))))}get editableItem(){return this.data.editableItem}get hasPendingEdits(){return this.data.edits.modified}get parent(){return this.data.parent}get shouldShowAttachments(){return this.editableItem.attachmentsOnUpdateEnabled}get shouldAllowAttachmentEditing(){return this.editableItem.supports.includes("update")}get reliesOnOwnerAdminPrivileges(){const{layer:e}=this.editableItem,t=e.capabilities?.operations.supportsUpdate,r=n(e)?.operations.supportsUpdate;return d(e)&&!e.editingEnabled||!!r&&!t}async deleteAndCommit(){return this.data.edits.stageDelete(),this.commit()}async enter(){this._configureAttachmentsViewModel(),this._configureFeatureFormViewModel()}exit(e){this.removeHandles(w.exit)}async start(){return await super.start(),null}_configureAttachmentsViewModel(){const{data:e,fullFeature:t}=this,{attachmentsCapabilities:r,viewModel:a}=e,{attachmentsViewModel:o}=a;o.set({capabilities:r,graphic:t,filesEnabled:!1,mode:"view"}),this.addHandles([i((()=>o.fileInfos.removeAll())),s((()=>o.mode),(e=>{switch(e){case"add":this.go("adding-attachment");break;case"edit":this.go("editing-attachment")}}))],w.exit)}_configureFeatureFormViewModel(){const{edits:e,formTemplate:t,viewModel:{featureFormViewModel:r,view:i}}=this.data;r.set({arcadeEditType:"UPDATE",feature:this.fullFeature,formTemplate:t,highlightHelper:this._highlightHelper,map:i?.map,spatialReference:i.spatialReference});const{initialFeature:a}=e;a&&r.overrideInitialFeature(a),this.addHandles(r.on("value-change",(()=>{e.updateAttributes(r.getValues()),this.fullFeature.attributes=e.feature.attributes})),w.exit)}_onFullFeatureLoaded(e){this.fullFeature=e;const{edits:t}=this.data;t.updateAttributes(e.attributes),t.trackChanges()}static async create(e){const t=new g({data:await h.create(e),onCommit:this._onCommitFactory(e.applyEdits)});return t._set("steps",this._createWorkflowSteps(t)),t}static _createWorkflowSteps(e){const{attachmentsViewModel:t}=e.data.viewModel;return[{id:"editing-attributes",async setUp(){},async tearDown(){}},{id:"adding-attachment",async setUp(){},async tearDown(){t.mode="view"}},{id:"editing-attachment",async setUp(){},async tearDown(){t.mode="view"}}]}};b._onCommitFactory=e=>async t=>{const{edits:r}=t,{feature:i}=r;if(!i)return;const a=i.sourceLayer,s=i.clone();if(!r.attributesModified||r.stagedForDelete){const e=a.objectIdField;if(s.attributes={[e]:i.getAttribute(e)},c()&&p()&&"scene"===a.type&&null!=a.infoFor3D){const e=a.associatedLayer?.globalIdField;null!=e&&s.setAttribute(e,i.getAttribute(e))}}r.geometryModified&&!r.stagedForDelete||(s.geometry=null);const o=r.stagedForDelete?"deleteFeatures":"updateFeatures";await e(a,{[o]:[s]})},e([o()],b.prototype,"editableItem",null),e([o()],b.prototype,"fullFeature",void 0),e([o()],b.prototype,"hasPendingEdits",null),e([o()],b.prototype,"parent",null),e([o()],b.prototype,"shouldShowAttachments",null),e([o()],b.prototype,"shouldAllowAttachmentEditing",null),e([o()],b.prototype,"reliesOnOwnerAdminPrivileges",null),b=g=e([l(y)],b);export{b as UpdateRecordWorkflow,w as handleKeys};
