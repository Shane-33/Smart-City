/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../symbols.js";import t from"../../../core/Collection.js";import o from"../../../core/Evented.js";import{debounce as s,ignoreAbortErrors as i}from"../../../core/promiseUtils.js";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import{subclass as l}from"../../../core/accessorSupport/decorators/subclass.js";import c from"../../../layers/GraphicsLayer.js";import n from"../../Sketch/SketchViewModel.js";import{getSelectionFromGeometry as a}from"./selectorUtils.js";import p from"../../../symbols/SimpleFillSymbol.js";import h from"../../../symbols/SimpleLineSymbol.js";import m from"../../../symbols/SimpleMarkerSymbol.js";const d=100;let y=class extends o.EventedAccessor{constructor({options:e,view:o}){super(),this._abortController=null,this._activeOptions=null,this._completed=!1,this._dashedFillSymbol=new p({color:[0,0,0,0],outline:{style:"dash",color:[12,207,255],width:2}}),this._dashedLineSymbol=new h({style:"dash",color:[12,207,255],width:2}),this._defaultOptions={createTool:"rectangle",selectionOptions:{overlaps:!0,intersects:!0,contains:!1}},this._processSelectionGeometry=async({canceled:e,completed:t,selector:o})=>{const{_activeOptions:s,sources:i,selection:r,view:l}=this;if(this._abortController&&this._abortController.abort(),(t||e)&&(this._completed=!0),e)return void this._onComplete([],!0);if(!o||!i?.length||!l)return void r.removeAll();const c=new AbortController;this._abortController=c;const{added:n,removed:p}=await a({currentSelection:r,sources:i,options:s.selectionOptions,selector:o,signal:c.signal,view:l});this._abortController===c&&(this._abortController=null),c.signal.aborted||(t?this._onComplete(this.selection.toArray(),!1):(n.length||p.length)&&this.emit("selection-change",{added:n,removed:p,type:"selection-change"}))},this._processDebounced=s(this._processSelectionGeometry,d),this._sketchViewModel=new n,this._sketchGraphicsLayer=new c({listMode:"hide",internal:!0}),this._transparentPointSymbol=new m({color:[0,0,0,0],outline:{style:"none",width:0}}),this.options=null,this.selection=new t,this.sources=null,this.options=e,this.view=o;const{_dashedFillSymbol:i,_dashedLineSymbol:r,_sketchViewModel:l,_sketchGraphicsLayer:y,_transparentPointSymbol:_}=this;l.set({layer:y,activePointSymbol:_,activeLineSymbol:r,activeVertexSymbol:_,activeFillSymbol:i,pointSymbol:_,polygonSymbol:i,polylineSymbol:r,vertexSymbol:_,view:o}),this.addHandles([l.on("create",(e=>this._onSketchEvent(e))),l.on(["undo","redo"],(e=>this._onSketchEvent(e))),l.watch("activeComponent.forceUniformSize",(()=>this._onSketchGeometryChange()))])}initialize(){this._load()}set cursor(e){const t=this._sketchViewModel?.activeComponent;"draw-2d"!==t?.type&&"draw-3d"!==t?.type||(t.cursor=e),this._set("cursor",e)}get state(){const{_completed:e,_sketchViewModel:{state:t}}=this;return e?"complete":"active"===t?"active":"disabled"}set view(e){this._sketchViewModel.view=e,this._set("view",e)}cancel(){return this._sketchViewModel.cancel()}async _load(){await(this.view?.whenReady());const{_defaultOptions:e,options:t}=this,o=t?.createOptions?.cursor||this.cursor||e.createOptions?.cursor,{createTool:s,createOptions:i}=this._activeOptions={...e,...t,createOptions:{...e.createOptions,cursor:o,...t?.createOptions},selectionOptions:{...e.selectionOptions,...t?.selectionOptions}};this._sketchViewModel.create(s,i)}_onSketchEvent(e){const t="create"===e.type?e.graphic:e.graphics[0],o=t?.geometry,s="create"===e.type&&"cancel"===e.state,r="create"===e.type&&"complete"===e.state;i(this._processDebounced({canceled:s,completed:r,selector:o}))}_onSketchGeometryChange(){const e=this._sketchViewModel.createGraphic,t=e?.geometry;t&&i(this._processDebounced({canceled:!1,completed:!1,selector:t}))}_onComplete(e,t){this.removeAllHandles(),this.notifyChange("state"),this.emit("complete",{aborted:t,selection:e,type:"complete"})}};e([r()],y.prototype,"_abortController",void 0),e([r()],y.prototype,"_completed",void 0),e([r()],y.prototype,"cursor",null),e([r()],y.prototype,"options",void 0),e([r({readOnly:!0})],y.prototype,"selection",void 0),e([r()],y.prototype,"sources",void 0),e([r({readOnly:!0})],y.prototype,"state",null),e([r()],y.prototype,"view",null),y=e([l("esri.widgets.support.Selector2D.SelectionOperation2D")],y);const _=y;export{_ as default};
