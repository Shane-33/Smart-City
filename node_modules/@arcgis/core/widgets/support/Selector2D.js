/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as o}from"../../chunks/tslib.es6.js";import s from"../../core/Accessor.js";import t from"../../core/Collection.js";import{property as e}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import"../../core/arrayUtils.js";import"../../core/has.js";import{subclass as r}from"../../core/accessorSupport/decorators/subclass.js";import i from"./Selector2D/SelectionOperation2D.js";import{getSelectionFromGeometry as c}from"./Selector2D/selectorUtils.js";let n=class extends s{constructor(o){super(o),this._defaultSelectionOptions={intersects:!0,overlaps:!0,contains:!0},this.cursor=null,this.options=null,this.sources=null,this.view=null}draw(o){const{operationOptions:s}=o,{view:t}=this;return new i({cursor:this.cursor,sources:o.sources??this.sources??[],options:{...s,selectionOptions:{...this._defaultSelectionOptions,...this.options,...s?.selectionOptions}},view:t})}async selectionFrom(o){const{view:s}=this,e=o.sources??this.sources??[];if(!e.length||!s)return[];const r=new t;return await c({selector:o.geometry,currentSelection:r,sources:e,options:{...this._defaultSelectionOptions,...this.options,...o.selectionOptions},view:s}),r.toArray()}};o([e()],n.prototype,"cursor",void 0),o([e()],n.prototype,"options",void 0),o([e()],n.prototype,"sources",void 0),o([e()],n.prototype,"view",void 0),n=o([r("esri.widgets.support.Selector2D")],n);const p=n;export{p as default};
