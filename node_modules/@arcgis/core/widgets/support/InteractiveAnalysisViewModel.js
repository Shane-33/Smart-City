/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as s}from"../../chunks/tslib.es6.js";import{createTask as t}from"../../core/asyncUtils.js";import{abortMaybe as e}from"../../core/maybe.js";import{throwIfAborted as i,isAbortError as n,isAborted as a}from"../../core/promiseUtils.js";import{watch as r,sync as o,syncAndInitial as l,whenOnce as c}from"../../core/reactiveUtils.js";import{property as h}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import"../../core/arrayUtils.js";import"../../core/has.js";import{subclass as y}from"../../core/accessorSupport/decorators/subclass.js";import{InteractiveToolViewModel as w}from"./InteractiveToolViewModel.js";var p;!function(s){s[s.PENDING=0]="PENDING",s[s.WAIT_FOR_VIEW_READY=1]="WAIT_FOR_VIEW_READY",s[s.RUNNING=2]="RUNNING"}(p||(p={}));let u=class extends w{constructor(s={}){super(s),this.analysisView=null,this._reconnectViewTask=null,this._parentChangeFromReconnect=!1,this._startUserOperation=null;const t=s?.analysis;null!=t?this.analysis=t:(this._set("analysis",this.constructAnalysis()),this._set("isAnalysisOwner",!0))}normalizeCtorArgs(s){const{analysis:t,...e}=s;return e}initialize(){this.addHandles([r((()=>this.analysis?.parent),(s=>{this._parentChangeFromReconnect||s===this.view||this._set("isAnalysisOwner",!1);const t=!this._parentChangeFromReconnect;this._parentChangeFromReconnect=!1,t&&this._scheduleViewReconnect()}),o),r((()=>({view:this.view,ready:null!=this.view&&this.view.ready,supported:this.supported})),(({view:s},t)=>{const i=t?.view;s!==i&&(this._startUserOperation=e(this._startUserOperation),this._disconnectFromView(i)),this._scheduleViewReconnect()}),l),r((()=>this.analysis.isEditable),((s,t)=>{null!=this.analysisView&&(s&&!t&&null==this.tool?this.createTool():s||!t||null==this.tool||this.tool.active||this.removeTool())}))])}destroy(){this._reconnectViewTask=e(this._reconnectViewTask),this._startUserOperation=e(this._startUserOperation),null!=this.analysisView&&(this.analysisView.visible=void 0),this._disconnectFromView(this.view),null!=this.analysis&&this.isAnalysisOwner&&(this.analysis.destroy(),this._set("analysis",null))}set analysis(s){s!==this._get("analysis")&&(this._startUserOperation=e(this._startUserOperation),this._disconnectFromView(this.view),this._setExternalAnalysis(s),this._scheduleViewReconnect())}get ready(){return null!=this.analysisView&&!this.connectingToView}get connectingToView(){return null!=this._reconnectViewTask}get isAnalysisOwner(){return this._get("isAnalysisOwner")}set visible(s){this._set("visible",s),null!=this.analysisView&&(this.analysisView.visible=s)}async start(){this.clear();const s={task:null,abort:null,state:p.PENDING},e=t((async t=>{s.state=p.WAIT_FOR_VIEW_READY,await c((()=>this.ready),t),s.state=p.RUNNING,this.createTool({interactive:!0})}));return s.task=e,s.abort=()=>e.abort(),this._startUserOperation=s,e.promise}clear(){this._startUserOperation=e(this._startUserOperation),this.removeTool(),this.analysis.clear()}onConnectToAnalysisView(s){}onDisconnectFromAnalysisView(){}_scheduleViewReconnect(){this._reconnectViewTask=e(this._reconnectViewTask);const s=t((async t=>{try{await this._reconnectView(t)}catch(e){if(i(t),!n(e))return void this.logger.warn("Failed to use analysis in view model",e);throw e}finally{s===this._reconnectViewTask&&(this._reconnectViewTask=null)}}));this._reconnectViewTask=s}async _reconnectView(s){const{view:t}=this,e=null!=t&&t.ready&&this.supported,i=this.analysis;if(this._startUserOperation=_(this._startUserOperation),this._disconnectFromView(t),e&&null!=t&&null!=i){if(this.isAnalysisOwner){if(null!=i.parent)return void this.logError("expected owned analysis to have null parent when connecting to view");this._parentChangeFromReconnect=!0,t.analyses.add(i)}this.analysisView=await t.whenAnalysisView(i),a(s)?this._startUserOperation=_(this._startUserOperation):(this.analysisView.visible=this.visible,this.onConnectToAnalysisView(this.analysisView),this.createTool())}}_disconnectFromView(s){this.removeTool(),null!=s&&this.isAnalysisOwner&&(this._parentChangeFromReconnect=!0,s.analyses.remove(this.analysis),this.analysis.clear()),this.analysisView=null,this.onDisconnectFromAnalysisView()}_setExternalAnalysis(s){null==this.analysisView||this.isAnalysisOwner||(this.analysisView.visible=!0),this.analysisView=null,this._set("isAnalysisOwner",!1),this._set("analysis",s),this._parentChangeFromReconnect=!1}get testInfo(){return{analysisView:this.analysisView}}};function _(s){return null!=s&&s.state>=p.RUNNING?(s.abort(),null):s}s([h({nonNullable:!0})],u.prototype,"analysis",null),s([h()],u.prototype,"analysisView",void 0),s([h()],u.prototype,"ready",null),s([h()],u.prototype,"connectingToView",null),s([h({readOnly:!0})],u.prototype,"isAnalysisOwner",null),s([h({type:Boolean,value:!0})],u.prototype,"visible",null),s([h()],u.prototype,"_reconnectViewTask",void 0),u=s([y("esri.widgets.support.InteractiveAnalysisViewModel")],u);export{u as InteractiveAnalysisViewModel};
