/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import{deprecatedProperty as t}from"../../../core/deprecate.js";import o from"../../../core/Evented.js";import{handlesGroup as s}from"../../../core/handleUtils.js";import r from"../../../core/Logger.js";import{removeMaybe as i}from"../../../core/maybe.js";import{watch as a}from"../../../core/reactiveUtils.js";import{property as c}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import{subclass as n}from"../../../core/accessorSupport/decorators/subclass.js";import{isKnowledgeGraphLayer as l}from"../../../layers/support/layerUtils.js";import{findLayerView as p}from"../../../views/draw/support/layerUtils.js";import{isSelectableLayerView2D as u}from"../../../views/support/layerViewUtils.js";import h from"../Selector2D.js";let m=class extends o.EventedAccessor{constructor(e){super(e),this._operationHandlesGroup=null,this.activeOperation=null,this.selector=new h,this.sources=null}initialize(){this.addHandles([a((()=>this._sources),(e=>{this.selector.sources=e,this.activeOperation&&(this.activeOperation.sources=e)}))])}destroy(){this._operationHandlesGroup=i(this._operationHandlesGroup),this.selector.destroy()}get _sources(){const{sources:e,view:t}=this;return t&&e?.length?e.flatMap((e=>{if(u(e))return e;if(l(e)){const o=e.layers||[],s=o.map((e=>{const o=p(t,e)||void 0;return u(o)?o:e}));return s.length?s.toArray():o.length?o.toArray():e}const o=p(t,e)||void 0;return u(o)?o:e})):[]}set cursor(e){this.activeOperation&&(this.activeOperation.cursor=e),this.selector.cursor=e,this._set("cursor",e)}get layers(){return t(r.getLogger(this),"layers",{replacement:"Use SelectionToolbar.sources instead."}),this.sources}set layers(e){t(r.getLogger(this),"layers",{replacement:"Use SelectionToolbar.sources instead."}),this.sources=e}get state(){return this.activeOperation?"active":this.view?.ready&&this._sources.length?"ready":"disabled"}set view(e){this.selector.view=e,this._set("view",e)}async selectionFrom(e,t){const{_sources:o}=this;return this.view&&o.length?this.selector.selectionFrom({geometry:e,selectionOptions:t,sources:o}):[]}cancel(){"active"===this.state&&(this.activeOperation?.cancel(),this._set("activeOperation",null))}activate(e){const{_sources:t,state:o}=this;if("disabled"===o||!t?.length)return;"active"===o&&this.cancel();const r=this.selector.draw({sources:t,operationOptions:e});return this._operationHandlesGroup=s([r.once("complete",(e=>this._onOperationComplete(e))),r.on("selection-change",(e=>this._onOperationSelectionChange(e)))]),this._set("activeOperation",r),r}_onOperationSelectionChange(e){this.emit("selection-change",e)}_onOperationComplete(e){this._operationHandlesGroup=i(this._operationHandlesGroup),this._set("activeOperation",null),this.emit("complete",e)}};e([c()],m.prototype,"_sources",null),e([c({readOnly:!0})],m.prototype,"activeOperation",void 0),e([c()],m.prototype,"cursor",null),e([c()],m.prototype,"layers",null),e([c({readOnly:!0})],m.prototype,"selector",void 0),e([c()],m.prototype,"sources",void 0),e([c({readOnly:!0})],m.prototype,"state",null),e([c()],m.prototype,"view",null),m=e([n("esri.widgets.support.SelectionToolbar.SelectionToolbarViewModel")],m);const d=m;export{d as default};
