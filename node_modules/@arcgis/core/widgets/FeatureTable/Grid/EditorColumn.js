/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import{assertIsSome as e}from"../../../core/maybe.js";import{property as o}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import{subclass as n}from"../../../core/accessorSupport/decorators/subclass.js";import i from"./Column.js";import{autoLink as a}from"../../support/uriUtils.js";const s="esri-editor-column__cell-input",r={input:s,inputContainer:`${s}--container`},u={showInput:"Enter",hideInput:"Escape"};let l=class extends i{constructor(t){super(t),this.activeEditInfo=null,this.cellValueValidatorFunction=({oldValue:t,value:e})=>t!==e,this.editable=!1,this.inputRenderFunction=({root:t,column:e,rowData:o})=>{if(this.activeEditInfo?.updating)return;if(!this.editable)return;const n=this.getCellValue(e,o),i=this.createInputElement({root:t,column:e,rowData:o,value:n});this._set("activeEditInfo",{column:e,input:i,root:t,rowData:o,updating:!0,oldValue:n});const a=this.createInputContainer();a.appendChild(i),this.removeCellContent(t),t.appendChild(a),i.focus(),i instanceof HTMLInputElement&&i.select(),this.grid?.notifyResize()},this.loadingMessage="",this.inputType="text",this.maxLength=null,this.parseInputValueFunction=({input:t})=>t.value,this.renderFunction=t=>{const{root:e,column:o,rowData:n}=t,{activeEditInfo:i}=this;if(i&&i.updating)return;const s=this.getCellValue(o,n),r=this.cellValueFormatFunction({column:o,rowData:n,value:s});e.onclick=()=>e.focus(),e.ondblclick=()=>this.inputRenderFunction(t),e.ontouchend=()=>this.inputRenderFunction(t);const l=this.grid?.getSlotElementByName(e.slot),c=l?.parentElement;c&&!c.onkeydown&&(c.onkeydown=e=>{e.key!==u.showInput||this.activeEditInfo||this.inputRenderFunction(t),e.key===u.hideInput&&this.activeEditInfo&&this.cancel()}),null!=s&&null!=r?e.title=r.toString():e.title&&e.removeAttribute("title");const p=a(this.messagesURIUtils,r);r?.toString()!==e.innerHTML&&p!==e.innerHTML&&(e.innerHTML=p)},this.required=!1,this.store=null,this.updateRowItemFunction=({rowData:t,column:o,value:n})=>{e(t),t.item[o.path]=n},this.updateStoreItemFunction=async({rowData:t,column:o,value:n})=>{e(t),await(this.store?.updateItem({index:t.index,name:o.path,value:n}))}}cancel(){const{activeEditInfo:t}=this;if(!t)return;const{column:e,root:o,rowData:n,oldValue:i}=t;this._set("activeEditInfo",null);const s=this.cellValueFormatFunction({column:e,rowData:n,value:i}),r=a(this.messagesURIUtils,s);o.innerHTML=r,this.grid?.notifyResize()}createInputContainer(){const t=document.createElement("div");return t.classList.add(r.inputContainer),t}createInputElement({value:t}){const e=document.createElement("input");return e.classList.add(r.input),null!=this.maxLength&&(e.maxLength=this.maxLength),e.type=this.inputType,e.value=t,e.onblur=()=>{e.onblur=null,this.submit()},e}async submit(){const{activeEditInfo:t}=this;if(!t)return;const{column:e,input:o,root:n,rowData:i,oldValue:s}=t,r=this.parseInputValueFunction({input:o,column:e,rowData:i});if(!this.cellValueValidatorFunction({value:r,oldValue:s,column:e,rowData:i}))this.cancel();else{n.innerHTML=this.loadingMessage,this.grid?.notifyResize();try{await this.updateStoreItemFunction({rowData:i,column:e,value:r}),this.updateRowItemFunction({rowData:i,column:e,value:r});const t=this.getCellValue(e,i),o=this.cellValueFormatFunction({column:e,rowData:i,value:t});null!=t&&null!=o?n.title=o.toString():n.title&&n.removeAttribute("title");const s=a(this.messagesURIUtils,o);n.innerHTML=s,this.emit("value-change",{column:e,rowData:i,value:t}),this._set("activeEditInfo",null),this.grid?.notifyResize()}catch(u){this.cancel()}}}};t([o({readOnly:!0})],l.prototype,"activeEditInfo",void 0),t([o()],l.prototype,"cellValueValidatorFunction",void 0),t([o()],l.prototype,"editable",void 0),t([o()],l.prototype,"inputRenderFunction",void 0),t([o({constructOnly:!0})],l.prototype,"loadingMessage",void 0),t([o()],l.prototype,"inputType",void 0),t([o()],l.prototype,"maxLength",void 0),t([o()],l.prototype,"parseInputValueFunction",void 0),t([o()],l.prototype,"renderFunction",void 0),t([o()],l.prototype,"required",void 0),t([o()],l.prototype,"store",void 0),t([o()],l.prototype,"updateRowItemFunction",void 0),t([o()],l.prototype,"updateStoreItemFunction",void 0),l=t([n("esri.widgets.FeatureTable.Grid.EditorColumn")],l);const c=l;export{c as default};
