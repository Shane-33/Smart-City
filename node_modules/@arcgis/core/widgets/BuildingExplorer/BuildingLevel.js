/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import{property as s}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import"../../core/arrayUtils.js";import"../../core/has.js";import{subclass as l}from"../../core/accessorSupport/decorators/subclass.js";import t from"./BuildingNumericFilterViewModel.js";import{findFieldInfoByModelName as r}from"./support/buildingLayerUtils.js";import{getValueFromFilters as i}from"./support/filterUtils.js";import{getDomainInfo as o}from"./support/validation.js";const a="bldglevel";let n=class extends t{constructor(){super(...arguments),this._levelFieldName=null,this._parseValueFromFilter=e=>{const s=new RegExp(`${this._levelFieldName}\\s*=\\s*(\\d+)`,"gi"),l=new RegExp(`${this._levelFieldName}\\s*<\\s*(\\d+)`,"gi");for(const{filterMode:t,filterExpression:r}of e.filterBlocks?.items??[]){if(null==r)continue;let e=null;if("solid"===t.type?e=s.exec(r):"x-ray"===t.type&&(e=l.exec(r)),e)return parseInt(e[1],10)}return null}}get filterExpressions(){return this.enabled&&this._levelFieldName?{xRay:`${this._levelFieldName} < ${this.value}`,solid:`${this._levelFieldName} = ${this.value}`}:{solid:null,xRay:null}}get _firstValue(){const e=this.allowedValues;return e.length>0?e[0]:0}_setup(){const e=[];this.layers.forEach((s=>{const l=r(s,a);null!=l&&(this._levelFieldName=l.fieldName,e.push(l))})),this._domainInfo=o(e);const s=this._valueBeforeReady;this._set("state","ready"),this._valueBeforeReady=null;const l=s??i(this.layers,this._parseValueFromFilter);null!=l?this.select(l):(this.enabled=!1,this.value=this._firstValue)}};e([s({readOnly:!0})],n.prototype,"filterExpressions",null),e([s()],n.prototype,"_levelFieldName",void 0),e([s({readOnly:!0})],n.prototype,"_firstValue",null),n=e([l("esri.widgets.BuildingExplorer.BuildingLevel")],n);const p=n;export{p as default};
