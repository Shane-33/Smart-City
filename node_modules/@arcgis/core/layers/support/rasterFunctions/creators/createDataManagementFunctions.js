/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{getNamedColor as t,hex2rgba as a}from"../../../../colorUtils.js";import{colormapName as n}from"../../rasterFunctionConstants.js";import{createRasterFunction as o}from"./utils.js";import{colorRampDict as r}from"../../../../renderers/support/colorRampUtils.js";function e(t){return"colormap"in t?s(t):"colorRamp"in t?i(t):u(t)}function s(n){const r=n.colormap.map((n=>{if("value"in n){const o="string"==typeof n.color?t(n.color)??a(n.color):n.color;(n=[n.value,...o])[4]&&n[4]<=1&&(n[4]=Math.round(255*n[4]))}return n})),{raster:e,outputPixelType:s}=n;return o("Colormap",{colormap:r,raster:e},s)}function i(t){const{raster:a,colorRamp:n,outputPixelType:r}=t,e={colorRamp:"toJSON"in n?n.toJSON():n,raster:a};return o("Colormap",e,r)}function u(t){const{colorRampName:a}=t,e=Object.values(n).find((t=>t.toLowerCase()===a?.toLowerCase())),s=r.toJSON(a),{raster:i,outputPixelType:u="unknown"}=t;return o("Colormap",e?{colormapName:e,raster:i}:{colorRampName:s,raster:i},u)}function l(t){const{raster:a,histograms:n,outputPixelType:r}=t,e=t.statistics?.map((t=>({min:t.min,max:t.max,mean:t.avg,standardDeviation:t.stddev})));return o("StatisticsHistograms",{raster:a,statistics:e,histograms:n},r)}function p(t){const{raster:a,attributeTable:n,outputPixelType:r="unknown"}=t,e="toJSON"in n?n.toJSON():n;return o("Table",{raster:a,attributeTableAsRecordSet:e},r)}function c(t){const{raster:a,outputPixelType:n="unknown"}=t,r={raster:a,missingBandAction:"fail"===t.missingBandAction?1:0};return"bandIds"in t?r.bandIds=t.bandIds:"bandNames"in t?r.bandNames=t.bandNames:"bandWavelengths"in t&&(r.bandWavelengths=t.bandWavelengths),o("ExtractBand",r,n)}function m(t){const{rasters:a,outputPixelType:n}=t;return o("CompositeBand",{rasters:a},n)}function d(t){const{allowUnmatched:a,raster:n,rangeMaps:r,outputPixelType:e}=t,s=r?.filter((({output:t})=>null!=t)),i=s?.flatMap((({range:t})=>t)),u=s?.map((({output:t})=>t)),l=r?.filter((t=>null==t.output))?.flatMap((({range:t})=>t));return o("Remap",{allowUnmatched:a,raster:n,inputRanges:i,outputValues:u,noDataRanges:l},e)}function f(t){const{raster:a,outputPixelType:n="unknown"}=t,r=t.includedRanges?.flatMap((t=>t)),e=t.noDataValues?.map((t=>t.join(" "))),s="match-all"===t.noDataInterpretation?1:0;return o("Mask",{raster:a,includedRanges:r,noDataInterpretation:s,noDataValues:e},n)}export{e as colormap,m as compositeBands,c as extractBand,f as mask,d as remap,l as statisticsHistogram,p as table};
