/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as r}from"../../../chunks/tslib.es6.js";import{clone as s}from"../../../core/lang.js";import{property as o}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as t}from"../../../core/accessorSupport/decorators/subclass.js";import{writer as e}from"../../../core/accessorSupport/decorators/writer.js";import p from"./BaseFunctionArguments.js";var a;let i=a=class extends p{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(r,s){s.rasters=r.map((r=>"number"==typeof r||"string"==typeof r?r:r.toJSON()))}clone(){return new a({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:s(this.rasters)})}};r([o({json:{write:!0}})],i.prototype,"operation",void 0),r([o({json:{write:!0}})],i.prototype,"rasters",void 0),r([e("rasters")],i.prototype,"writeRasters",null),r([o({json:{write:!0}})],i.prototype,"processAsMultiband",void 0),i=a=r([t("esri.layers.support.rasterFunctions.LocalFunctionArguments")],i);const c=i;export{c as default};
