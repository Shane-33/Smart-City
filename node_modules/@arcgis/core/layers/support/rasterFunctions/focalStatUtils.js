/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import"../../../core/has.js";import{JSONMap as t}from"../../../core/jsonMap.js";import e from"../PixelBlock.js";import{mirror as o}from"./mirror.js";const n=new t({1:"min",2:"max",3:"mean",4:"stddev",5:"median",6:"majority",7:"minority"},{useNumericKeys:!0});function s(t,e){const{fillNoDataOnly:o}=e,{band:n,width:s,height:r,mask:i,outBand:l}=t;if(o&&!i)return void l.set(n);const{statisticsType:a,kernelRows:f,kernelCols:c}=e,h="stddev"===a,u=s*r,m=new Float64Array(u),d=new Float64Array(u),y=new Uint32Array(u);for(let b=0;b<r;b++){const t=b*s;let e=0,o=0,r=0;for(let s=0;s<c;s++)i&&!i[t+s]||(e+=n[t+s],h&&(o+=n[t+s]**2),r++);m[t]=e,d[t]=o,y[t]=r;for(let l=1;l<=s-c;l++){const s=t+l-1,a=s+c;i?(i[s]&&(r--,e-=n[s],h&&(o-=n[s]**2)),i[a]&&(r++,e+=n[a],h&&(o+=n[a]**2))):(e-=n[s],e+=n[a],h&&(o-=n[s]**2,o+=n[a]**2)),m[t+l]=e,y[t+l]=r,h&&(d[t+l]=o)}}const w=new Float64Array(u),k=new Float64Array(u),p=new Uint32Array(u),g=f*s;for(let b=0;b<=s-c;b++){let t=0,e=0,o=0;for(let n=0;n<f;n++){const r=n*s+b;t+=m[r],o+=y[r],h&&(e+=d[r])}w[b]=t,k[b]=e,p[b]=o;for(let n=1;n<=r-f;n++){const r=(n-1)*s+b,i=r+g;t-=m[r],t+=m[i],o-=y[r],o+=y[i],h&&(e-=d[r],e+=d[i]),w[n*s+b]=t,k[n*s+b]=e,p[n*s+b]=o}}const M=Math.floor(f/2),A=Math.floor(c/2);for(let b=M;b<r-M;b++){const t=b*s;for(let e=A;e<s-A;e++){const n=(b-M)*s+e-A,r=p[n];if(0===r||o&&(!i||i[t+e]))continue;const a=w[n]/r,f=h?Math.sqrt((k[n]-w[n]*a)/r):a;l[t+e]=f,i&&(i[t+e]=255)}}}function r(t,e){const{fillNoDataOnly:o}=e,{band:n,width:s,height:r,mask:i,outBand:l}=t;if(o&&!i)return void l.set(n);const{kernelRows:a,kernelCols:f,statisticsType:c}=e,h=Math.floor(a/2),u=Math.floor(f/2),m="min"===c,d=l.slice(),y=new Uint32Array(s*r);for(let w=h;w<r-h;w++){const t=w*s;for(let e=u;e<s-u;e++){let o=m?Number.MAX_VALUE:-Number.MAX_VALUE,r=0;for(let l=0;l<a;l++)for(let a=0;a<f;a++){const f=t+e+(l-h)*s+a-u;i&&!i[f]||(o=m?Math.min(o,n[f]):Math.max(o,n[f]),r++)}i?(d[t+e]=0===r?0:o,y[t+e]=r):l[t+e]=0===r?0:o}}if(i)for(let w=h;w<r-h;w++){const t=w*s;for(let e=u;e<s-u;e++)if(y[t+e]){if(o&&i[t+e])continue;l[t+e]=d[t+e],i[t+e]=255}}}function i(t,e){const{fillNoDataOnly:o}=e,{band:n,width:s,height:r,mask:i,outBand:l}=t;if(o&&!i)return void l.set(n);const{kernelRows:a,kernelCols:f}=e,c=Math.floor(a/2),h=Math.floor(f/2),u=l.slice(),m=new Uint32Array(s*r);for(let d=c;d<r-c;d++){const t=d*s;for(let e=h;e<s-h;e++){if(o&&i&&i[t+e])continue;const r=[];for(let o=0;o<a;o++)for(let l=0;l<f;l++){const a=t+e+(o-c)*s+l-h;i&&!i[a]||r.push(n[a])}r.length&&(r.sort(((t,e)=>t-e)),i?(u[t+e]=r[Math.floor((r.length-1)/2)],m[t+e]=r.length):l[t+e]=r[Math.floor((r.length-1)/2)])}}if(i)for(let d=c;d<r-c;d++){const t=d*s;for(let e=h;e<s-h;e++)if(m[t+e]){if(o&&i[t+e])continue;l[t+e]=u[t+e],i[t+e]=255}}}function l(t,e){const{fillNoDataOnly:o}=e,{band:n,width:s,height:r,mask:i,outBand:l}=t;if(o&&!i)return void l.set(n);const{kernelRows:a,kernelCols:f}=e,c=Math.floor(a/2),h=Math.floor(f/2),u="majority"===e.statisticsType,m=a*f,d=l.slice(),y=new Uint32Array(s*r);for(let w=c;w<r-c;w++){const t=w*s;for(let e=h;e<s-h;e++){if(o&&i&&i[t+e])continue;const r=new Map;for(let o=0;o<a;o++)for(let l=0;l<f;l++){const a=t+e+(o-c)*s+l-h;if(i&&!i[a])continue;const f=n[a];r.set(f,r.has(f)?r.get(f)+1:1)}if(0===r.size)continue;let w=0,k=0,p=u?0:m+1;for(const t of r.keys())k=r.get(t),u===k>p&&(p=k,w=t);i?(d[t+e]=w,y[t+e]=r.size):l[t+e]=w}}if(i)for(let w=c;w<r-c;w++){const t=w*s;for(let e=h;e<s-h;e++)if(y[t+e]){if(o&&i[t+e])continue;l[t+e]=d[t+e],i[t+e]=255}}}function a(t,n){const{mask:a}=t,{fillNoDataOnly:f}=n;if(f&&!a)return t;const{pixels:c,width:h,height:u,bandMasks:m,pixelType:d}=t,y=c.length,w=h*u,k=[],{kernelRows:p,kernelCols:g,statisticsType:M,mirrorEdges:A}=n;if(f&&!a)return t;const b=n.outputPixelType??d,x=[];for(let U=0;U<y;U++){const t=c[U],d=e.createEmptyBand(b,w);f&&d.set(t);const y=m?.[U]??a,j=y?.slice()??null,N={band:t,width:h,height:u,mask:j,outBand:d};switch(M){case"min":case"max":r(N,n);break;case"mean":case"stddev":s(N,n);break;case"median":i(N,n);break;case"majority":case"minority":l(N,n)}A&&!f&&o(d,h,u,p,g),k.push(d),j&&x.push(j)}let j=x[0]??a;if(x.length!==y&&(x.length=0),y>1&&m?.length){j=new Uint8Array(w),j.set(x[0]);for(let t=1;t<m.length;t++){const e=m[t];for(let t=0;t<e.length;t++)0===e[t]&&(j[t]=0)}}const N=new e({pixelType:b,width:h,height:u,pixels:k,bandMasks:m&&x.length?x:null,mask:j});return N.updateStatistics(),N}export{a as computeFocalStatistics,n as statisticsTypeMap};
