/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import{property as s}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import{subclass as o}from"../../../core/accessorSupport/decorators/subclass.js";import{localOperators as e}from"../rasterFunctionConstants.js";import{getPixelValueRange as r}from"../rasterFormats/pixelRangeUtils.js";import n from"./BaseRasterFunction.js";import i from"./LocalFunctionArguments.js";import{operandsCount as u,getOutputDomain as a,local as c}from"./localUtils.js";let p=class extends n{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,s=t[0],{bandCount:o}=s,{processAsMultiband:e}=this.functionArguments;if(t.some((t=>t.bandCount!==o)))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:r,rasters:n}=this.functionArguments,i=u[r];if(!(999===i||n.length===i||n.length<=1&&1===i))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${i}`};this.outputPixelType=this._getOutputPixelType("f32");const c=s.clone();c.pixelType=this.outputPixelType,c.statistics=null,c.histograms=null,c.colormap=null,c.attributeTable=null,c.bandCount=999!==i||e?o:1;const p=a(r);if(p){c.statistics=[];for(let t=0;t<c.bandCount;t++)c.statistics[t]={min:p[0],max:p[1],avg:(p[0]+p[1])/2,stddev:(p[0]+p[1])/10}}this.rasterInfo=c;return{success:!0,supportsGPU:1===c.bandCount&&i<=3&&(r<11||r>16)}}_processPixels(t){const{pixelBlocks:s}=t;return null==s||s.some((t=>null==t))?null:c(s,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){const{operation:t}=this.functionArguments,s=u[t],o=Object.keys(e).find((s=>e[s]===t))?.toLowerCase()??"undefined",n=this.outputPixelType??"f32";let[i,a]=r(n);const c=n.startsWith("u")||n.startsWith("s");return c&&(i-=1e-4,a+=1e-4),{imageCount:s,operationName:o,domainRange:[i,a],isOutputRounded:c}}};t([s({json:{write:!0,name:"rasterFunction"}})],p.prototype,"functionName",void 0),t([s({type:i,json:{write:!0,name:"rasterFunctionArguments"}})],p.prototype,"functionArguments",void 0),t([s()],p.prototype,"rasterArgumentNames",void 0),p=t([o("esri.layers.support.rasterFunctions.LocalFunction")],p);const l=p;export{l as default};
