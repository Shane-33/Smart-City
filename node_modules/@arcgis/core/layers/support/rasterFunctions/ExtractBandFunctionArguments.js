/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as s}from"../../../chunks/tslib.es6.js";import{property as t}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import{enumeration as e}from"../../../core/accessorSupport/decorators/enumeration.js";import{subclass as o}from"../../../core/accessorSupport/decorators/subclass.js";import r from"./BaseFunctionArguments.js";import{MissingBandAction as n}from"./pixelUtils.js";var a;let i=a=class extends r{constructor(){super(...arguments),this.bandIds=[],this.bandNames=[],this.bandWavelengths=[],this.missingBandAction=n.bestMatch}clone(){return new a({bandIds:this.bandIds?.slice(),bandNames:this.bandNames?.slice(),bandWavelengths:this.bandWavelengths?.slice(),missingBandAction:this.missingBandAction,method:this.method,wavelengthMatchTolerance:this.wavelengthMatchTolerance})}};s([t({json:{write:!0}})],i.prototype,"bandIds",void 0),s([t({json:{write:!0}})],i.prototype,"bandNames",void 0),s([t({json:{write:!0}})],i.prototype,"bandWavelengths",void 0),s([e({0:"name",1:"wavelength",2:"id"})],i.prototype,"method",void 0),s([t({json:{write:!0}})],i.prototype,"missingBandAction",void 0),s([t({json:{write:!0}})],i.prototype,"wavelengthMatchTolerance",void 0),i=a=s([o("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],i);const c=i;export{c as default};
