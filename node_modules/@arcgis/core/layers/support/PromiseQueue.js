/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{isAborted as s,createAbortError as t,isPromiseLike as e}from"../../core/promiseUtils.js";import{signal as r}from"../../core/signal.js";class n{constructor(){this._tasks=new Array,this._running=r(!1)}get length(){return this._tasks.length}get running(){return this._running.value}destroy(){this.cancelAll()}runTask(s){for(;!s.done&&this._process(s);)s.madeProgress()}push(s,t,e){return this._running.value=!0,new Promise(((r,n)=>this._tasks.push(new i(r,n,s,t,e))))}unshift(s,t,e){return this._running.value=!0,new Promise(((r,n)=>this._tasks.unshift(new i(r,n,s,t,e))))}_process(r){if(0===this._tasks.length)return!1;const n=this._tasks.shift();try{const i=s(n.signal);if(i&&!n.abortCallback)n.reject(t());else{const s=i?n.abortCallback?.(t()):n.callback(r);e(s)?s.then(n.resolve,n.reject):n.resolve(s)}}catch(i){n.reject(i)}return this._running.value=this._tasks.length>0,!0}cancelAll(){const s=t();for(const t of this._tasks)if(t.abortCallback){const e=t.abortCallback(s);t.resolve(e)}else t.reject(s);this._tasks.length=0,this._running.value=!1}}class i{constructor(s,t,e,r=void 0,n=void 0){this.resolve=s,this.reject=t,this.callback=e,this.signal=r,this.abortCallback=n}}export{n as PromiseQueue};
