/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{JSONSupport as e}from"../../core/JSONSupport.js";import{clone as n}from"../../core/lang.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import{enumeration as r}from"../../core/accessorSupport/decorators/enumeration.js";import{reader as s}from"../../core/accessorSupport/decorators/reader.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import{writer as a}from"../../core/accessorSupport/decorators/writer.js";import u from"./RasterFunctionTemplate.js";var c;const p=new Set(["raster","raster2","dem","fillraster"]),m=new Set(["rasters"]),f=t=>t?.rasterFunction?d.fromJSON(t):t,l=t=>t&&t instanceof d?t.toJSON():t,y=t=>t?.functionName&&!t.declaredClass,F=t=>y(t)?new d(t):t,h=t=>{if(null==t)return null;t=n(t);const e={};for(const n of Object.keys(t))p.has(n.toLowerCase())?e[n]=f(t[n]):m.has(n.toLowerCase())&&Array.isArray(t[n])?e[n]=t[n].map(f):e[n]=t[n];return e},w={types:{key:"type",base:null,typeMap:{RasterFunctionTemplate:u}},json:{write:!0,name:"rasterFunctionDefinition"}};let d=c=class extends e{constructor(t){super(t),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.functionDefinition=null}set functionArguments(t){if(t){const e=Object.keys(t);if(e.some((e=>p.has(e.toLowerCase())&&y(t[e])))||e.some((e=>m.has(e.toLowerCase())&&Array.isArray(t[e])&&t[e].some((t=>y(t)))))){t=n(t);for(const n of e)p.has(n.toLowerCase())?t[n]=F(t[n]):m.has(n.toLowerCase())&&Array.isArray(t[n])&&(t[n]=t[n].map((t=>F(t))))}}this._set("functionArguments",t)}readFunctionArguments(t){return h(t)}writeFunctionArguments(t,e,n){const o={};for(const r of Object.keys(t))p.has(r.toLowerCase())?o[r]=l(t[r]):m.has(r.toLowerCase())&&Array.isArray(t[r])?o[r]=t[r].map(l):o[r]=l(t[r]);e[n]=o}readFunctionName(t,e){const n=e.rasterFunctionInfos,o=e.name;return o||(n?.length&&"None"!==n[0].name?n[0].name:e.rasterFunctionDefinition?e.rasterFunctionDefinition.name:e.rasterFunction)}get rasterFunctionDefinition(){return this.functionDefinition?.toJSON()}set rasterFunctionDefinition(t){this.functionDefinition=t?u.fromJSON(t):null}clone(){return new c({functionName:this.functionName,functionArguments:n(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,rasterFunctionDefinition:n(this.rasterFunctionDefinition)})}};t([o({json:{type:Object,name:"rasterFunctionArguments"}})],d.prototype,"functionArguments",null),t([s("functionArguments")],d.prototype,"readFunctionArguments",null),t([a("functionArguments")],d.prototype,"writeFunctionArguments",null),t([o({json:{type:String,write:{target:"rasterFunction"}}})],d.prototype,"functionName",void 0),t([s("functionName",["rasterFunction","rasterFunctionInfos","rasterFunctionDefinition"])],d.prototype,"readFunctionName",null),t([r({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1}),o({json:{default:"unknown"}})],d.prototype,"outputPixelType",void 0),t([o({type:String,json:{read:!0,write:!0}})],d.prototype,"variableName",void 0),t([o()],d.prototype,"rasterFunctionDefinition",null),t([o(w)],d.prototype,"functionDefinition",void 0),d=c=t([i("esri.layers.support.RasterFunction")],d);const N=d;export{N as default};
