/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import"../../../geometry.js";import e from"../../../core/Error.js";import{eachAlways as s}from"../../../core/promiseUtils.js";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import{subclass as i}from"../../../core/accessorSupport/decorators/subclass.js";import o from"../RasterInfo.js";import a from"./BaseRaster.js";import{split as n}from"../rasterFunctions/pixelUtils.js";import{estimateStatisticsHistograms as m}from"../rasterFunctions/stretchUtils.js";import l from"../../../geometry/Extent.js";import p from"../../../geometry/SpatialReference.js";let c=class extends a{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.data=null}async open(t){await this.init();const e=this.data,{pixelBlock:s,statistics:r,histograms:i,name:a,keyProperties:n,nativeExtent:m,transform:c}=this.data,{width:h,height:f,pixelType:u}=s,d=e.extent??new l({xmin:-.5,ymin:.5,xmax:h-.5,ymax:f-.5,spatialReference:new p({wkid:3857})}),y=e.isPseudoSpatialReference??!e.extent,x={x:d.width/h,y:d.height/f},g=new o({width:h,height:f,pixelType:u,extent:d,nativeExtent:m,transform:c,pixelSize:x,spatialReference:d.spatialReference,bandCount:s.pixels.length,keyProperties:n||{},statistics:r,isPseudoSpatialReference:y,histograms:i});this.createRemoteDatasetStorageInfo(g,512,512),this._set("rasterInfo",g),this.updateTileInfo(),await this._buildInMemoryRaster(s,{width:512,height:512},t),this.datasetName=a,this.url="/InMemory/"+a}fetchRawTile(t,e,s,r={}){const i=this._pixelBlockTiles.get(`${t}/${e}/${s}`);return Promise.resolve(i)}async _buildInMemoryRaster(t,r,i){const o=this.rasterInfo.storageInfo.maximumPyramidLevel,a=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:t,tileSize:r,maximumPyramidLevel:o},i):Promise.resolve(n(t,r,o)),l=null!=this.rasterInfo.statistics,p=null!=this.rasterInfo.histograms,c=l?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:t},i):Promise.resolve(m(t)),h=await s([a,c]);if(!h[0].value&&h[1].value)throw new e("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=h[0].value,l||(this.rasterInfo.statistics=h[1].value?.statistics),p||(this.rasterInfo.histograms=h[1].value?.histograms)}};t([r({type:String,json:{write:!0}})],c.prototype,"datasetFormat",void 0),t([r()],c.prototype,"data",void 0),c=t([i("esri.layers.support.rasterDatasets.InMemoryRaster")],c);const h=c;export{h as default};
