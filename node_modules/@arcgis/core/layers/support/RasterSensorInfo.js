/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as o}from"../../chunks/tslib.es6.js";import{JSONSupport as e}from"../../core/JSONSupport.js";import{property as t}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import"../../core/arrayUtils.js";import"../../core/has.js";import{reader as r}from"../../core/accessorSupport/decorators/reader.js";import{subclass as s}from"../../core/accessorSupport/decorators/subclass.js";import{writer as i}from"../../core/accessorSupport/decorators/writer.js";var a;function n(o){return o=Number(o),isNaN(o)?void 0:o}let u=a=class extends e{constructor(){super(...arguments),this.acquisitionDate=void 0,this.cloudCover=void 0,this.productName=void 0,this.sensorName=null,this.sensorAzimuth=void 0,this.sensorElevation=void 0,this.sunAzimuth=void 0,this.sunElevation=void 0}readAcquisitionDate(o){return new Date(o)}writeAcquisitionDate(o,e){e.AcquisitionDate=o.getTime()}clone(){return new a({acquisitionDate:this.acquisitionDate,cloudCover:this.cloudCover,productName:this.productName,sensorName:this.sensorName,sensorAzimuth:this.sensorAzimuth,sensorElevation:this.sensorElevation,sunAzimuth:this.sunAzimuth,sunElevation:this.sunElevation})}};o([t({json:{name:"AcquisitionDate",write:!0}})],u.prototype,"acquisitionDate",void 0),o([r("acquisitionDate")],u.prototype,"readAcquisitionDate",null),o([i("acquisitionDate")],u.prototype,"writeAcquisitionDate",null),o([t({json:{name:"CloudCover",read:{reader:n},write:!0}})],u.prototype,"cloudCover",void 0),o([t({json:{name:"ProductName",write:!0}})],u.prototype,"productName",void 0),o([t({json:{name:"SensorName",write:!0}})],u.prototype,"sensorName",void 0),o([t({json:{name:"SensorAzimuth",read:{reader:n},write:!0}})],u.prototype,"sensorAzimuth",void 0),o([t({json:{name:"SensorElevation",read:{reader:n},write:!0}})],u.prototype,"sensorElevation",void 0),o([t({json:{name:"SunAzimuth",read:{reader:n},write:!0}})],u.prototype,"sunAzimuth",void 0),o([t({json:{name:"SunElevation",read:{reader:n},write:!0}})],u.prototype,"sunElevation",void 0),u=a=o([s("esri.layers.support.RasterSensorInfo")],u);const p=u;export{p as default};
