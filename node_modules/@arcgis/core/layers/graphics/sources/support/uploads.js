/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import e from"../../../../request.js";import"../../../../core/has.js";import{throwIfAborted as o}from"../../../../core/promiseUtils.js";import{join as t}from"../../../../core/urlUtils.js";import{isHostedAgolService as s}from"../../../support/arcgisLayerUrl.js";import{arrayBufferToBase64 as r}from"../../../../support/base64Utils.js";import{makeProgressManager as a,estimatedTransferTime as n}from"../../../../support/progressUtils.js";const i=1e6,p=20*i,l=2e9,m=3;async function c({data:r,name:c,description:u},d,h){let j=null;try{const w=t(d,"uploads"),y=t(w,"info"),{data:g}=await e(y,{query:{f:"json"},responseType:"json"});o(h);const U=s(d),q=g.maxUploadFileSize*i,z=U?l:q,T=U?Math.min(p,q):p;if(r.size>z)throw new Error("Data too large");const A=t(w,"register"),{data:E}=await e(A,{query:{f:"json",itemName:f(c),description:u},responseType:"json",method:"post"});if(o(h),!E.success)throw new Error("Registration failed");const{itemID:P}=E.item;j=t(w,P);const D=t(j,"uploadPart"),I=Math.ceil(r.size/T),M=new Array;for(let e=0;e<I;++e)M.push(r.slice(e*T,Math.min((e+1)*T,r.size)));const b=M.slice().reverse(),v=new Array,x=a(I,h?.onProgress,"uploadItem"),F=async()=>{for(;0!==b.length;){const t=M.length-b.length,s=b.pop(),r=new FormData,a=x.simulate(t,n(s.size));try{const a=s;r.append("f","json"),r.append("file",a),r.append("partId",`${t}`);const{data:n}=await e(D,{timeout:0,body:r,responseType:"json",method:"post"});if(o(h),!n.success)throw new Error("Part upload failed")}finally{a.remove()}}};for(let e=0;e<m&&0!==b.length;++e)v.push(F());await Promise.all(v);const _=t(j,"commit"),{data:C}=await e(_,{query:{f:"json",parts:M.map(((e,o)=>o)).join(",")},responseType:"json",method:"post"});if(o(h),!C.success)throw new Error("Commit failed");return C.item}catch(w){if(null!=j){const o=t(j,"delete");await e(o,{query:{f:"json"},responseType:"json",method:"post"})}throw w}}function f(e){return e.replaceAll("/","_").replaceAll("\\","_")}export{c as uploadItem};
