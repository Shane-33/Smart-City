/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../geometry.js";import t from"../../../core/Error.js";import has from"../../../core/has.js";import r from"../../../core/Loadable.js";import{debounce as s,eachAlways as o}from"../../../core/promiseUtils.js";import{open as a}from"../../../core/workers/workers.js";import{property as i}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/arrayUtils.js";import{subclass as n}from"../../../core/accessorSupport/decorators/subclass.js";import{featureGeometryTypeKebabDictionary as c}from"../../../geometry/support/typeUtils.js";import{createCapabilities as p,createDrawingInfo as l}from"./support/clientSideDefaults.js";import{getCapabilities as u,getWFSLayerInfo as m,prepareWFSLayerFields as y,findFeatureType as d}from"../../ogc/wfsUtils.js";import f from"../../../rest/support/FeatureSet.js";import{utc as h}from"../../../time/timeZoneUtils.js";import w from"../../../geometry/Extent.js";let g=class extends r{constructor(){super(...arguments),this._connection=null,this.capabilities=p(!1,!1),this.type="wfs",this.refresh=s((async e=>{await this.load();const{extent:t}=await this._connection.invoke("refresh",e);return t&&(this.sourceJSON.extent=t),{dataChanged:!0,updates:{extent:this.sourceJSON.extent}}}))}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this._startWorker({signal:t})),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(e,t={}){await this.load(t);const r=await this._connection.invoke("queryFeatures",e?e.toJSON():null,t);return f.fromJSON(r)}async queryFeaturesJSON(e,t={}){return await this.load(t),this._connection.invoke("queryFeatures",e?e.toJSON():null,t)}async queryFeatureCount(e,t={}){return await this.load(t),this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t)}async queryObjectIds(e,t={}){return await this.load(t),this._connection.invoke("queryObjectIds",e?e.toJSON():null,t)}async queryExtent(e,t={}){await this.load(t);const r=await this._connection.invoke("queryExtent",e?e.toJSON():null,t);return{count:r.count,extent:w.fromJSON(r.extent)}}async querySnapping(e,t={}){return await this.load(t),this._connection.invoke("querySnapping",e,t)}async _createLoadOptions(e){const{url:r,customParameters:s,name:o,namespaceUri:a,fields:i,geometryType:n,swapXY:p}=this.layer,l="defaults"===this.layer.originOf("spatialReference")?void 0:this.layer.spatialReference;if(!r)throw new t("wfs-layer:missing-url","WFSLayer must be created with a url");this.wfsCapabilities||(this.wfsCapabilities=await u(r,{customParameters:s,...e}));const f=["fields","geometryType","name","namespaceUri","swapXY"].some((e=>null==this.layer[e])),h=f?await m(this.wfsCapabilities,o,a,{spatialReference:l,customParameters:s,signal:e?.signal}):{...y(i??[]),geometryType:n,name:o,namespaceUri:a,spatialReference:l,swapXY:p},w=d(this.wfsCapabilities.readFeatureTypes(),h.name,h.namespaceUri),g=c.toJSON(h.geometryType);return{customParameters:s,featureType:w,fields:h.fields?.map((e=>e.toJSON()))??[],geometryField:h.geometryField,geometryType:g,getFeatureUrl:this.wfsCapabilities.operations.GetFeature.url,getFeatureOutputFormat:this.wfsCapabilities.operations.GetFeature.outputFormat,objectIdField:h.objectIdField,spatialReference:h.spatialReference?.toJSON(),swapXY:!!h.swapXY}}async _startWorker(e){const[t,r]=await o([this._createLoadOptions(e),a("WFSSourceWorker",{...e,strategy:has("feature-layers-workers")?"dedicated":"local",registryTarget:this})]),s=t.error||r.error||null,i=r.value||null;if(s)throw i&&i.close(),s;const n=t.value;this._connection=r.value;const c=(await this._connection.invoke("load",n,e)).extent;this.sourceJSON={dateFieldsTimeReference:{timeZoneIANA:h},extent:c,fields:n.fields,geometryType:n.geometryType,objectIdField:n.objectIdField,geometryField:n.geometryField,drawingInfo:l(n.geometryType),name:n.featureType.title,wfsInfo:{name:n.featureType.name,featureUrl:n.getFeatureUrl,maxFeatures:3e3,swapXY:n.swapXY,supportedSpatialReferences:n.featureType.supportedSpatialReferences,version:"2.0.0",wfsNamespace:n.featureType.namespaceUri}}}};e([i()],g.prototype,"capabilities",void 0),e([i({constructOnly:!0})],g.prototype,"layer",void 0),e([i()],g.prototype,"sourceJSON",void 0),e([i()],g.prototype,"type",void 0),e([i()],g.prototype,"wfsCapabilities",void 0),g=e([n("esri.layers.graphics.sources.WFSSource")],g);export{g as WFSSource};
