/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import"../geometry.js";import r from"../PopupTemplate.js";import"../renderers/ClassBreaksRenderer.js";import"../renderers/DictionaryRenderer.js";import"../renderers/DotDensityRenderer.js";import"../renderers/HeatmapRenderer.js";import"../renderers/PieChartRenderer.js";import"../renderers/Renderer.js";import"../renderers/SimpleRenderer.js";import"../renderers/UniqueValueRenderer.js";import"../renderers/support/jsonUtils.js";import{rendererTypes as t,webSceneRendererTypes as i}from"../renderers/support/types.js";import{MultiOriginJSONMixin as o}from"../core/MultiOriginJSONSupport.js";import{setDeepValue as s}from"../core/object.js";import{urlToObject as n}from"../core/urlUtils.js";import{property as p}from"../core/accessorSupport/decorators/property.js";import{Integer as a}from"../core/accessorSupport/ensureType.js";import"../core/arrayUtils.js";import"../core/has.js";import{subclass as l}from"../core/accessorSupport/decorators/subclass.js";import{writer as d}from"../core/accessorSupport/decorators/writer.js";import{featureGeometryTypeKebabDictionary as m}from"../geometry/support/typeUtils.js";import u from"./Layer.js";import{WFSSource as y}from"./graphics/sources/WFSSource.js";import{BlendLayer as f}from"./mixins/BlendLayer.js";import{CustomParametersMixin as c}from"./mixins/CustomParametersMixin.js";import{FeatureEffectLayer as h}from"./mixins/FeatureEffectLayer.js";import{FeatureReductionLayer as g}from"./mixins/FeatureReductionLayer.js";import{OperationalLayer as j}from"./mixins/OperationalLayer.js";import{OrderedLayer as v}from"./mixins/OrderedLayer.js";import{PortalLayer as w}from"./mixins/PortalLayer.js";import{RefreshableLayer as F}from"./mixins/RefreshableLayer.js";import{ScaleRangeLayer as b}from"./mixins/ScaleRangeLayer.js";import{TemporalLayer as x}from"./mixins/TemporalLayer.js";import{wfsOidFieldName as I}from"./ogc/wfsUtils.js";import{elevationInfo as O,labelsVisible as R,legendEnabled as S,opacityDrawingInfo as P,popupEnabled as T,screenSizePerspectiveEnabled as U,url as q}from"./support/commonProperties.js";import E from"./support/Field.js";import{defineFieldProperties as L}from"./support/fieldProperties.js";import{fixRendererFields as C,fixTimeInfoFields as D}from"./support/fieldUtils.js";import Q from"./support/LabelClass.js";import{reader as W}from"./support/labelingInfo.js";import V from"../rest/support/Query.js";import{createPopupTemplate as N}from"../support/popupUtils.js";import{timeZoneProperty as X}from"../time/timeZoneUtils.js";import Y from"../geometry/SpatialReference.js";import k from"../geometry/Extent.js";var B;const J=L();let M=B=class extends(v(c(g(h(f(x(F(b(j(w(o(u)))))))))))){static fromWFSLayerInfo(e){const{customParameters:r,fields:t,geometryField:i,geometryType:o,name:s,namespaceUri:n,objectIdField:p,spatialReference:a,swapXY:l,url:d,wfsCapabilities:m}=e;return new B({customParameters:r,fields:t,geometryField:i,geometryType:o,name:s,namespaceUri:n,objectIdField:p,spatialReference:a,swapXY:l,url:d,wfsCapabilities:m})}constructor(e){super(e),this.copyright=null,this.customParameters=null,this.dateFieldsTimeZone=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.featureUrl=void 0,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="WFS",this.maxFeatures=3e3,this.mode=0,this.name=null,this.namespaceUri=null,this.outFields=null,this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new y({layer:this}),this.spatialReference=Y.WGS84,this.spatialReferences=[4326],this.swapXY=void 0,this.title="WFS",this.type="wfs",this.url=null,this.version=void 0}destroy(){this.source?.destroy()}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["WFS"]},e).then((()=>this.source.load(e))).then((()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl}),this.revert(["objectIdField","fields","timeInfo","spatialReference","name","namespaceUri"],"service"),C(this.renderer,this.fieldsIndex),D(this.timeInfo,this.fieldsIndex)}))),Promise.resolve(this)}get capabilities(){return this.source?.capabilities}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("capabilities"),(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}writeFields(e,r,t){const i=e.filter((e=>e.name!==I));this.geometryField&&i.unshift(new E({name:this.geometryField,alias:this.geometryField,type:"geometry"})),s(t,i.map((e=>e.toJSON())),r)}get parsedUrl(){return n(this.url)}set renderer(e){C(e,this.fieldsIndex),this._set("renderer",e)}get wfsCapabilities(){return this.source?.wfsCapabilities}set wfsCapabilities(e){this.source&&(this.source.wfsCapabilities=e)}createPopupTemplate(e){return N(this,e)}createQuery(){const e=new V;e.returnGeometry=!0,e.outFields=["*"],e.where=this.definitionExpression||"1=1";const{timeOffset:r,timeExtent:t}=this;return e.timeExtent=null!=r&&null!=t?t.offset(-r.value,r.unit):t||null,e}getFieldDomain(e,r){return this.getField(e)?.domain}getField(e){return this.fieldsIndex?.get(e)}queryFeatures(e,r){return this.load().then((()=>this.source.queryFeatures(V.from(e)||this.createQuery(),r))).then((e=>{if(e?.features)for(const r of e.features)r.layer=r.sourceLayer=this;return e}))}queryObjectIds(e,r){return this.load().then((()=>this.source.queryObjectIds(V.from(e)||this.createQuery(),r)))}queryFeatureCount(e,r){return this.load().then((()=>this.source.queryFeatureCount(V.from(e)||this.createQuery(),r)))}queryExtent(e,r){return this.load().then((()=>this.source.queryExtent(V.from(e)||this.createQuery(),r)))}async hasDataChanged(){try{const{dataChanged:e,updates:r}=await this.source.refresh(this.customParameters);return null!=r&&this.read(r,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}};e([p({readOnly:!0})],M.prototype,"capabilities",null),e([p({type:String})],M.prototype,"copyright",void 0),e([p({readOnly:!0})],M.prototype,"createQueryVersion",null),e([p({json:{name:"wfsInfo.customParameters",write:{overridePolicy:e=>({enabled:!!(e&&Object.keys(e).length>0),ignoreOrigin:!0})}}})],M.prototype,"customParameters",void 0),e([p(X("dateFieldsTimeReference"))],M.prototype,"dateFieldsTimeZone",void 0),e([p({readOnly:!0})],M.prototype,"defaultPopupTemplate",null),e([p({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],M.prototype,"definitionExpression",void 0),e([p({type:String})],M.prototype,"displayField",void 0),e([p(O)],M.prototype,"elevationInfo",void 0),e([p({type:String,readOnly:!0,json:{name:"wfsInfo.featureUrl",write:{ignoreOrigin:!0,isRequired:!0}}})],M.prototype,"featureUrl",void 0),e([p({type:[E],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],M.prototype,"fields",void 0),e([d("fields")],M.prototype,"writeFields",null),e([p(J.fieldsIndex)],M.prototype,"fieldsIndex",void 0),e([p({type:k,json:{name:"extent"}})],M.prototype,"fullExtent",void 0),e([p()],M.prototype,"geometryField",void 0),e([p({type:String,json:{read:{source:"layerDefinition.geometryType",reader:m.read},write:{target:"layerDefinition.geometryType",writer:m.write,ignoreOrigin:!0},origins:{service:{read:m.read}}}})],M.prototype,"geometryType",void 0),e([p({type:String})],M.prototype,"id",void 0),e([p(R)],M.prototype,"labelsVisible",void 0),e([p({type:[Q],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:W},write:!0}})],M.prototype,"labelingInfo",void 0),e([p(S)],M.prototype,"legendEnabled",void 0),e([p({type:["show","hide"]})],M.prototype,"listMode",void 0),e([p({type:String})],M.prototype,"objectIdField",void 0),e([p({type:["WFS"]})],M.prototype,"operationalLayerType",void 0),e([p({type:a,json:{name:"wfsInfo.maxFeatures",write:{ignoreOrigin:!0,isRequired:!0}}})],M.prototype,"maxFeatures",void 0),e([p({type:[0],readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0,isRequired:!0}}}}})],M.prototype,"mode",void 0),e([p({type:String,json:{name:"wfsInfo.name",write:{ignoreOrigin:!0,isRequired:!0}}})],M.prototype,"name",void 0),e([p({type:String,json:{name:"wfsInfo.wfsNamespace",write:{ignoreOrigin:!0,isRequired:!0}}})],M.prototype,"namespaceUri",void 0),e([p(P)],M.prototype,"opacity",void 0),e([p(J.outFields)],M.prototype,"outFields",void 0),e([p({readOnly:!0})],M.prototype,"parsedUrl",null),e([p(T)],M.prototype,"popupEnabled",void 0),e([p({type:r,json:{name:"popupInfo",write:!0}})],M.prototype,"popupTemplate",void 0),e([p({types:t,json:{origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:i,name:"layerDefinition.drawingInfo.renderer",write:!0}},name:"layerDefinition.drawingInfo.renderer",write:{ignoreOrigin:!0}}})],M.prototype,"renderer",null),e([p(U)],M.prototype,"screenSizePerspectiveEnabled",void 0),e([p({readOnly:!0})],M.prototype,"source",void 0),e([p({type:Y,json:{name:"layerDefinition.spatialReference",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"extent.spatialReference"}}}})],M.prototype,"spatialReference",void 0),e([p({readOnly:!0,type:[a],json:{name:"wfsInfo.supportedSpatialReferences",write:{ignoreOrigin:!0,isRequired:!0}}})],M.prototype,"spatialReferences",void 0),e([p({type:Boolean,value:!1,json:{name:"wfsInfo.swapXY",write:{ignoreOrigin:!0,isRequired:!0}}})],M.prototype,"swapXY",void 0),e([p({json:{write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"name"}}}})],M.prototype,"title",void 0),e([p({json:{read:!1},readOnly:!0})],M.prototype,"type",void 0),e([p(q)],M.prototype,"url",void 0),e([p({type:String,readOnly:!0,json:{name:"wfsInfo.version",write:{ignoreOrigin:!0,isRequired:!0}}})],M.prototype,"version",void 0),e([p()],M.prototype,"wfsCapabilities",null),M=B=e([l("esri.layers.WFSLayer")],M);const Z=M;export{Z as default};
