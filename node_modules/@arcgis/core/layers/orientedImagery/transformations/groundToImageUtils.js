/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import e from"../../../core/Error.js";import t from"../../../core/Logger.js";import{isAbortError as r}from"../../../core/promiseUtils.js";import{j as a}from"../../../chunks/mat3.js";import i from"../../../geometry/Point.js";import{project as n}from"../../../geometry/projection.js";import{geographicToWebMercator as o}from"../../../geometry/support/webMercatorUtils.js";import s from"../../ElevationLayer.js";import{isConstantElevation as c,validateElevationSourceURL as l}from"../core/ElevationSourceDefinitions.js";import{calculateRotationMatrix as m,geographicToLTP as u}from"./utils.js";function f(e){return"esri.Graphic"===e?.declaredClass}const p=Math.PI/180;async function y(e,t,r=!1){if(!e)return[];e=e.map((e=>"esri.geometry.Point"===e.declaredClass?e:i.fromJSON(e)));const{feature:a}=t,{attributes:n}=a;if(isNaN(parseFloat(n.elevation))){const e=await d([a.geometry],t);a.attributes.elevation=e[0].z}return d(e,t,r).then((e=>w(e,t)))}async function d(e,t,r=!1){if(r)return e;const{feature:{attributes:{cameraOrientation:a,elevationSource:i,cameraHeight:n,location:o}}}=t;return i&&(c(i)||i.url?.length)?g(e,t):v(e,a&&"number"==typeof o.z?o.z-n:0)}async function g(e,a){const{feature:i,options:n,currentCoveragePolygon:o}=a,m=i.attributes.elevationSource;if(!m)return e;if(c(m)){const{constantElevation:t}=m;return"number"!=typeof t?e:v(e,t)}const{url:u}=m;if(!u)return e;const{elevationSample:p}=i;if(!p){const a=f(o)?o.geometry?.extent:o.extent;if(!a)return e;const c=a.clone();c.xmin/=2,c.xmax*=2,c.ymin/=2,c.ymax*=2;const{error:p,isSupported:d}=await l(u);if(!d){t.getLogger(m).warn(p);const{location:r,cameraHeight:a,cameraOrientation:n}=i.attributes;return v(e,n&&"number"==typeof r.z?r.z-a:0)}const g=new s(u);let w=e;try{await g.load(),i.elevationSample=await g.createElevationSampler(c,n),w=e.map(h(i.elevationSample))}catch(y){r(y)||t.getLogger("esri.layers.orientedImagery.transformations.groundToImageUtils").warn(`#updateElevation() failed to update elevation using the provided elevation source URL: ${u}. Please provide a valid elevation source url.`,y)}finally{g.destroy()}return w}return e.map(h(p))}function h(e){return t=>{t.z=1;const r=e.queryElevation(n(t,e.spatialReference));return r?.z&&(t.z=r.z),t}}function v(e,t){return e.map((e=>(e.z=t,e)))}function w(e,t){const{attributes:r}=t.feature;return r.isSpherical||360===r.horizontalFieldOfView?{}:r.cameraOrientation?.isAdvanced?O(e,t):Promise.resolve(b(e,t))}function b(e,t){const{feature:r,imageProperties:n}=t,{width:s,height:c}=n,{attributes:l}=r,f=m("HPR",[l.cameraHeading,l.cameraPitch,l.cameraRoll]),y=Math.sin(l.imageRotation??0*p),d=Math.cos(l.imageRotation??0*p),g=s??1,h=c??1,v=[Math.abs(d*g+y*h),Math.abs(d*h-y*g)],w={horizontal:1/(2*Math.tan(l.horizontalFieldOfView*p/2)),vertical:1/(2*Math.tan(l.verticalFieldOfView*p/2))},b=[-w.horizontal,0,.5,0,w.vertical,.5,0,0,1];let O=new i(l.geometry);O.spatialReference.isWGS84&&4!==l.cameraOrientation?.type&&(O=o(O));const R=O.spatialReference.isWebMercator?1/Math.cos(Math.PI/2-2*Math.atan(Math.exp(-1*O.y/6378137))):1,x=a(new Array(9),f,b);return e.map((e=>{let t=new i(e);if(t.spatialReference.isWGS84)if(4===l.cameraOrientation?.type){const e=l.cameraOrientation;t=new i(u(t,[e.latitude,e.longitude,e.ellipsoidRadius,e.squaredEccentricity]))}else t=new i(o(t));const r=(t.z??0)-(O.z??0),a=(t.x-O.x)/R,n=(t.y-O.y)/R,s=(x[0]*a+x[1]*n+x[2]*r)/(x[6]*a+x[7]*n+x[8]*r),c=(x[3]*a+x[4]*n+x[5]*r)/(x[6]*a+x[7]*n+x[8]*r),m={x:s*v[0],y:c*v[1]};return{x:d*(m.x-v[0]/2)+y*(m.y-v[1]/2)+g/2,y:-y*(m.x-v[0]/2)+d*(m.y-v[1]/2)+h/2}}))}function O(t,r){const{feature:a}=r,{attributes:s}=a,c=s.cameraOrientation;if(!c)throw new e("groundToImageUtils:missing-camera-orientation-parameters","CameraOrientation Parameters are required to perform advanced transformations");let l=new i(s.location);l.spatialReference.isWGS84&&4!==s.cameraOrientation?.type&&(l=o(l));const f=l.spatialReference.isWebMercator?1/Math.cos(Math.PI/2-2*Math.atan(Math.exp(-1*l.y/6378137))):1;let p;if("esri.layers.orientedImagery.core.CameraOrientationOPK"===c.declaredClass){const{omega:e,phi:t,kappa:r}=c;p=m("OPK",[e,t,r])}else{const{cameraHeading:e,cameraPitch:t,cameraRoll:r}=s;p=m("HPR",[e,t,r])}const{principalOffsetPoint:y,focalLength:d,radialDistortionCoefficients:g,affineTransformations:h,tangentialDistortionCoefficients:v}=c;return Promise.all(t.map((e=>{let t;return e.spatialReference.equals(l.spatialReference)?(t=new i(e),r(t)):(t=n(e,l.spatialReference),t?r(t):null);function r(e){if(e.spatialReference.isWGS84)if(4===s.cameraOrientation?.type){const t=s.cameraOrientation;e=new i(u(e,[t.latitude,t.longitude,t.ellipsoidRadius,t.squaredEccentricity]))}else e=new i(o(e));const t=(e.z??0)-(l.z??0),r=(e.x-l.x)/f,a=(e.y-l.y)/f,n=(p[0]*r+p[1]*a+p[2]*t)/(p[6]*r+p[7]*a+p[8]*t),c=(p[3]*r+p[4]*a+p[5]*t)/(p[6]*r+p[7]*a+p[8]*t),m=n**2+c**2;let w=0,b=0,O=0,R=0,x=0,z=0,M=0;g&&(w=g[0]??0,b=g[1]??0,O=g[2]??0),v&&(R=v[0],x=v[1]),y&&(z=y[0]??0,M=y[1]??0);const P=1+(w||0)*m+(b||0)*m*m+(O||0)*m*m*m;let S=n*P+(R||0)*(m+2*n**2)+2*(x||0)*n*c,j=c*P+(x||0)*(m+2*c**2)+2*(R||0)*n*c;S=-(d??0)*S+z,j=-(d??0)*j+M;return{x:Number(h[0])+Number(h[1])*S+Number(h[2])*j,y:Number(h[3])+Number(h[4])*S+Number(h[5])*j}}})))}export{y as transformPoints,d as updateElevation,g as updateElevationUsingElevationSource};
